{
  "additionalProperties": false,
  "description": "DatadogAgent Deployment with the Datadog Operator.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "description": "DatadogAgentSpec defines the desired state of DatadogAgent",
      "properties": {
        "features": {
          "additionalProperties": false,
          "description": "Features running on the Agent and Cluster Agent",
          "properties": {
            "admissionController": {
              "additionalProperties": false,
              "description": "AdmissionController configuration.",
              "properties": {
                "agentCommunicationMode": {
                  "description": "AgentCommunicationMode corresponds to the mode used by the Datadog application libraries to communicate with the Agent.\nIt can be \"hostip\", \"service\", or \"socket\".",
                  "type": "string"
                },
                "agentSidecarInjection": {
                  "additionalProperties": false,
                  "description": "AgentSidecarInjection contains Agent sidecar injection configurations.",
                  "properties": {
                    "clusterAgentCommunicationEnabled": {
                      "description": "ClusterAgentCommunicationEnabled enables communication between Agent sidecars and the Cluster Agent.\nDefault : true",
                      "type": "boolean"
                    },
                    "enabled": {
                      "description": "Enabled enables Sidecar injections.\nDefault: false",
                      "type": "boolean"
                    },
                    "image": {
                      "additionalProperties": false,
                      "description": "Image overrides the default Agent image name and tag for the Agent sidecar.",
                      "properties": {
                        "jmxEnabled": {
                          "description": "Define whether the Agent image should support JMX.\nTo be used if the Name field does not correspond to a full image string.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Defines the Agent image name for the pod. You can provide this as:\n* \u003cNAME\u003e - use agent for the Datadog Agent, cluster-agent for the Datadog Cluster Agent, or dogstatsd for DogStatsD.\n  The full image string is derived from global.registry, [key].image.tag, and [key].image.jmxEnabled.\n* \u003cNAME\u003e:\u003cTAG\u003e - For example, agent:latest. The registry is derived from global.registry. [key].image.tag and [key].image.jmxEnabled are ignored.\n* \u003cREGISTRY\u003e/\u003cNAME\u003e:\u003cTAG\u003e - For example, gcr.io/datadoghq/agent:latest. If the full image string is specified\n  like this, then global.registry, [key].image.tag, and [key].image.jmxEnabled are ignored.",
                          "type": "string"
                        },
                        "pullPolicy": {
                          "description": "The Kubernetes pull policy:\nUse Always, Never, or IfNotPresent.",
                          "type": "string"
                        },
                        "pullSecrets": {
                          "description": "It is possible to specify Docker registry credentials.\nSee https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                          "items": {
                            "additionalProperties": false,
                            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                            "properties": {
                              "name": {
                                "default": "",
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic"
                          },
                          "type": "array"
                        },
                        "tag": {
                          "description": "Define the image tag to use.\nTo be used if the Name field does not correspond to a full image string.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "profiles": {
                      "description": "Profiles define the sidecar configuration override. Only one profile is supported.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Profile defines a sidecar configuration override.",
                        "properties": {
                          "env": {
                            "description": "EnvVars specifies the environment variables for the profile.",
                            "items": {
                              "additionalProperties": false,
                              "description": "EnvVar represents an environment variable present in a Container.",
                              "properties": {
                                "name": {
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "additionalProperties": false,
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "additionalProperties": false,
                                      "description": "Selects a key of a ConfigMap.",
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "default": "",
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        },
                                        "optional": {
                                          "description": "Specify whether the ConfigMap or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "key"
                                      ],
                                      "type": "object",
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "fieldRef": {
                                      "additionalProperties": false,
                                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                      "properties": {
                                        "apiVersion": {
                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "description": "Path of the field to select in the specified API version.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "fieldPath"
                                      ],
                                      "type": "object",
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "resourceFieldRef": {
                                      "additionalProperties": false,
                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                      "properties": {
                                        "containerName": {
                                          "description": "Container name: required for volumes, optional for env vars",
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "resource": {
                                          "description": "Required: resource to select",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "resource"
                                      ],
                                      "type": "object",
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "secretKeyRef": {
                                      "additionalProperties": false,
                                      "description": "Selects a key of a secret in the pod's namespace",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "default": "",
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        },
                                        "optional": {
                                          "description": "Specify whether the Secret or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "key"
                                      ],
                                      "type": "object",
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "type": "array",
                            "x-kubernetes-list-map-keys": [
                              "name"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "resources": {
                            "additionalProperties": false,
                            "description": "ResourceRequirements specifies the resource requirements for the profile.",
                            "properties": {
                              "claims": {
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                  "properties": {
                                    "name": {
                                      "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                      "type": "string"
                                    },
                                    "request": {
                                      "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "limits": {
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                },
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                },
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "provider": {
                      "description": "Provider is used to add infrastructure provider-specific configurations to the Agent sidecar.\nCurrently only \"fargate\" is supported.\nTo use the feature in other environments (including local testing) omit the config.\nSee also: https://docs.datadoghq.com/integrations/eks_fargate",
                      "type": "string"
                    },
                    "registry": {
                      "description": "Registry overrides the default registry for the sidecar Agent.",
                      "type": "string"
                    },
                    "selectors": {
                      "description": "Selectors define the pod selector for sidecar injection. Only one rule is supported.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Selectors define a pod selector for sidecar injection.",
                        "properties": {
                          "namespaceSelector": {
                            "additionalProperties": false,
                            "description": "NamespaceSelector specifies the label selector for namespaces.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic"
                          },
                          "objectSelector": {
                            "additionalProperties": false,
                            "description": "ObjectSelector specifies the label selector for objects.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "type": "object"
                },
                "cwsInstrumentation": {
                  "additionalProperties": false,
                  "description": "CWSInstrumentation holds the CWS Instrumentation endpoint configuration",
                  "properties": {
                    "enabled": {
                      "description": "Enable the CWS Instrumentation admission controller endpoint.\nDefault: false",
                      "type": "boolean"
                    },
                    "mode": {
                      "description": "Mode defines the behavior of the CWS Instrumentation endpoint, and can be either \"init_container\" or \"remote_copy\".\nDefault: \"remote_copy\"",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enabled enables the Admission Controller.\nDefault: true",
                  "type": "boolean"
                },
                "failurePolicy": {
                  "description": "FailurePolicy determines how unrecognized and timeout errors are handled.",
                  "type": "string"
                },
                "mutateUnlabelled": {
                  "description": "MutateUnlabelled enables config injection without the need of pod label 'admission.datadoghq.com/enabled=\"true\"'.\nDefault: false",
                  "type": "boolean"
                },
                "mutation": {
                  "additionalProperties": false,
                  "description": "Mutation contains Admission Controller mutation configurations.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables the Admission Controller mutation webhook.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "registry": {
                  "description": "Registry defines an image registry for the admission controller.",
                  "type": "string"
                },
                "serviceName": {
                  "description": "ServiceName corresponds to the webhook service name.",
                  "type": "string"
                },
                "validation": {
                  "additionalProperties": false,
                  "description": "Validation contains Admission Controller validation configurations.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables the Admission Controller validation webhook.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "webhookName": {
                  "description": "WebhookName is a custom name for the MutatingWebhookConfiguration.\nDefault: \"datadog-webhook\"",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "apm": {
              "additionalProperties": false,
              "description": "APM (Application Performance Monitoring) configuration.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables Application Performance Monitoring.\nDefault: true",
                  "type": "boolean"
                },
                "hostPortConfig": {
                  "additionalProperties": false,
                  "description": "HostPortConfig contains host port configuration.\nEnabled Default: false\nPort Default: 8126",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables host port configuration",
                      "type": "boolean"
                    },
                    "hostPort": {
                      "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "instrumentation": {
                  "additionalProperties": false,
                  "description": "SingleStepInstrumentation allows the agent to inject the Datadog APM libraries into all pods in the cluster.\nFeature is in beta.\nSee also: https://docs.datadoghq.com/tracing/trace_collection/single-step-apm\nEnabled Default: false",
                  "properties": {
                    "disabledNamespaces": {
                      "description": "DisabledNamespaces disables injecting the Datadog APM libraries into pods in specific namespaces.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "enabled": {
                      "description": "Enabled enables injecting the Datadog APM libraries into all pods in the cluster.\nDefault: false",
                      "type": "boolean"
                    },
                    "enabledNamespaces": {
                      "description": "EnabledNamespaces enables injecting the Datadog APM libraries into pods in specific namespaces.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "languageDetection": {
                      "additionalProperties": false,
                      "description": "LanguageDetection detects languages and adds them as annotations on Deployments, but does not use these languages for injecting libraries to workload pods.\n(Requires Agent 7.52.0+ and Cluster Agent 7.52.0+)",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Language Detection to automatically detect languages of user workloads (beta).\nRequires SingleStepInstrumentation.Enabled to be true.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "libVersions": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "LibVersions configures injection of specific tracing library versions with Single Step Instrumentation.\n\u003cLibrary\u003e: \u003cVersion\u003e\nex: \"java\": \"v1.18.0\"",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "unixDomainSocketConfig": {
                  "additionalProperties": false,
                  "description": "UnixDomainSocketConfig contains socket configuration.\nSee also: https://docs.datadoghq.com/agent/kubernetes/apm/?tab=helm#agent-environment-variables\nEnabled Default: true\nPath Default: `/var/run/datadog/apm.socket`",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Unix Domain Socket.\nDefault: true",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path defines the socket path used when enabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "asm": {
              "additionalProperties": false,
              "description": "ASM (Application Security Management) configuration.",
              "properties": {
                "iast": {
                  "additionalProperties": false,
                  "description": "IAST configures Interactive Application Security Testing.\nEnabled Default: false",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Interactive Application Security Testing (IAST).\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "sca": {
                  "additionalProperties": false,
                  "description": "SCA configures Software Composition Analysis.\nEnabled Default: false",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Software Composition Analysis (SCA).\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "threats": {
                  "additionalProperties": false,
                  "description": "Threats configures ASM App \u0026 API Protection.\nEnabled Default: false",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables ASM App \u0026 API Protection.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": false,
              "description": "Autoscaling configuration.",
              "properties": {
                "workload": {
                  "additionalProperties": false,
                  "description": "Workload contains the configuration for the workload autoscaling product.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables the workload autoscaling product.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "clusterChecks": {
              "additionalProperties": false,
              "description": "ClusterChecks configuration.",
              "properties": {
                "enabled": {
                  "description": "Enables Cluster Checks scheduling in the Cluster Agent.\nDefault: true",
                  "type": "boolean"
                },
                "useClusterChecksRunners": {
                  "description": "Enabled enables Cluster Checks Runners to run all Cluster Checks.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "cspm": {
              "additionalProperties": false,
              "description": "CSPM (Cloud Security Posture Management) configuration.",
              "properties": {
                "checkInterval": {
                  "description": "CheckInterval defines the check interval.",
                  "type": "string"
                },
                "customBenchmarks": {
                  "additionalProperties": false,
                  "description": "CustomBenchmarks contains CSPM benchmarks.\nThe content of the ConfigMap will be merged with the benchmarks bundled with the agent.\nAny benchmarks with the same name as those existing in the agent will take precedence.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enabled enables Cloud Security Posture Management.\nDefault: false",
                  "type": "boolean"
                },
                "hostBenchmarks": {
                  "additionalProperties": false,
                  "description": "HostBenchmarks contains configuration for host benchmarks.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables host benchmarks.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "cws": {
              "additionalProperties": false,
              "description": "CWS (Cloud Workload Security) configuration.",
              "properties": {
                "customPolicies": {
                  "additionalProperties": false,
                  "description": "CustomPolicies contains security policies.\nThe content of the ConfigMap will be merged with the policies bundled with the agent.\nAny policies with the same name as those existing in the agent will take precedence.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enabled enables Cloud Workload Security.\nDefault: false",
                  "type": "boolean"
                },
                "network": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Cloud Workload Security Network detections.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "remoteConfiguration": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Remote Configuration for Cloud Workload Security.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "securityProfiles": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Security Profiles collection for Cloud Workload Security.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "syscallMonitorEnabled": {
                  "description": "SyscallMonitorEnabled enables Syscall Monitoring (recommended for troubleshooting only).\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "dogstatsd": {
              "additionalProperties": false,
              "description": "Dogstatsd configuration.",
              "properties": {
                "hostPortConfig": {
                  "additionalProperties": false,
                  "description": "HostPortConfig contains host port configuration.\nEnabled Default: false\nPort Default: 8125",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables host port configuration",
                      "type": "boolean"
                    },
                    "hostPort": {
                      "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "mapperProfiles": {
                  "additionalProperties": false,
                  "description": "Configure the Dogstasd Mapper Profiles.\nCan be passed as raw data or via a json encoded string in a config map.\nSee also: https://docs.datadoghq.com/developers/dogstatsd/dogstatsd_mapper/",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "originDetectionEnabled": {
                  "description": "OriginDetectionEnabled enables origin detection for container tagging.\nSee also: https://docs.datadoghq.com/developers/dogstatsd/unix_socket/#using-origin-detection-for-container-tagging",
                  "type": "boolean"
                },
                "tagCardinality": {
                  "description": "TagCardinality configures tag cardinality for the metrics collected using origin detection (`low`, `orchestrator` or `high`).\nSee also: https://docs.datadoghq.com/getting_started/tagging/assigning_tags/?tab=containerizedenvironments#environment-variables\nCardinality default: low",
                  "type": "string"
                },
                "unixDomainSocketConfig": {
                  "additionalProperties": false,
                  "description": "UnixDomainSocketConfig contains socket configuration.\nSee also: https://docs.datadoghq.com/agent/kubernetes/apm/?tab=helm#agent-environment-variables\nEnabled Default: true\nPath Default: `/var/run/datadog/dsd.socket`",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Unix Domain Socket.\nDefault: true",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path defines the socket path used when enabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ebpfCheck": {
              "additionalProperties": false,
              "description": "EBPFCheck configuration.",
              "properties": {
                "enabled": {
                  "description": "Enables the eBPF check.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "eventCollection": {
              "additionalProperties": false,
              "description": "EventCollection configuration.",
              "properties": {
                "collectKubernetesEvents": {
                  "description": "CollectKubernetesEvents enables Kubernetes event collection.\nDefault: true",
                  "type": "boolean"
                },
                "collectedEventTypes": {
                  "description": "CollectedEventTypes defines the list of events to collect when UnbundleEvents is enabled.\nDefault:\n[\n{\"kind\":\"Pod\",\"reasons\":[\"Failed\",\"BackOff\",\"Unhealthy\",\"FailedScheduling\",\"FailedMount\",\"FailedAttachVolume\"]},\n{\"kind\":\"Node\",\"reasons\":[\"TerminatingEvictedPod\",\"NodeNotReady\",\"Rebooted\",\"HostPortConflict\"]},\n{\"kind\":\"CronJob\",\"reasons\":[\"SawCompletedJob\"]}\n]",
                  "items": {
                    "additionalProperties": false,
                    "description": "EventTypes defines the kind and reasons of events to collect.",
                    "properties": {
                      "kind": {
                        "description": "Kind is the kind of event to collect. (ex: Pod, Node, CronJob)",
                        "type": "string"
                      },
                      "reasons": {
                        "description": "Reasons is a list of event reasons to collect. (ex: Failed, BackOff, Unhealthy)",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "required": [
                      "kind",
                      "reasons"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "unbundleEvents": {
                  "description": "UnbundleEvents enables collection of Kubernetes events as individual events.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "externalMetricsServer": {
              "additionalProperties": false,
              "description": "ExternalMetricsServer configuration.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables the External Metrics Server.\nDefault: false",
                  "type": "boolean"
                },
                "endpoint": {
                  "additionalProperties": false,
                  "description": "Override the API endpoint for the External Metrics Server.\nURL Default: \"https://app.datadoghq.com\".",
                  "properties": {
                    "credentials": {
                      "additionalProperties": false,
                      "description": "Credentials defines the Datadog credentials used to submit data to/query data from Datadog.",
                      "properties": {
                        "apiKey": {
                          "description": "APIKey configures your Datadog API key.\nSee also: https://app.datadoghq.com/account/settings#agent/kubernetes",
                          "type": "string"
                        },
                        "apiSecret": {
                          "additionalProperties": false,
                          "description": "APISecret references an existing Secret which stores the API key instead of creating a new one.\nIf set, this parameter takes precedence over \"APIKey\".",
                          "properties": {
                            "keyName": {
                              "description": "KeyName is the key of the secret to use.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "SecretName is the name of the secret.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "secretName"
                          ],
                          "type": "object"
                        },
                        "appKey": {
                          "description": "AppKey configures your Datadog application key.\nIf you are using features.externalMetricsServer.enabled = true, you must set\na Datadog application key for read access to your metrics.",
                          "type": "string"
                        },
                        "appSecret": {
                          "additionalProperties": false,
                          "description": "AppSecret references an existing Secret which stores the application key instead of creating a new one.\nIf set, this parameter takes precedence over \"AppKey\".",
                          "properties": {
                            "keyName": {
                              "description": "KeyName is the key of the secret to use.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "SecretName is the name of the secret.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "secretName"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "url": {
                      "description": "URL defines the endpoint URL.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "port": {
                  "description": "Port specifies the metricsProvider External Metrics Server service port.\nDefault: 8443",
                  "format": "int32",
                  "type": "integer"
                },
                "registerAPIService": {
                  "description": "RegisterAPIService registers the External Metrics endpoint as an APIService\nDefault: true",
                  "type": "boolean"
                },
                "useDatadogMetrics": {
                  "description": "UseDatadogMetrics enables usage of the DatadogMetrics CRD (allowing one to scale on arbitrary Datadog metric queries).\nDefault: true",
                  "type": "boolean"
                },
                "wpaController": {
                  "description": "WPAController enables the informer and controller of the Watermark Pod Autoscaler.\nNOTE: The Watermark Pod Autoscaler controller needs to be installed.\nSee also: https://github.com/DataDog/watermarkpodautoscaler.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "helmCheck": {
              "additionalProperties": false,
              "description": "HelmCheck configuration.",
              "properties": {
                "collectEvents": {
                  "description": "CollectEvents set to `true` enables event collection in the Helm check\n(Requires Agent 7.36.0+ and Cluster Agent 1.20.0+)\nDefault: false",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Enabled enables the Helm check.\nDefault: false",
                  "type": "boolean"
                },
                "valuesAsTags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "ValuesAsTags collects Helm values from a release and uses them as tags\n(Requires Agent and Cluster Agent 7.40.0+).\nDefault: {}",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "kubeStateMetricsCore": {
              "additionalProperties": false,
              "description": "KubeStateMetricsCore check configuration.",
              "properties": {
                "conf": {
                  "additionalProperties": false,
                  "description": "Conf overrides the configuration for the default Kubernetes State Metrics Core check.\nThis must point to a ConfigMap containing a valid cluster check configuration.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enabled enables Kube State Metrics Core.\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "liveContainerCollection": {
              "additionalProperties": false,
              "description": "LiveContainerCollection configuration.",
              "properties": {
                "enabled": {
                  "description": "Enables container collection for the Live Container View.\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "liveProcessCollection": {
              "additionalProperties": false,
              "description": "LiveProcessCollection configuration.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables Process monitoring.\nDefault: false",
                  "type": "boolean"
                },
                "scrubProcessArguments": {
                  "description": "ScrubProcessArguments enables scrubbing of sensitive data in process command-lines (passwords, tokens, etc. ).\nDefault: true",
                  "type": "boolean"
                },
                "stripProcessArguments": {
                  "description": "StripProcessArguments enables stripping of all process arguments.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "logCollection": {
              "additionalProperties": false,
              "description": "LogCollection configuration.",
              "properties": {
                "containerCollectAll": {
                  "description": "ContainerCollectAll enables Log collection from all containers.\nDefault: false",
                  "type": "boolean"
                },
                "containerCollectUsingFiles": {
                  "description": "ContainerCollectUsingFiles enables log collection from files in `/var/log/pods instead` of using the container runtime API.\nCollecting logs from files is usually the most efficient way of collecting logs.\nSee also: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup\nDefault: true",
                  "type": "boolean"
                },
                "containerLogsPath": {
                  "description": "ContainerLogsPath allows log collection from the container log path.\nSet to a different path if you are not using the Docker runtime.\nSee also: https://docs.datadoghq.com/agent/kubernetes/daemonset_setup/?tab=k8sfile#create-manifest\nDefault: `/var/lib/docker/containers`",
                  "type": "string"
                },
                "containerSymlinksPath": {
                  "description": "ContainerSymlinksPath allows log collection to use symbolic links in this directory to validate container ID -\u003e pod.\nDefault: `/var/log/containers`",
                  "type": "string"
                },
                "enabled": {
                  "description": "Enabled enables Log collection.\nDefault: false",
                  "type": "boolean"
                },
                "openFilesLimit": {
                  "description": "OpenFilesLimit sets the maximum number of log files that the Datadog Agent tails.\nIncreasing this limit can increase resource consumption of the Agent.\nSee also: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup\nDefault: 100",
                  "format": "int32",
                  "type": "integer"
                },
                "podLogsPath": {
                  "description": "PodLogsPath allows log collection from a pod log path.\nDefault: `/var/log/pods`",
                  "type": "string"
                },
                "tempStoragePath": {
                  "description": "TempStoragePath (always mounted from the host) is used by the Agent to store information about processed log files.\nIf the Agent is restarted, it starts tailing the log files immediately.\nDefault: `/var/lib/datadog-agent/logs`",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "npm": {
              "additionalProperties": false,
              "description": "NPM (Network Performance Monitoring) configuration.",
              "properties": {
                "collectDNSStats": {
                  "description": "CollectDNSStats enables DNS stat collection.\nDefault: false",
                  "type": "boolean"
                },
                "enableConntrack": {
                  "description": "EnableConntrack enables the system-probe agent to connect to the netlink/conntrack subsystem to add NAT information to connection data.\nSee also: http://conntrack-tools.netfilter.org/\nDefault: false",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Enabled enables Network Performance Monitoring.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "oomKill": {
              "additionalProperties": false,
              "description": "OOMKill configuration.",
              "properties": {
                "enabled": {
                  "description": "Enables the OOMKill eBPF-based check.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "orchestratorExplorer": {
              "additionalProperties": false,
              "description": "OrchestratorExplorer check configuration.",
              "properties": {
                "conf": {
                  "additionalProperties": false,
                  "description": "Conf overrides the configuration for the default Orchestrator Explorer check.\nThis must point to a ConfigMap containing a valid cluster check configuration.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "customResources": {
                  "description": "`CustomResources` defines custom resources for the orchestrator explorer to collect.\nEach item should follow the convention `group/version/kind`. For example, `datadoghq.com/v1alpha1/datadogmetrics`.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "set"
                },
                "ddUrl": {
                  "description": "Override the API endpoint for the Orchestrator Explorer.\nURL Default: \"https://orchestrator.datadoghq.com\".",
                  "type": "string"
                },
                "enabled": {
                  "description": "Enabled enables the Orchestrator Explorer.\nDefault: true",
                  "type": "boolean"
                },
                "extraTags": {
                  "description": "Additional tags to associate with the collected data in the form of `a b c`.\nThis is a Cluster Agent option distinct from DD_TAGS that is used in the Orchestrator Explorer.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "set"
                },
                "scrubContainers": {
                  "description": "ScrubContainers enables scrubbing of sensitive container data (passwords, tokens, etc. ).\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "otlp": {
              "additionalProperties": false,
              "description": "OTLP ingest configuration",
              "properties": {
                "receiver": {
                  "additionalProperties": false,
                  "description": "Receiver contains configuration for the OTLP ingest receiver.",
                  "properties": {
                    "protocols": {
                      "additionalProperties": false,
                      "description": "Protocols contains configuration for the OTLP ingest receiver protocols.",
                      "properties": {
                        "grpc": {
                          "additionalProperties": false,
                          "description": "GRPC contains configuration for the OTLP ingest OTLP/gRPC receiver.",
                          "properties": {
                            "enabled": {
                              "description": "Enable the OTLP/gRPC endpoint. Host port is enabled by default and can be disabled.",
                              "type": "boolean"
                            },
                            "endpoint": {
                              "description": "Endpoint for OTLP/gRPC.\ngRPC supports several naming schemes: https://github.com/grpc/grpc/blob/master/doc/naming.md\nThe Datadog Operator supports only 'host:port' (usually `0.0.0.0:port`).\nDefault: `0.0.0.0:4317`.",
                              "type": "string"
                            },
                            "hostPortConfig": {
                              "additionalProperties": false,
                              "description": "Enable hostPort for OTLP/gRPC\nDefault: true",
                              "properties": {
                                "enabled": {
                                  "description": "Enabled enables host port configuration",
                                  "type": "boolean"
                                },
                                "hostPort": {
                                  "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "http": {
                          "additionalProperties": false,
                          "description": "HTTP contains configuration for the OTLP ingest OTLP/HTTP receiver.",
                          "properties": {
                            "enabled": {
                              "description": "Enable the OTLP/HTTP endpoint. Host port is enabled by default and can be disabled.",
                              "type": "boolean"
                            },
                            "endpoint": {
                              "description": "Endpoint for OTLP/HTTP.\nDefault: '0.0.0.0:4318'.",
                              "type": "string"
                            },
                            "hostPortConfig": {
                              "additionalProperties": false,
                              "description": "Enable hostPorts for OTLP/HTTP\nDefault: true",
                              "properties": {
                                "enabled": {
                                  "description": "Enabled enables host port configuration",
                                  "type": "boolean"
                                },
                                "hostPort": {
                                  "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "processDiscovery": {
              "additionalProperties": false,
              "description": "ProcessDiscovery configuration.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables the Process Discovery check in the Agent.\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "prometheusScrape": {
              "additionalProperties": false,
              "description": "PrometheusScrape configuration.",
              "properties": {
                "additionalConfigs": {
                  "description": "AdditionalConfigs allows adding advanced Prometheus check configurations with custom discovery rules.",
                  "type": "string"
                },
                "enableServiceEndpoints": {
                  "description": "EnableServiceEndpoints enables generating dedicated checks for service endpoints.\nDefault: false",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Enable autodiscovery of pods and services exposing Prometheus metrics.\nDefault: false",
                  "type": "boolean"
                },
                "version": {
                  "description": "Version specifies the version of the OpenMetrics check.\nDefault: 2",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "remoteConfiguration": {
              "additionalProperties": false,
              "description": "Remote Configuration configuration.",
              "properties": {
                "enabled": {
                  "description": "Enable this option to activate Remote Configuration.\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "sbom": {
              "additionalProperties": false,
              "description": "SBOM collection configuration.",
              "properties": {
                "containerImage": {
                  "additionalProperties": false,
                  "description": "SBOMTypeConfig contains configuration for a SBOM collection type.",
                  "properties": {
                    "analyzers": {
                      "description": "Analyzers to use for SBOM collection.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "enabled": {
                      "description": "Enable this option to activate SBOM collection.\nDefault: false",
                      "type": "boolean"
                    },
                    "overlayFSDirectScan": {
                      "description": "Enable this option to enable experimental overlayFS direct scan.\nDefault: false",
                      "type": "boolean"
                    },
                    "uncompressedLayersSupport": {
                      "description": "Enable this option to enable support for uncompressed layers.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enable this option to activate SBOM collection.\nDefault: false",
                  "type": "boolean"
                },
                "host": {
                  "additionalProperties": false,
                  "description": "SBOMTypeConfig contains configuration for a SBOM collection type.",
                  "properties": {
                    "analyzers": {
                      "description": "Analyzers to use for SBOM collection.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "enabled": {
                      "description": "Enable this option to activate SBOM collection.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "serviceDiscovery": {
              "additionalProperties": false,
              "description": "ServiceDiscovery",
              "properties": {
                "enabled": {
                  "description": "Enables the service discovery check.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "tcpQueueLength": {
              "additionalProperties": false,
              "description": "TCPQueueLength configuration.",
              "properties": {
                "enabled": {
                  "description": "Enables the TCP queue length eBPF-based check.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "usm": {
              "additionalProperties": false,
              "description": "USM (Universal Service Monitoring) configuration.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables Universal Service Monitoring.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "global": {
          "additionalProperties": false,
          "description": "Global settings to configure the agents",
          "properties": {
            "checksTagCardinality": {
              "description": "ChecksTagCardinality configures tag cardinality for the metrics collected by integrations (`low`, `orchestrator` or `high`).\nSee also: https://docs.datadoghq.com/getting_started/tagging/assigning_tags/?tab=containerizedenvironments#tags-cardinality.\nNot set by default to avoid overriding existing DD_CHECKS_TAG_CARDINALITY configurations, the default value in the Agent is low.\nRef: https://github.com/DataDog/datadog-agent/blob/856cf4a66142ce91fd4f8a278149436eb971184a/pkg/config/setup/config.go#L625.",
              "type": "string"
            },
            "clusterAgentToken": {
              "description": "ClusterAgentToken is the token for communication between the NodeAgent and ClusterAgent.",
              "type": "string"
            },
            "clusterAgentTokenSecret": {
              "additionalProperties": false,
              "description": "ClusterAgentTokenSecret is the secret containing the Cluster Agent token.",
              "properties": {
                "keyName": {
                  "description": "KeyName is the key of the secret to use.",
                  "type": "string"
                },
                "secretName": {
                  "description": "SecretName is the name of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "secretName"
              ],
              "type": "object"
            },
            "clusterName": {
              "description": "ClusterName sets a unique cluster name for the deployment to easily scope monitoring data in the Datadog app.",
              "type": "string"
            },
            "containerStrategy": {
              "description": "ContainerStrategy determines whether agents run in a single or multiple containers.\nDefault: 'optimized'",
              "type": "string"
            },
            "credentials": {
              "additionalProperties": false,
              "description": "Credentials defines the Datadog credentials used to submit data to/query data from Datadog.",
              "properties": {
                "apiKey": {
                  "description": "APIKey configures your Datadog API key.\nSee also: https://app.datadoghq.com/account/settings#agent/kubernetes",
                  "type": "string"
                },
                "apiSecret": {
                  "additionalProperties": false,
                  "description": "APISecret references an existing Secret which stores the API key instead of creating a new one.\nIf set, this parameter takes precedence over \"APIKey\".",
                  "properties": {
                    "keyName": {
                      "description": "KeyName is the key of the secret to use.",
                      "type": "string"
                    },
                    "secretName": {
                      "description": "SecretName is the name of the secret.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName"
                  ],
                  "type": "object"
                },
                "appKey": {
                  "description": "AppKey configures your Datadog application key.\nIf you are using features.externalMetricsServer.enabled = true, you must set\na Datadog application key for read access to your metrics.",
                  "type": "string"
                },
                "appSecret": {
                  "additionalProperties": false,
                  "description": "AppSecret references an existing Secret which stores the application key instead of creating a new one.\nIf set, this parameter takes precedence over \"AppKey\".",
                  "properties": {
                    "keyName": {
                      "description": "KeyName is the key of the secret to use.",
                      "type": "string"
                    },
                    "secretName": {
                      "description": "SecretName is the name of the secret.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "criSocketPath": {
              "description": "Path to the container runtime socket (if different from Docker).",
              "type": "string"
            },
            "disableNonResourceRules": {
              "description": "Set DisableNonResourceRules to exclude NonResourceURLs from default ClusterRoles.\nRequired 'true' for Google Cloud Marketplace.",
              "type": "boolean"
            },
            "dockerSocketPath": {
              "description": "Path to the docker runtime socket.",
              "type": "string"
            },
            "endpoint": {
              "additionalProperties": false,
              "description": "Endpoint is the Datadog intake URL the Agent data are sent to.\nOnly set this option if you need the Agent to send data to a custom URL.\nOverrides the site setting defined in `Site`.",
              "properties": {
                "credentials": {
                  "additionalProperties": false,
                  "description": "Credentials defines the Datadog credentials used to submit data to/query data from Datadog.",
                  "properties": {
                    "apiKey": {
                      "description": "APIKey configures your Datadog API key.\nSee also: https://app.datadoghq.com/account/settings#agent/kubernetes",
                      "type": "string"
                    },
                    "apiSecret": {
                      "additionalProperties": false,
                      "description": "APISecret references an existing Secret which stores the API key instead of creating a new one.\nIf set, this parameter takes precedence over \"APIKey\".",
                      "properties": {
                        "keyName": {
                          "description": "KeyName is the key of the secret to use.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "SecretName is the name of the secret.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "secretName"
                      ],
                      "type": "object"
                    },
                    "appKey": {
                      "description": "AppKey configures your Datadog application key.\nIf you are using features.externalMetricsServer.enabled = true, you must set\na Datadog application key for read access to your metrics.",
                      "type": "string"
                    },
                    "appSecret": {
                      "additionalProperties": false,
                      "description": "AppSecret references an existing Secret which stores the application key instead of creating a new one.\nIf set, this parameter takes precedence over \"AppKey\".",
                      "properties": {
                        "keyName": {
                          "description": "KeyName is the key of the secret to use.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "SecretName is the name of the secret.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "secretName"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "description": "URL defines the endpoint URL.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "env": {
              "description": "Env contains a list of environment variables that are set for all Agents.",
              "items": {
                "additionalProperties": false,
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": "string"
                  },
                  "valueFrom": {
                    "additionalProperties": false,
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "properties": {
                      "configMapKeyRef": {
                        "additionalProperties": false,
                        "description": "Selects a key of a ConfigMap.",
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "default": "",
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "additionalProperties": false,
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fieldPath"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "additionalProperties": false,
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": "string"
                          },
                          "divisor": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "required": [
                          "resource"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "additionalProperties": false,
                        "description": "Selects a key of a secret in the pod's namespace",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "default": "",
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "fips": {
              "additionalProperties": false,
              "description": "FIPS contains configuration used to customize the FIPS proxy sidecar.",
              "properties": {
                "customFIPSConfig": {
                  "additionalProperties": false,
                  "description": "CustomFIPSConfig configures a custom configMap to provide the FIPS configuration.\nSpecify custom contents for the FIPS proxy sidecar container config\n(/etc/datadog-fips-proxy/datadog-fips-proxy.cfg). If empty, the default FIPS\nproxy sidecar container config is used.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "enabled": {
                  "description": "Enable FIPS sidecar.",
                  "type": "boolean"
                },
                "image": {
                  "additionalProperties": false,
                  "description": "The container image of the FIPS sidecar.",
                  "properties": {
                    "jmxEnabled": {
                      "description": "Define whether the Agent image should support JMX.\nTo be used if the Name field does not correspond to a full image string.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Defines the Agent image name for the pod. You can provide this as:\n* \u003cNAME\u003e - use agent for the Datadog Agent, cluster-agent for the Datadog Cluster Agent, or dogstatsd for DogStatsD.\n  The full image string is derived from global.registry, [key].image.tag, and [key].image.jmxEnabled.\n* \u003cNAME\u003e:\u003cTAG\u003e - For example, agent:latest. The registry is derived from global.registry. [key].image.tag and [key].image.jmxEnabled are ignored.\n* \u003cREGISTRY\u003e/\u003cNAME\u003e:\u003cTAG\u003e - For example, gcr.io/datadoghq/agent:latest. If the full image string is specified\n  like this, then global.registry, [key].image.tag, and [key].image.jmxEnabled are ignored.",
                      "type": "string"
                    },
                    "pullPolicy": {
                      "description": "The Kubernetes pull policy:\nUse Always, Never, or IfNotPresent.",
                      "type": "string"
                    },
                    "pullSecrets": {
                      "description": "It is possible to specify Docker registry credentials.\nSee https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                      "items": {
                        "additionalProperties": false,
                        "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                        "properties": {
                          "name": {
                            "default": "",
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      },
                      "type": "array"
                    },
                    "tag": {
                      "description": "Define the image tag to use.\nTo be used if the Name field does not correspond to a full image string.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "localAddress": {
                  "description": "Set the local IP address.\nDefault: `127.0.0.1`",
                  "type": "string"
                },
                "port": {
                  "description": "Port specifies which port is used by the containers to communicate to the FIPS sidecar.\nDefault: 9803",
                  "format": "int32",
                  "type": "integer"
                },
                "portRange": {
                  "description": "PortRange specifies the number of ports used.\nDefault: 15",
                  "format": "int32",
                  "type": "integer"
                },
                "resources": {
                  "additionalProperties": false,
                  "description": "Resources is the requests and limits for the FIPS sidecar container.",
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "additionalProperties": false,
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                            "type": "string"
                          },
                          "request": {
                            "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "useHTTPS": {
                  "description": "UseHTTPS enables HTTPS.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "kubelet": {
              "additionalProperties": false,
              "description": "Kubelet contains the kubelet configuration parameters.",
              "properties": {
                "agentCAPath": {
                  "description": "AgentCAPath is the container path where the kubelet CA certificate is stored.\nDefault: '/var/run/host-kubelet-ca.crt' if hostCAPath is set, else '/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'",
                  "type": "string"
                },
                "host": {
                  "additionalProperties": false,
                  "description": "Host overrides the host used to contact kubelet API (default to status.hostIP).",
                  "properties": {
                    "configMapKeyRef": {
                      "additionalProperties": false,
                      "description": "Selects a key of a ConfigMap.",
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "fieldRef": {
                      "additionalProperties": false,
                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                      "properties": {
                        "apiVersion": {
                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                          "type": "string"
                        },
                        "fieldPath": {
                          "description": "Path of the field to select in the specified API version.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "fieldPath"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "resourceFieldRef": {
                      "additionalProperties": false,
                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                      "properties": {
                        "containerName": {
                          "description": "Container name: required for volumes, optional for env vars",
                          "type": "string"
                        },
                        "divisor": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "resource": {
                          "description": "Required: resource to select",
                          "type": "string"
                        }
                      },
                      "required": [
                        "resource"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "additionalProperties": false,
                      "description": "Selects a key of a secret in the pod's namespace",
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "type": "object"
                },
                "hostCAPath": {
                  "description": "HostCAPath is the host path where the kubelet CA certificate is stored.",
                  "type": "string"
                },
                "tlsVerify": {
                  "description": "TLSVerify toggles kubelet TLS verification.\nDefault: true",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "kubernetesResourcesAnnotationsAsTags": {
              "additionalProperties": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "description": "Provide a mapping of Kubernetes Resource Groups to annotations mapping to Datadog Tags.\n\u003cKUBERNETES_RESOURCE_GROUP\u003e:\n\t\t\u003cKUBERNETES_ANNOTATION\u003e: \u003cDATADOG_TAG_KEY\u003e\nKUBERNETES_RESOURCE_GROUP should be in the form `{resource}.{group}` or `{resource}` (example: deployments.apps, pods)",
              "type": "object"
            },
            "kubernetesResourcesLabelsAsTags": {
              "additionalProperties": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "description": "Provide a mapping of Kubernetes Resource Groups to labels mapping to Datadog Tags.\n\u003cKUBERNETES_RESOURCE_GROUP\u003e:\n\t\t\u003cKUBERNETES_LABEL\u003e: \u003cDATADOG_TAG_KEY\u003e\nKUBERNETES_RESOURCE_GROUP should be in the form `{resource}.{group}` or `{resource}` (example: deployments.apps, pods)",
              "type": "object"
            },
            "localService": {
              "additionalProperties": false,
              "description": "LocalService contains configuration to customize the internal traffic policy service.",
              "properties": {
                "forceEnableLocalService": {
                  "description": "ForceEnableLocalService forces the creation of the internal traffic policy service to target the agent running on the local node.\nThis parameter only applies to Kubernetes 1.21, where the feature is in alpha and is disabled by default.\n(On Kubernetes 1.22+, the feature entered beta and the internal traffic service is created by default, so this parameter is ignored.)\nDefault: false",
                  "type": "boolean"
                },
                "nameOverride": {
                  "description": "NameOverride defines the name of the internal traffic service to target the agent running on the local node.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "logLevel": {
              "description": "LogLevel sets logging verbosity. This can be overridden by container.\nValid log levels are: trace, debug, info, warn, error, critical, and off.\nDefault: 'info'",
              "type": "string"
            },
            "namespaceAnnotationsAsTags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Provide a mapping of Kubernetes Namespace Annotations to Datadog Tags.\n\u003cKUBERNETES_LABEL\u003e: \u003cDATADOG_TAG_KEY\u003e",
              "type": "object"
            },
            "namespaceLabelsAsTags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Provide a mapping of Kubernetes Namespace Labels to Datadog Tags.\n\u003cKUBERNETES_NAMESPACE_LABEL\u003e: \u003cDATADOG_TAG_KEY\u003e",
              "type": "object"
            },
            "networkPolicy": {
              "additionalProperties": false,
              "description": "NetworkPolicy contains the network configuration.",
              "properties": {
                "create": {
                  "description": "Create defines whether to create a NetworkPolicy for the current deployment.",
                  "type": "boolean"
                },
                "dnsSelectorEndpoints": {
                  "description": "DNSSelectorEndpoints defines the cilium selector of the DNS server entity.",
                  "items": {
                    "additionalProperties": false,
                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items": {
                          "additionalProperties": false,
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "required": [
                            "key",
                            "operator"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "flavor": {
                  "description": "Flavor defines Which network policy to use.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nodeLabelsAsTags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Provide a mapping of Kubernetes Node Labels to Datadog Tags.\n\u003cKUBERNETES_NODE_LABEL\u003e: \u003cDATADOG_TAG_KEY\u003e",
              "type": "object"
            },
            "originDetectionUnified": {
              "additionalProperties": false,
              "description": "OriginDetectionUnified defines the origin detection unified mechanism behavior.",
              "properties": {
                "enabled": {
                  "description": "Enabled enables unified mechanism for origin detection.\nDefault: false",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "podAnnotationsAsTags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Provide a mapping of Kubernetes Annotations to Datadog Tags.\n\u003cKUBERNETES_ANNOTATIONS\u003e: \u003cDATADOG_TAG_KEY\u003e",
              "type": "object"
            },
            "podLabelsAsTags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Provide a mapping of Kubernetes Labels to Datadog Tags.\n\u003cKUBERNETES_LABEL\u003e: \u003cDATADOG_TAG_KEY\u003e",
              "type": "object"
            },
            "registry": {
              "description": "Registry is the image registry to use for all Agent images.\nUse 'public.ecr.aws/datadog' for AWS ECR.\nUse 'datadoghq.azurecr.io' for Azure Container Registry.\nUse 'gcr.io/datadoghq' for Google Container Registry.\nUse 'eu.gcr.io/datadoghq' for Google Container Registry in the EU region.\nUse 'asia.gcr.io/datadoghq' for Google Container Registry in the Asia region.\nUse 'docker.io/datadog' for DockerHub.\nDefault: 'gcr.io/datadoghq'",
              "type": "string"
            },
            "runProcessChecksInCoreAgent": {
              "description": "Configure whether the Process Agent or core Agent collects process and/or container information (Linux only).\nThe Process Agent container won't spin up if there are no other running checks as a result.\n(Requires Agent 7.57.0+)\nDefault: 'false'",
              "type": "boolean"
            },
            "secretBackend": {
              "additionalProperties": false,
              "description": "Configure the secret backend feature https://docs.datadoghq.com/agent/guide/secrets-management\nSee also: https://github.com/DataDog/datadog-operator/blob/main/docs/secret_management.md",
              "properties": {
                "args": {
                  "description": "List of arguments to pass to the command (space-separated strings).",
                  "type": "string"
                },
                "command": {
                  "description": "The secret backend command to use. Datadog provides a pre-defined binary `/readsecret_multiple_providers.sh`.\nRead more about `/readsecret_multiple_providers.sh` at https://docs.datadoghq.com/agent/configuration/secrets-management/?tab=linux#script-for-reading-from-multiple-secret-providers.",
                  "type": "string"
                },
                "enableGlobalPermissions": {
                  "description": "Whether to create a global permission allowing Datadog agents to read all Kubernetes secrets.\nDefault: `false`.",
                  "type": "boolean"
                },
                "roles": {
                  "description": "Roles for Datadog to read the specified secrets, replacing `enableGlobalPermissions`.\nThey are defined as a list of namespace/secrets.\nEach defined namespace needs to be present in the DatadogAgent controller using `WATCH_NAMESPACE` or `DD_AGENT_WATCH_NAMESPACE`.\nSee also: https://github.com/DataDog/datadog-operator/blob/main/docs/secret_management.md#how-to-deploy-the-agent-components-using-the-secret-backend-feature-with-datadogagent.",
                  "items": {
                    "additionalProperties": false,
                    "description": "SecretBackendRolesConfig provides configuration of the secrets Datadog agents can read for the SecretBackend feature",
                    "properties": {
                      "namespace": {
                        "description": "Namespace defines the namespace in which the secrets reside.",
                        "type": "string"
                      },
                      "secrets": {
                        "description": "Secrets defines the list of secrets for which a role should be created.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "required": [
                      "namespace",
                      "secrets"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "timeout": {
                  "description": "The command timeout in seconds.\nDefault: `30`.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "site": {
              "description": "Site is the Datadog intake site Agent data are sent to.\nSet to 'datadoghq.com' to send data to the US1 site (default).\nSet to 'datadoghq.eu' to send data to the EU site.\nSet to 'us3.datadoghq.com' to send data to the US3 site.\nSet to 'us5.datadoghq.com' to send data to the US5 site.\nSet to 'ddog-gov.com' to send data to the US1-FED site.\nSet to 'ap1.datadoghq.com' to send data to the AP1 site.\nDefault: 'datadoghq.com'",
              "type": "string"
            },
            "tags": {
              "description": "Tags contains a list of tags to attach to every metric, event and service check collected.\nLearn more about tagging: https://docs.datadoghq.com/tagging/",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            }
          },
          "type": "object"
        },
        "override": {
          "additionalProperties": {
            "additionalProperties": false,
            "description": "DatadogAgentComponentOverride is the generic description equivalent to a subset of the PodTemplate for a component.",
            "properties": {
              "affinity": {
                "additionalProperties": false,
                "description": "If specified, the pod's scheduling constraints.",
                "properties": {
                  "nodeAffinity": {
                    "additionalProperties": false,
                    "description": "Describes node affinity scheduling rules for the pod.",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                        "items": {
                          "additionalProperties": false,
                          "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                          "properties": {
                            "preference": {
                              "additionalProperties": false,
                              "description": "A node selector term, associated with the corresponding weight.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "weight": {
                              "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "preference",
                            "weight"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "additionalProperties": false,
                        "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                        "properties": {
                          "nodeSelectorTerms": {
                            "description": "Required. A list of node selector terms. The terms are ORed.",
                            "items": {
                              "additionalProperties": false,
                              "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "required": [
                          "nodeSelectorTerms"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "type": "object"
                  },
                  "podAffinity": {
                    "additionalProperties": false,
                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                        "items": {
                          "additionalProperties": false,
                          "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                          "properties": {
                            "podAffinityTerm": {
                              "additionalProperties": false,
                              "description": "Required. A pod affinity term, associated with the corresponding weight.",
                              "properties": {
                                "labelSelector": {
                                  "additionalProperties": false,
                                  "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "mismatchLabelKeys": {
                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "namespaceSelector": {
                                  "additionalProperties": false,
                                  "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "topologyKey"
                              ],
                              "type": "object"
                            },
                            "weight": {
                              "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "podAffinityTerm",
                            "weight"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                          "properties": {
                            "labelSelector": {
                              "additionalProperties": false,
                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "matchLabelKeys": {
                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "mismatchLabelKeys": {
                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "namespaceSelector": {
                              "additionalProperties": false,
                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "topologyKey": {
                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "topologyKey"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "type": "object"
                  },
                  "podAntiAffinity": {
                    "additionalProperties": false,
                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                        "items": {
                          "additionalProperties": false,
                          "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                          "properties": {
                            "podAffinityTerm": {
                              "additionalProperties": false,
                              "description": "Required. A pod affinity term, associated with the corresponding weight.",
                              "properties": {
                                "labelSelector": {
                                  "additionalProperties": false,
                                  "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "mismatchLabelKeys": {
                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "namespaceSelector": {
                                  "additionalProperties": false,
                                  "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "topologyKey"
                              ],
                              "type": "object"
                            },
                            "weight": {
                              "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "podAffinityTerm",
                            "weight"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                          "properties": {
                            "labelSelector": {
                              "additionalProperties": false,
                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "matchLabelKeys": {
                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "mismatchLabelKeys": {
                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "namespaceSelector": {
                              "additionalProperties": false,
                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "topologyKey": {
                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "topologyKey"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "annotations": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Annotations provide annotations that are added to the different component (Datadog Agent, Cluster Agent, Cluster Check Runner) pods.",
                "type": "object"
              },
              "containers": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "description": "DatadogAgentGenericContainer is the generic structure describing any container's common configuration.",
                  "properties": {
                    "appArmorProfileName": {
                      "description": "AppArmorProfileName specifies an apparmor profile.",
                      "type": "string"
                    },
                    "args": {
                      "description": "Args allows the specification of extra args to the `Command` parameter",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "command": {
                      "description": "Command allows the specification of a custom entrypoint for container",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "env": {
                      "description": "Specify additional environment variables in the container.\nSee also: https://docs.datadoghq.com/agent/kubernetes/?tab=helm#environment-variables",
                      "items": {
                        "additionalProperties": false,
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "additionalProperties": false,
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "properties": {
                              "configMapKeyRef": {
                                "additionalProperties": false,
                                "description": "Selects a key of a ConfigMap.",
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "default": "",
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "additionalProperties": false,
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldPath"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "additionalProperties": false,
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "resource"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "additionalProperties": false,
                                "description": "Selects a key of a secret in the pod's namespace",
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "default": "",
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "healthPort": {
                      "description": "HealthPort of the container for the internal liveness probe.\nMust be the same as the Liveness/Readiness probes.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "livenessProbe": {
                      "additionalProperties": false,
                      "description": "Configure the Liveness Probe of the container",
                      "properties": {
                        "exec": {
                          "additionalProperties": false,
                          "description": "Exec specifies the action to take.",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "type": "object"
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "grpc": {
                          "additionalProperties": false,
                          "description": "GRPC specifies an action involving a GRPC port.",
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "service": {
                              "default": "",
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "httpGet": {
                          "additionalProperties": false,
                          "description": "HTTPGet specifies the http request to perform.",
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "items": {
                                "additionalProperties": false,
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "tcpSocket": {
                          "additionalProperties": false,
                          "description": "TCPSocket specifies an action involving a TCP port.",
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "logLevel": {
                      "description": "LogLevel sets logging verbosity (overrides global setting).\nValid log levels are: trace, debug, info, warn, error, critical, and off.\nDefault: 'info'",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the container that is overridden",
                      "type": "string"
                    },
                    "readinessProbe": {
                      "additionalProperties": false,
                      "description": "Configure the Readiness Probe of the container",
                      "properties": {
                        "exec": {
                          "additionalProperties": false,
                          "description": "Exec specifies the action to take.",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "type": "object"
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "grpc": {
                          "additionalProperties": false,
                          "description": "GRPC specifies an action involving a GRPC port.",
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "service": {
                              "default": "",
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "httpGet": {
                          "additionalProperties": false,
                          "description": "HTTPGet specifies the http request to perform.",
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "items": {
                                "additionalProperties": false,
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "tcpSocket": {
                          "additionalProperties": false,
                          "description": "TCPSocket specifies an action involving a TCP port.",
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "resources": {
                      "additionalProperties": false,
                      "description": "Specify the Request and Limits of the pods\nTo get guaranteed QoS class, specify requests and limits equal.\nSee also: http://kubernetes.io/docs/user-guide/compute-resources/",
                      "properties": {
                        "claims": {
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "items": {
                            "additionalProperties": false,
                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                            "properties": {
                              "name": {
                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                "type": "string"
                              },
                              "request": {
                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "limits": {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object"
                        },
                        "requests": {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "seccompConfig": {
                      "additionalProperties": false,
                      "description": "Seccomp configurations to override Operator actions. For all other Seccomp Profile manipulation,\nuse SecurityContext.",
                      "properties": {
                        "customProfile": {
                          "additionalProperties": false,
                          "description": "CustomProfile specifies a ConfigMap containing a custom Seccomp Profile.\nConfigMap data must either have the key `system-probe-seccomp.json` or CustomProfile.Items\nmust include a corev1.KeytoPath that maps the key to the path `system-probe-seccomp.json`.",
                          "properties": {
                            "configData": {
                              "description": "ConfigData corresponds to the configuration file content.",
                              "type": "string"
                            },
                            "configMap": {
                              "additionalProperties": false,
                              "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                              "properties": {
                                "items": {
                                  "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Maps a string key to a path within a volume.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the key to project.",
                                        "type": "string"
                                      },
                                      "mode": {
                                        "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "path": {
                                        "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "path"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-map-keys": [
                                    "key"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "name": {
                                  "description": "Name is the name of the ConfigMap.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "customRootPath": {
                          "description": "CustomRootPath specifies a custom Seccomp Profile root location.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "securityContext": {
                      "additionalProperties": false,
                      "description": "Container-level SecurityContext.",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "additionalProperties": false,
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        },
                        "capabilities": {
                          "additionalProperties": false,
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "type": "object"
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "seLinuxOptions": {
                          "additionalProperties": false,
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "seccompProfile": {
                          "additionalProperties": false,
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        },
                        "windowsOptions": {
                          "additionalProperties": false,
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "startupProbe": {
                      "additionalProperties": false,
                      "description": "Configure the Startup Probe of the container",
                      "properties": {
                        "exec": {
                          "additionalProperties": false,
                          "description": "Exec specifies the action to take.",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "type": "object"
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "grpc": {
                          "additionalProperties": false,
                          "description": "GRPC specifies an action involving a GRPC port.",
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "service": {
                              "default": "",
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "httpGet": {
                          "additionalProperties": false,
                          "description": "HTTPGet specifies the http request to perform.",
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "items": {
                                "additionalProperties": false,
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "tcpSocket": {
                          "additionalProperties": false,
                          "description": "TCPSocket specifies an action involving a TCP port.",
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "required": [
                            "port"
                          ],
                          "type": "object"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "volumeMounts": {
                      "description": "Specify additional volume mounts in the container.",
                      "items": {
                        "additionalProperties": false,
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name",
                        "mountPath"
                      ],
                      "x-kubernetes-list-type": "map"
                    }
                  },
                  "type": "object"
                },
                "description": "Configure the basic configurations for each Agent container. Valid Agent container names are:\n`agent`, `cluster-agent`, `init-config`, `init-volume`, `process-agent`, `seccomp-setup`,\n`security-agent`, `system-probe`, and `trace-agent`.",
                "type": "object"
              },
              "createPodDisruptionBudget": {
                "description": "Set CreatePodDisruptionBudget to true to create a PodDisruptionBudget for this component.\nNot applicable for the Node Agent. A Cluster Agent PDB is set with 1 minimum available pod, and a Cluster Checks Runner PDB is set with 1 maximum unavailable pod.",
                "type": "boolean"
              },
              "createRbac": {
                "description": "Set CreateRbac to false to prevent automatic creation of Role/ClusterRole for this component",
                "type": "boolean"
              },
              "customConfigurations": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "description": "CustomConfig provides a place for custom configuration of the Agent or Cluster Agent, corresponding to datadog.yaml,\nsystem-probe.yaml, security-agent.yaml or datadog-cluster.yaml.\nThe configuration can be provided in the ConfigData field as raw data, or referenced in a ConfigMap.\nNote: `ConfigData` and `ConfigMap` cannot be set together.",
                  "properties": {
                    "configData": {
                      "description": "ConfigData corresponds to the configuration file content.",
                      "type": "string"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                      "properties": {
                        "items": {
                          "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "name": {
                          "description": "Name is the name of the ConfigMap.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "description": "CustomConfiguration allows to specify custom configuration files for `datadog.yaml`, `datadog-cluster.yaml`, `security-agent.yaml`, and `system-probe.yaml`.\nThe content is merged with configuration generated by the Datadog Operator, with priority given to custom configuration.\nWARNING: It is possible to override values set in the `DatadogAgent`.",
                "type": "object"
              },
              "disabled": {
                "description": "Disabled force disables a component.",
                "type": "boolean"
              },
              "dnsConfig": {
                "additionalProperties": false,
                "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
                "properties": {
                  "nameservers": {
                    "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "options": {
                    "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                    "items": {
                      "additionalProperties": false,
                      "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                      "properties": {
                        "name": {
                          "description": "Required.",
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "searches": {
                    "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "type": "object"
              },
              "dnsPolicy": {
                "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.",
                "type": "string"
              },
              "env": {
                "description": "Specify additional environment variables for all containers in this component\nPriority is Container \u003e Component.\nSee also: https://docs.datadoghq.com/agent/kubernetes/?tab=helm#environment-variables",
                "items": {
                  "additionalProperties": false,
                  "description": "EnvVar represents an environment variable present in a Container.",
                  "properties": {
                    "name": {
                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                      "type": "string"
                    },
                    "valueFrom": {
                      "additionalProperties": false,
                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                      "properties": {
                        "configMapKeyRef": {
                          "additionalProperties": false,
                          "description": "Selects a key of a ConfigMap.",
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fieldRef": {
                          "additionalProperties": false,
                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "fieldPath"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resourceFieldRef": {
                          "additionalProperties": false,
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "required": [
                            "resource"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "additionalProperties": false,
                          "description": "Selects a key of a secret in the pod's namespace",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array",
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "envFrom": {
                "description": "EnvFrom specifies the ConfigMaps and Secrets to expose as environment variables.\nPriority is env \u003e envFrom.",
                "items": {
                  "additionalProperties": false,
                  "description": "EnvFromSource represents the source of a set of ConfigMaps",
                  "properties": {
                    "configMapRef": {
                      "additionalProperties": false,
                      "description": "The ConfigMap to select from",
                      "properties": {
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap must be defined",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "prefix": {
                      "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "secretRef": {
                      "additionalProperties": false,
                      "description": "The Secret to select from",
                      "properties": {
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret must be defined",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "extraChecksd": {
                "additionalProperties": false,
                "description": "Checksd configuration allowing to specify custom checks placed under /etc/datadog-agent/checks.d/\nSee https://docs.datadoghq.com/agent/guide/agent-configuration-files/?tab=agentv6 for more details.",
                "properties": {
                  "configDataMap": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "ConfigDataMap corresponds to the content of the configuration files.\nThe key should be the filename the contents get mounted to; for instance check.py or check.yaml.",
                    "type": "object"
                  },
                  "configMap": {
                    "additionalProperties": false,
                    "description": "ConfigMap references an existing ConfigMap with the content of the configuration files.",
                    "properties": {
                      "items": {
                        "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Maps a string key to a path within a volume.",
                          "properties": {
                            "key": {
                              "description": "key is the key to project.",
                              "type": "string"
                            },
                            "mode": {
                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "path": {
                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "key",
                            "path"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-map-keys": [
                          "key"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "name": {
                        "description": "Name is the name of the ConfigMap.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "extraConfd": {
                "additionalProperties": false,
                "description": "Confd configuration allowing to specify config files for custom checks placed under /etc/datadog-agent/conf.d/.\nSee https://docs.datadoghq.com/agent/guide/agent-configuration-files/?tab=agentv6 for more details.",
                "properties": {
                  "configDataMap": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "ConfigDataMap corresponds to the content of the configuration files.\nThe key should be the filename the contents get mounted to; for instance check.py or check.yaml.",
                    "type": "object"
                  },
                  "configMap": {
                    "additionalProperties": false,
                    "description": "ConfigMap references an existing ConfigMap with the content of the configuration files.",
                    "properties": {
                      "items": {
                        "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Maps a string key to a path within a volume.",
                          "properties": {
                            "key": {
                              "description": "key is the key to project.",
                              "type": "string"
                            },
                            "mode": {
                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "path": {
                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "key",
                            "path"
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-kubernetes-list-map-keys": [
                          "key"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "name": {
                        "description": "Name is the name of the ConfigMap.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "hostNetwork": {
                "description": "Host networking requested for this pod. Use the host's network namespace.",
                "type": "boolean"
              },
              "hostPID": {
                "description": "Use the host's PID namespace.",
                "type": "boolean"
              },
              "image": {
                "additionalProperties": false,
                "description": "The container image of the different components (Datadog Agent, Cluster Agent, Cluster Check Runner).",
                "properties": {
                  "jmxEnabled": {
                    "description": "Define whether the Agent image should support JMX.\nTo be used if the Name field does not correspond to a full image string.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Defines the Agent image name for the pod. You can provide this as:\n* \u003cNAME\u003e - use agent for the Datadog Agent, cluster-agent for the Datadog Cluster Agent, or dogstatsd for DogStatsD.\n  The full image string is derived from global.registry, [key].image.tag, and [key].image.jmxEnabled.\n* \u003cNAME\u003e:\u003cTAG\u003e - For example, agent:latest. The registry is derived from global.registry. [key].image.tag and [key].image.jmxEnabled are ignored.\n* \u003cREGISTRY\u003e/\u003cNAME\u003e:\u003cTAG\u003e - For example, gcr.io/datadoghq/agent:latest. If the full image string is specified\n  like this, then global.registry, [key].image.tag, and [key].image.jmxEnabled are ignored.",
                    "type": "string"
                  },
                  "pullPolicy": {
                    "description": "The Kubernetes pull policy:\nUse Always, Never, or IfNotPresent.",
                    "type": "string"
                  },
                  "pullSecrets": {
                    "description": "It is possible to specify Docker registry credentials.\nSee https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                    "items": {
                      "additionalProperties": false,
                      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                      "properties": {
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "type": "array"
                  },
                  "tag": {
                    "description": "Define the image tag to use.\nTo be used if the Name field does not correspond to a full image string.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "labels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "AdditionalLabels provide labels that are added to the different component (Datadog Agent, Cluster Agent, Cluster Check Runner) pods.",
                "type": "object"
              },
              "name": {
                "description": "Name overrides the default name for the resource",
                "type": "string"
              },
              "nodeSelector": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "A map of key-value pairs. For this pod to run on a specific node, the node must have these key-value pairs as labels.\nSee https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                "type": "object"
              },
              "priorityClassName": {
                "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\"\nare two special keywords which indicate the highest priorities with the former being the highest priority.\nAny other name must be defined by creating a PriorityClass object with that name. If not specified,\nthe pod priority is default, or zero if there is no default.",
                "type": "string"
              },
              "replicas": {
                "description": "Number of the replicas.\nNot applicable for a DaemonSet/ExtendedDaemonSet deployment",
                "format": "int32",
                "type": "integer"
              },
              "runtimeClassName": {
                "description": "If specified, indicates the pod's RuntimeClass kubelet should use to run the pod.\nIf the named RuntimeClass does not exist, or the CRI cannot run the corresponding handler, the pod enters the Failed terminal phase.\nIf no runtimeClassName is specified, the default RuntimeHandler is used, which is equivalent to the behavior when the RuntimeClass feature is disabled.",
                "type": "string"
              },
              "securityContext": {
                "additionalProperties": false,
                "description": "Pod-level SecurityContext.",
                "properties": {
                  "appArmorProfile": {
                    "additionalProperties": false,
                    "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  },
                  "fsGroup": {
                    "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "fsGroupChangePolicy": {
                    "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                  },
                  "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "seLinuxOptions": {
                    "additionalProperties": false,
                    "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                    "properties": {
                      "level": {
                        "description": "Level is SELinux level label that applies to the container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a SELinux role label that applies to the container.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type is a SELinux type label that applies to the container.",
                        "type": "string"
                      },
                      "user": {
                        "description": "User is a SELinux user label that applies to the container.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "seccompProfile": {
                    "additionalProperties": false,
                    "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  },
                  "supplementalGroups": {
                    "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                    "items": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "supplementalGroupsPolicy": {
                    "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "sysctls": {
                    "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Sysctl defines a kernel parameter to be set",
                      "properties": {
                        "name": {
                          "description": "Name of a property to set",
                          "type": "string"
                        },
                        "value": {
                          "description": "Value of a property to set",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "windowsOptions": {
                    "additionalProperties": false,
                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                    "properties": {
                      "gmsaCredentialSpec": {
                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                        "type": "string"
                      },
                      "gmsaCredentialSpecName": {
                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                        "type": "string"
                      },
                      "hostProcess": {
                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                        "type": "boolean"
                      },
                      "runAsUserName": {
                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "serviceAccountAnnotations": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Sets the ServiceAccountAnnotations used by this component.",
                "type": "object"
              },
              "serviceAccountName": {
                "description": "Sets the ServiceAccount used by this component.\nIgnored if the field CreateRbac is true.",
                "type": "string"
              },
              "tolerations": {
                "description": "Configure the component tolerations.",
                "items": {
                  "additionalProperties": false,
                  "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                  "properties": {
                    "effect": {
                      "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                      "type": "string"
                    },
                    "key": {
                      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                      "type": "string"
                    },
                    "tolerationSeconds": {
                      "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "value": {
                      "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "x-kubernetes-list-type": "atomic"
              },
              "updateStrategy": {
                "additionalProperties": false,
                "description": "The deployment strategy to use to replace existing pods with new ones.",
                "properties": {
                  "rollingUpdate": {
                    "additionalProperties": false,
                    "description": "Configure the rolling update strategy of the Deployment or DaemonSet.",
                    "properties": {
                      "maxSurge": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "MaxSurge behaves differently based on the Kubernetes resource. Refer to the\nKubernetes API documentation for additional details.",
                        "x-kubernetes-int-or-string": true
                      },
                      "maxUnavailable": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nRefer to the Kubernetes API documentation for additional details..",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "Type can be \"RollingUpdate\" or \"OnDelete\" for DaemonSets and \"RollingUpdate\"\nor \"Recreate\" for Deployments",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "volumes": {
                "description": "Specify additional volumes in the different components (Datadog Agent, Cluster Agent, Cluster Check Runner).",
                "items": {
                  "additionalProperties": false,
                  "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                  "properties": {
                    "awsElasticBlockStore": {
                      "additionalProperties": false,
                      "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": "string"
                        },
                        "partition": {
                          "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                          "format": "int32",
                          "type": "integer"
                        },
                        "readOnly": {
                          "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": "boolean"
                        },
                        "volumeID": {
                          "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": "string"
                        }
                      },
                      "required": [
                        "volumeID"
                      ],
                      "type": "object"
                    },
                    "azureDisk": {
                      "additionalProperties": false,
                      "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                      "properties": {
                        "cachingMode": {
                          "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                          "type": "string"
                        },
                        "diskName": {
                          "description": "diskName is the Name of the data disk in the blob storage",
                          "type": "string"
                        },
                        "diskURI": {
                          "description": "diskURI is the URI of data disk in the blob storage",
                          "type": "string"
                        },
                        "fsType": {
                          "default": "ext4",
                          "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                          "type": "string"
                        },
                        "readOnly": {
                          "default": false,
                          "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "diskName",
                        "diskURI"
                      ],
                      "type": "object"
                    },
                    "azureFile": {
                      "additionalProperties": false,
                      "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                      "properties": {
                        "readOnly": {
                          "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "secretName": {
                          "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                          "type": "string"
                        },
                        "shareName": {
                          "description": "shareName is the azure share Name",
                          "type": "string"
                        }
                      },
                      "required": [
                        "secretName",
                        "shareName"
                      ],
                      "type": "object"
                    },
                    "cephfs": {
                      "additionalProperties": false,
                      "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                      "properties": {
                        "monitors": {
                          "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "path": {
                          "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                          "type": "boolean"
                        },
                        "secretFile": {
                          "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                          "type": "string"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "user": {
                          "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                          "type": "string"
                        }
                      },
                      "required": [
                        "monitors"
                      ],
                      "type": "object"
                    },
                    "cinder": {
                      "additionalProperties": false,
                      "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "volumeID": {
                          "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": "string"
                        }
                      },
                      "required": [
                        "volumeID"
                      ],
                      "type": "object"
                    },
                    "configMap": {
                      "additionalProperties": false,
                      "description": "configMap represents a configMap that should populate this volume",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "items": {
                          "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "name": {
                          "default": "",
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "optional specify whether the ConfigMap or its keys must be defined",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-map-type": "atomic"
                    },
                    "csi": {
                      "additionalProperties": false,
                      "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
                      "properties": {
                        "driver": {
                          "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                          "type": "string"
                        },
                        "fsType": {
                          "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                          "type": "string"
                        },
                        "nodePublishSecretRef": {
                          "additionalProperties": false,
                          "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "readOnly": {
                          "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                          "type": "boolean"
                        },
                        "volumeAttributes": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                          "type": "object"
                        }
                      },
                      "required": [
                        "driver"
                      ],
                      "type": "object"
                    },
                    "downwardAPI": {
                      "additionalProperties": false,
                      "description": "downwardAPI represents downward API about the pod that should populate this volume",
                      "properties": {
                        "defaultMode": {
                          "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "items": {
                          "description": "Items is a list of downward API volume file",
                          "items": {
                            "additionalProperties": false,
                            "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                            "properties": {
                              "fieldRef": {
                                "additionalProperties": false,
                                "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldPath"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "mode": {
                                "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                "type": "string"
                              },
                              "resourceFieldRef": {
                                "additionalProperties": false,
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "resource"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "required": [
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "emptyDir": {
                      "additionalProperties": false,
                      "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "properties": {
                        "medium": {
                          "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type": "string"
                        },
                        "sizeLimit": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "type": "object"
                    },
                    "ephemeral": {
                      "additionalProperties": false,
                      "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                      "properties": {
                        "volumeClaimTemplate": {
                          "additionalProperties": false,
                          "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                          "properties": {
                            "metadata": {
                              "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                              "type": "object"
                            },
                            "spec": {
                              "additionalProperties": false,
                              "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                              "properties": {
                                "accessModes": {
                                  "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "dataSource": {
                                  "additionalProperties": false,
                                  "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                  "properties": {
                                    "apiGroup": {
                                      "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind is the type of resource being referenced",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name is the name of resource being referenced",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "kind",
                                    "name"
                                  ],
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "dataSourceRef": {
                                  "additionalProperties": false,
                                  "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                  "properties": {
                                    "apiGroup": {
                                      "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind is the type of resource being referenced",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name is the name of resource being referenced",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "kind",
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "resources": {
                                  "additionalProperties": false,
                                  "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                  "properties": {
                                    "limits": {
                                      "additionalProperties": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object"
                                    },
                                    "requests": {
                                      "additionalProperties": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "selector": {
                                  "additionalProperties": false,
                                  "description": "selector is a label query over volumes to consider for binding.",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object",
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "storageClassName": {
                                  "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                  "type": "string"
                                },
                                "volumeAttributesClassName": {
                                  "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                  "type": "string"
                                },
                                "volumeMode": {
                                  "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                  "type": "string"
                                },
                                "volumeName": {
                                  "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "spec"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fc": {
                      "additionalProperties": false,
                      "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "lun": {
                          "description": "lun is Optional: FC target lun number",
                          "format": "int32",
                          "type": "integer"
                        },
                        "readOnly": {
                          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "targetWWNs": {
                          "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "wwids": {
                          "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "flexVolume": {
                      "additionalProperties": false,
                      "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.",
                      "properties": {
                        "driver": {
                          "description": "driver is the name of the driver to use for this volume.",
                          "type": "string"
                        },
                        "fsType": {
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                          "type": "string"
                        },
                        "options": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "options is Optional: this field holds extra command options if any.",
                          "type": "object"
                        },
                        "readOnly": {
                          "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "required": [
                        "driver"
                      ],
                      "type": "object"
                    },
                    "flocker": {
                      "additionalProperties": false,
                      "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                      "properties": {
                        "datasetName": {
                          "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                          "type": "string"
                        },
                        "datasetUUID": {
                          "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "gcePersistentDisk": {
                      "additionalProperties": false,
                      "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                      "properties": {
                        "fsType": {
                          "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": "string"
                        },
                        "partition": {
                          "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pdName": {
                          "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "pdName"
                      ],
                      "type": "object"
                    },
                    "gitRepo": {
                      "additionalProperties": false,
                      "description": "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
                      "properties": {
                        "directory": {
                          "description": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "repository is the URL",
                          "type": "string"
                        },
                        "revision": {
                          "description": "revision is the commit hash for the specified revision.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "repository"
                      ],
                      "type": "object"
                    },
                    "glusterfs": {
                      "additionalProperties": false,
                      "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                      "properties": {
                        "endpoints": {
                          "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                          "type": "string"
                        },
                        "path": {
                          "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "endpoints",
                        "path"
                      ],
                      "type": "object"
                    },
                    "hostPath": {
                      "additionalProperties": false,
                      "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                      "properties": {
                        "path": {
                          "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type": "string"
                        },
                        "type": {
                          "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type": "string"
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object"
                    },
                    "image": {
                      "additionalProperties": false,
                      "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.\nThe volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\n- Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\n- IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.\nA failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.\nThe types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.\nThe OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.\nThe volume will be mounted read-only (ro) and non-executable files (noexec).\nSub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).\nThe field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
                      "properties": {
                        "pullPolicy": {
                          "description": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
                          "type": "string"
                        },
                        "reference": {
                          "description": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "iscsi": {
                      "additionalProperties": false,
                      "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                      "properties": {
                        "chapAuthDiscovery": {
                          "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                          "type": "boolean"
                        },
                        "chapAuthSession": {
                          "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                          "type": "boolean"
                        },
                        "fsType": {
                          "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                          "type": "string"
                        },
                        "initiatorName": {
                          "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                          "type": "string"
                        },
                        "iqn": {
                          "description": "iqn is the target iSCSI Qualified Name.",
                          "type": "string"
                        },
                        "iscsiInterface": {
                          "default": "default",
                          "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                          "type": "string"
                        },
                        "lun": {
                          "description": "lun represents iSCSI Target Lun number.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "portals": {
                          "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "targetPortal": {
                          "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                          "type": "string"
                        }
                      },
                      "required": [
                        "iqn",
                        "lun",
                        "targetPortal"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "description": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "nfs": {
                      "additionalProperties": false,
                      "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                      "properties": {
                        "path": {
                          "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": "boolean"
                        },
                        "server": {
                          "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": "string"
                        }
                      },
                      "required": [
                        "path",
                        "server"
                      ],
                      "type": "object"
                    },
                    "persistentVolumeClaim": {
                      "additionalProperties": false,
                      "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                      "properties": {
                        "claimName": {
                          "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "claimName"
                      ],
                      "type": "object"
                    },
                    "photonPersistentDisk": {
                      "additionalProperties": false,
                      "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "pdID": {
                          "description": "pdID is the ID that identifies Photon Controller persistent disk",
                          "type": "string"
                        }
                      },
                      "required": [
                        "pdID"
                      ],
                      "type": "object"
                    },
                    "portworxVolume": {
                      "additionalProperties": false,
                      "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                      "properties": {
                        "fsType": {
                          "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "volumeID": {
                          "description": "volumeID uniquely identifies a Portworx volume",
                          "type": "string"
                        }
                      },
                      "required": [
                        "volumeID"
                      ],
                      "type": "object"
                    },
                    "projected": {
                      "additionalProperties": false,
                      "description": "projected items for all in one resources secrets, configmaps, and downward API",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "sources": {
                          "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                            "properties": {
                              "clusterTrustBundle": {
                                "additionalProperties": false,
                                "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                "properties": {
                                  "labelSelector": {
                                    "additionalProperties": false,
                                    "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "name": {
                                    "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                    "type": "boolean"
                                  },
                                  "path": {
                                    "description": "Relative path from the volume root to write the bundle.",
                                    "type": "string"
                                  },
                                  "signerName": {
                                    "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              },
                              "configMap": {
                                "additionalProperties": false,
                                "description": "configMap information about the configMap data to project",
                                "properties": {
                                  "items": {
                                    "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Maps a string key to a path within a volume.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the key to project.",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "path"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "name": {
                                    "default": "",
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "optional specify whether the ConfigMap or its keys must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "downwardAPI": {
                                "additionalProperties": false,
                                "description": "downwardAPI information about the downwardAPI data to project",
                                "properties": {
                                  "items": {
                                    "description": "Items is a list of DownwardAPIVolume file",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                      "properties": {
                                        "fieldRef": {
                                          "additionalProperties": false,
                                          "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                          "properties": {
                                            "apiVersion": {
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "description": "Path of the field to select in the specified API version.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "fieldPath"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "mode": {
                                          "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                          "type": "string"
                                        },
                                        "resourceFieldRef": {
                                          "additionalProperties": false,
                                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                          "properties": {
                                            "containerName": {
                                              "description": "Container name: required for volumes, optional for env vars",
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "description": "Required: resource to select",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "resource"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "path"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object"
                              },
                              "secret": {
                                "additionalProperties": false,
                                "description": "secret information about the secret data to project",
                                "properties": {
                                  "items": {
                                    "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Maps a string key to a path within a volume.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the key to project.",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "path"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "name": {
                                    "default": "",
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "optional field specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "serviceAccountToken": {
                                "additionalProperties": false,
                                "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                "properties": {
                                  "audience": {
                                    "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                    "type": "string"
                                  },
                                  "expirationSeconds": {
                                    "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "quobyte": {
                      "additionalProperties": false,
                      "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                      "properties": {
                        "group": {
                          "description": "group to map volume access to\nDefault is no group",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                          "type": "boolean"
                        },
                        "registry": {
                          "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                          "type": "string"
                        },
                        "tenant": {
                          "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                          "type": "string"
                        },
                        "user": {
                          "description": "user to map volume access to\nDefaults to serivceaccount user",
                          "type": "string"
                        },
                        "volume": {
                          "description": "volume is a string that references an already created Quobyte volume by name.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "registry",
                        "volume"
                      ],
                      "type": "object"
                    },
                    "rbd": {
                      "additionalProperties": false,
                      "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                          "type": "string"
                        },
                        "image": {
                          "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "type": "string"
                        },
                        "keyring": {
                          "default": "/etc/ceph/keyring",
                          "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "type": "string"
                        },
                        "monitors": {
                          "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "pool": {
                          "default": "rbd",
                          "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "user": {
                          "default": "admin",
                          "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                          "type": "string"
                        }
                      },
                      "required": [
                        "image",
                        "monitors"
                      ],
                      "type": "object"
                    },
                    "scaleIO": {
                      "additionalProperties": false,
                      "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                      "properties": {
                        "fsType": {
                          "default": "xfs",
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                          "type": "string"
                        },
                        "gateway": {
                          "description": "gateway is the host address of the ScaleIO API Gateway.",
                          "type": "string"
                        },
                        "protectionDomain": {
                          "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "sslEnabled": {
                          "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                          "type": "boolean"
                        },
                        "storageMode": {
                          "default": "ThinProvisioned",
                          "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                          "type": "string"
                        },
                        "storagePool": {
                          "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                          "type": "string"
                        },
                        "system": {
                          "description": "system is the name of the storage system as configured in ScaleIO.",
                          "type": "string"
                        },
                        "volumeName": {
                          "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "gateway",
                        "secretRef",
                        "system"
                      ],
                      "type": "object"
                    },
                    "secret": {
                      "additionalProperties": false,
                      "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "items": {
                          "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Maps a string key to a path within a volume.",
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "path"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "optional": {
                          "description": "optional field specify whether the Secret or its keys must be defined",
                          "type": "boolean"
                        },
                        "secretName": {
                          "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "storageos": {
                      "additionalProperties": false,
                      "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                      "properties": {
                        "fsType": {
                          "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "additionalProperties": false,
                          "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                          "properties": {
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "volumeName": {
                          "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                          "type": "string"
                        },
                        "volumeNamespace": {
                          "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "vsphereVolume": {
                      "additionalProperties": false,
                      "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                      "properties": {
                        "fsType": {
                          "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type": "string"
                        },
                        "storagePolicyID": {
                          "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                          "type": "string"
                        },
                        "storagePolicyName": {
                          "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                          "type": "string"
                        },
                        "volumePath": {
                          "description": "volumePath is the path that identifies vSphere volume vmdk",
                          "type": "string"
                        }
                      },
                      "required": [
                        "volumePath"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array",
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              }
            },
            "type": "object"
          },
          "description": "Override the default configurations of the agents",
          "type": "object"
        }
      },
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "description": "DatadogAgentStatus defines the observed state of DatadogAgent.",
      "properties": {
        "agent": {
          "additionalProperties": false,
          "description": "The combined actual state of all Agents as daemonsets or extended daemonsets.",
          "properties": {
            "available": {
              "description": "Number of available pods in the DaemonSet.",
              "format": "int32",
              "type": "integer"
            },
            "current": {
              "description": "Number of current pods in the DaemonSet.",
              "format": "int32",
              "type": "integer"
            },
            "currentHash": {
              "description": "CurrentHash is the stored hash of the DaemonSet.",
              "type": "string"
            },
            "daemonsetName": {
              "description": "DaemonsetName corresponds to the name of the created DaemonSet.",
              "type": "string"
            },
            "desired": {
              "description": "Number of desired pods in the DaemonSet.",
              "format": "int32",
              "type": "integer"
            },
            "lastUpdate": {
              "description": "LastUpdate is the last time the status was updated.",
              "format": "date-time",
              "type": "string"
            },
            "ready": {
              "description": "Number of ready pods in the DaemonSet.",
              "format": "int32",
              "type": "integer"
            },
            "state": {
              "description": "State corresponds to the DaemonSet state.",
              "type": "string"
            },
            "status": {
              "description": "Status corresponds to the DaemonSet computed status.",
              "type": "string"
            },
            "upToDate": {
              "description": "Number of up to date pods in the DaemonSet.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "available",
            "current",
            "desired",
            "ready",
            "upToDate"
          ],
          "type": "object"
        },
        "agentList": {
          "description": "The actual state of the Agent as a daemonset or an extended daemonset.",
          "items": {
            "additionalProperties": false,
            "description": "DaemonSetStatus defines the observed state of Agent running as DaemonSet.",
            "properties": {
              "available": {
                "description": "Number of available pods in the DaemonSet.",
                "format": "int32",
                "type": "integer"
              },
              "current": {
                "description": "Number of current pods in the DaemonSet.",
                "format": "int32",
                "type": "integer"
              },
              "currentHash": {
                "description": "CurrentHash is the stored hash of the DaemonSet.",
                "type": "string"
              },
              "daemonsetName": {
                "description": "DaemonsetName corresponds to the name of the created DaemonSet.",
                "type": "string"
              },
              "desired": {
                "description": "Number of desired pods in the DaemonSet.",
                "format": "int32",
                "type": "integer"
              },
              "lastUpdate": {
                "description": "LastUpdate is the last time the status was updated.",
                "format": "date-time",
                "type": "string"
              },
              "ready": {
                "description": "Number of ready pods in the DaemonSet.",
                "format": "int32",
                "type": "integer"
              },
              "state": {
                "description": "State corresponds to the DaemonSet state.",
                "type": "string"
              },
              "status": {
                "description": "Status corresponds to the DaemonSet computed status.",
                "type": "string"
              },
              "upToDate": {
                "description": "Number of up to date pods in the DaemonSet.",
                "format": "int32",
                "type": "integer"
              }
            },
            "required": [
              "available",
              "current",
              "desired",
              "ready",
              "upToDate"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "clusterAgent": {
          "additionalProperties": false,
          "description": "The actual state of the Cluster Agent as a deployment.",
          "properties": {
            "availableReplicas": {
              "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this Deployment.",
              "format": "int32",
              "type": "integer"
            },
            "currentHash": {
              "description": "CurrentHash is the stored hash of the Deployment.",
              "type": "string"
            },
            "deploymentName": {
              "description": "DeploymentName corresponds to the name of the Deployment.",
              "type": "string"
            },
            "generatedToken": {
              "description": "GeneratedToken corresponds to the generated token if any token was provided in the Credential configuration when ClusterAgent is\nenabled.",
              "type": "string"
            },
            "lastUpdate": {
              "description": "LastUpdate is the last time the status was updated.",
              "format": "date-time",
              "type": "string"
            },
            "readyReplicas": {
              "description": "Total number of ready pods targeted by this Deployment.",
              "format": "int32",
              "type": "integer"
            },
            "replicas": {
              "description": "Total number of non-terminated pods targeted by this Deployment (their labels match the selector).",
              "format": "int32",
              "type": "integer"
            },
            "state": {
              "description": "State corresponds to the Deployment state.",
              "type": "string"
            },
            "status": {
              "description": "Status corresponds to the Deployment computed status.",
              "type": "string"
            },
            "unavailableReplicas": {
              "description": "Total number of unavailable pods targeted by this Deployment. This is the total number of\npods that are still required for the Deployment to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created.",
              "format": "int32",
              "type": "integer"
            },
            "updatedReplicas": {
              "description": "Total number of non-terminated pods targeted by this Deployment that have the desired template spec.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "clusterChecksRunner": {
          "additionalProperties": false,
          "description": "The actual state of the Cluster Checks Runner as a deployment.",
          "properties": {
            "availableReplicas": {
              "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this Deployment.",
              "format": "int32",
              "type": "integer"
            },
            "currentHash": {
              "description": "CurrentHash is the stored hash of the Deployment.",
              "type": "string"
            },
            "deploymentName": {
              "description": "DeploymentName corresponds to the name of the Deployment.",
              "type": "string"
            },
            "generatedToken": {
              "description": "GeneratedToken corresponds to the generated token if any token was provided in the Credential configuration when ClusterAgent is\nenabled.",
              "type": "string"
            },
            "lastUpdate": {
              "description": "LastUpdate is the last time the status was updated.",
              "format": "date-time",
              "type": "string"
            },
            "readyReplicas": {
              "description": "Total number of ready pods targeted by this Deployment.",
              "format": "int32",
              "type": "integer"
            },
            "replicas": {
              "description": "Total number of non-terminated pods targeted by this Deployment (their labels match the selector).",
              "format": "int32",
              "type": "integer"
            },
            "state": {
              "description": "State corresponds to the Deployment state.",
              "type": "string"
            },
            "status": {
              "description": "Status corresponds to the Deployment computed status.",
              "type": "string"
            },
            "unavailableReplicas": {
              "description": "Total number of unavailable pods targeted by this Deployment. This is the total number of\npods that are still required for the Deployment to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created.",
              "format": "int32",
              "type": "integer"
            },
            "updatedReplicas": {
              "description": "Total number of non-terminated pods targeted by this Deployment that have the desired template spec.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "conditions": {
          "description": "Conditions Represents the latest available observations of a DatadogAgent's current state.",
          "items": {
            "additionalProperties": false,
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "remoteConfigConfiguration": {
          "additionalProperties": false,
          "description": "RemoteConfigConfiguration stores the configuration received from RemoteConfig.",
          "properties": {
            "features": {
              "additionalProperties": false,
              "description": "DatadogFeatures are features running on the Agent and Cluster Agent.",
              "properties": {
                "admissionController": {
                  "additionalProperties": false,
                  "description": "AdmissionController configuration.",
                  "properties": {
                    "agentCommunicationMode": {
                      "description": "AgentCommunicationMode corresponds to the mode used by the Datadog application libraries to communicate with the Agent.\nIt can be \"hostip\", \"service\", or \"socket\".",
                      "type": "string"
                    },
                    "agentSidecarInjection": {
                      "additionalProperties": false,
                      "description": "AgentSidecarInjection contains Agent sidecar injection configurations.",
                      "properties": {
                        "clusterAgentCommunicationEnabled": {
                          "description": "ClusterAgentCommunicationEnabled enables communication between Agent sidecars and the Cluster Agent.\nDefault : true",
                          "type": "boolean"
                        },
                        "enabled": {
                          "description": "Enabled enables Sidecar injections.\nDefault: false",
                          "type": "boolean"
                        },
                        "image": {
                          "additionalProperties": false,
                          "description": "Image overrides the default Agent image name and tag for the Agent sidecar.",
                          "properties": {
                            "jmxEnabled": {
                              "description": "Define whether the Agent image should support JMX.\nTo be used if the Name field does not correspond to a full image string.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Defines the Agent image name for the pod. You can provide this as:\n* \u003cNAME\u003e - use agent for the Datadog Agent, cluster-agent for the Datadog Cluster Agent, or dogstatsd for DogStatsD.\n  The full image string is derived from global.registry, [key].image.tag, and [key].image.jmxEnabled.\n* \u003cNAME\u003e:\u003cTAG\u003e - For example, agent:latest. The registry is derived from global.registry. [key].image.tag and [key].image.jmxEnabled are ignored.\n* \u003cREGISTRY\u003e/\u003cNAME\u003e:\u003cTAG\u003e - For example, gcr.io/datadoghq/agent:latest. If the full image string is specified\n  like this, then global.registry, [key].image.tag, and [key].image.jmxEnabled are ignored.",
                              "type": "string"
                            },
                            "pullPolicy": {
                              "description": "The Kubernetes pull policy:\nUse Always, Never, or IfNotPresent.",
                              "type": "string"
                            },
                            "pullSecrets": {
                              "description": "It is possible to specify Docker registry credentials.\nSee https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                              "items": {
                                "additionalProperties": false,
                                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                                "properties": {
                                  "name": {
                                    "default": "",
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "type": "array"
                            },
                            "tag": {
                              "description": "Define the image tag to use.\nTo be used if the Name field does not correspond to a full image string.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "profiles": {
                          "description": "Profiles define the sidecar configuration override. Only one profile is supported.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Profile defines a sidecar configuration override.",
                            "properties": {
                              "env": {
                                "description": "EnvVars specifies the environment variables for the profile.",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "EnvVar represents an environment variable present in a Container.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "additionalProperties": false,
                                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "additionalProperties": false,
                                          "description": "Selects a key of a ConfigMap.",
                                          "properties": {
                                            "key": {
                                              "description": "The key to select.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "default": "",
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string"
                                            },
                                            "optional": {
                                              "description": "Specify whether the ConfigMap or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "key"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "fieldRef": {
                                          "additionalProperties": false,
                                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                          "properties": {
                                            "apiVersion": {
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "description": "Path of the field to select in the specified API version.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "fieldPath"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "resourceFieldRef": {
                                          "additionalProperties": false,
                                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                          "properties": {
                                            "containerName": {
                                              "description": "Container name: required for volumes, optional for env vars",
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "description": "Required: resource to select",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "resource"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "secretKeyRef": {
                                          "additionalProperties": false,
                                          "description": "Selects a key of a secret in the pod's namespace",
                                          "properties": {
                                            "key": {
                                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "default": "",
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string"
                                            },
                                            "optional": {
                                              "description": "Specify whether the Secret or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "key"
                                          ],
                                          "type": "object",
                                          "x-kubernetes-map-type": "atomic"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "resources": {
                                "additionalProperties": false,
                                "description": "ResourceRequirements specifies the resource requirements for the profile.",
                                "properties": {
                                  "claims": {
                                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                      "properties": {
                                        "name": {
                                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                          "type": "string"
                                        },
                                        "request": {
                                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "provider": {
                          "description": "Provider is used to add infrastructure provider-specific configurations to the Agent sidecar.\nCurrently only \"fargate\" is supported.\nTo use the feature in other environments (including local testing) omit the config.\nSee also: https://docs.datadoghq.com/integrations/eks_fargate",
                          "type": "string"
                        },
                        "registry": {
                          "description": "Registry overrides the default registry for the sidecar Agent.",
                          "type": "string"
                        },
                        "selectors": {
                          "description": "Selectors define the pod selector for sidecar injection. Only one rule is supported.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Selectors define a pod selector for sidecar injection.",
                            "properties": {
                              "namespaceSelector": {
                                "additionalProperties": false,
                                "description": "NamespaceSelector specifies the label selector for namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              },
                              "objectSelector": {
                                "additionalProperties": false,
                                "description": "ObjectSelector specifies the label selector for objects.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "cwsInstrumentation": {
                      "additionalProperties": false,
                      "description": "CWSInstrumentation holds the CWS Instrumentation endpoint configuration",
                      "properties": {
                        "enabled": {
                          "description": "Enable the CWS Instrumentation admission controller endpoint.\nDefault: false",
                          "type": "boolean"
                        },
                        "mode": {
                          "description": "Mode defines the behavior of the CWS Instrumentation endpoint, and can be either \"init_container\" or \"remote_copy\".\nDefault: \"remote_copy\"",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Enabled enables the Admission Controller.\nDefault: true",
                      "type": "boolean"
                    },
                    "failurePolicy": {
                      "description": "FailurePolicy determines how unrecognized and timeout errors are handled.",
                      "type": "string"
                    },
                    "mutateUnlabelled": {
                      "description": "MutateUnlabelled enables config injection without the need of pod label 'admission.datadoghq.com/enabled=\"true\"'.\nDefault: false",
                      "type": "boolean"
                    },
                    "mutation": {
                      "additionalProperties": false,
                      "description": "Mutation contains Admission Controller mutation configurations.",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables the Admission Controller mutation webhook.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "registry": {
                      "description": "Registry defines an image registry for the admission controller.",
                      "type": "string"
                    },
                    "serviceName": {
                      "description": "ServiceName corresponds to the webhook service name.",
                      "type": "string"
                    },
                    "validation": {
                      "additionalProperties": false,
                      "description": "Validation contains Admission Controller validation configurations.",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables the Admission Controller validation webhook.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "webhookName": {
                      "description": "WebhookName is a custom name for the MutatingWebhookConfiguration.\nDefault: \"datadog-webhook\"",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "apm": {
                  "additionalProperties": false,
                  "description": "APM (Application Performance Monitoring) configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Application Performance Monitoring.\nDefault: true",
                      "type": "boolean"
                    },
                    "hostPortConfig": {
                      "additionalProperties": false,
                      "description": "HostPortConfig contains host port configuration.\nEnabled Default: false\nPort Default: 8126",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables host port configuration",
                          "type": "boolean"
                        },
                        "hostPort": {
                          "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "instrumentation": {
                      "additionalProperties": false,
                      "description": "SingleStepInstrumentation allows the agent to inject the Datadog APM libraries into all pods in the cluster.\nFeature is in beta.\nSee also: https://docs.datadoghq.com/tracing/trace_collection/single-step-apm\nEnabled Default: false",
                      "properties": {
                        "disabledNamespaces": {
                          "description": "DisabledNamespaces disables injecting the Datadog APM libraries into pods in specific namespaces.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "enabled": {
                          "description": "Enabled enables injecting the Datadog APM libraries into all pods in the cluster.\nDefault: false",
                          "type": "boolean"
                        },
                        "enabledNamespaces": {
                          "description": "EnabledNamespaces enables injecting the Datadog APM libraries into pods in specific namespaces.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "languageDetection": {
                          "additionalProperties": false,
                          "description": "LanguageDetection detects languages and adds them as annotations on Deployments, but does not use these languages for injecting libraries to workload pods.\n(Requires Agent 7.52.0+ and Cluster Agent 7.52.0+)",
                          "properties": {
                            "enabled": {
                              "description": "Enabled enables Language Detection to automatically detect languages of user workloads (beta).\nRequires SingleStepInstrumentation.Enabled to be true.\nDefault: true",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "libVersions": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "LibVersions configures injection of specific tracing library versions with Single Step Instrumentation.\n\u003cLibrary\u003e: \u003cVersion\u003e\nex: \"java\": \"v1.18.0\"",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "unixDomainSocketConfig": {
                      "additionalProperties": false,
                      "description": "UnixDomainSocketConfig contains socket configuration.\nSee also: https://docs.datadoghq.com/agent/kubernetes/apm/?tab=helm#agent-environment-variables\nEnabled Default: true\nPath Default: `/var/run/datadog/apm.socket`",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Unix Domain Socket.\nDefault: true",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Path defines the socket path used when enabled.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "asm": {
                  "additionalProperties": false,
                  "description": "ASM (Application Security Management) configuration.",
                  "properties": {
                    "iast": {
                      "additionalProperties": false,
                      "description": "IAST configures Interactive Application Security Testing.\nEnabled Default: false",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Interactive Application Security Testing (IAST).\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "sca": {
                      "additionalProperties": false,
                      "description": "SCA configures Software Composition Analysis.\nEnabled Default: false",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Software Composition Analysis (SCA).\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "threats": {
                      "additionalProperties": false,
                      "description": "Threats configures ASM App \u0026 API Protection.\nEnabled Default: false",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables ASM App \u0026 API Protection.\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "autoscaling": {
                  "additionalProperties": false,
                  "description": "Autoscaling configuration.",
                  "properties": {
                    "workload": {
                      "additionalProperties": false,
                      "description": "Workload contains the configuration for the workload autoscaling product.",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables the workload autoscaling product.\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "clusterChecks": {
                  "additionalProperties": false,
                  "description": "ClusterChecks configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enables Cluster Checks scheduling in the Cluster Agent.\nDefault: true",
                      "type": "boolean"
                    },
                    "useClusterChecksRunners": {
                      "description": "Enabled enables Cluster Checks Runners to run all Cluster Checks.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "cspm": {
                  "additionalProperties": false,
                  "description": "CSPM (Cloud Security Posture Management) configuration.",
                  "properties": {
                    "checkInterval": {
                      "description": "CheckInterval defines the check interval.",
                      "type": "string"
                    },
                    "customBenchmarks": {
                      "additionalProperties": false,
                      "description": "CustomBenchmarks contains CSPM benchmarks.\nThe content of the ConfigMap will be merged with the benchmarks bundled with the agent.\nAny benchmarks with the same name as those existing in the agent will take precedence.",
                      "properties": {
                        "configData": {
                          "description": "ConfigData corresponds to the configuration file content.",
                          "type": "string"
                        },
                        "configMap": {
                          "additionalProperties": false,
                          "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                          "properties": {
                            "items": {
                              "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Maps a string key to a path within a volume.",
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "key"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "name": {
                              "description": "Name is the name of the ConfigMap.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Enabled enables Cloud Security Posture Management.\nDefault: false",
                      "type": "boolean"
                    },
                    "hostBenchmarks": {
                      "additionalProperties": false,
                      "description": "HostBenchmarks contains configuration for host benchmarks.",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables host benchmarks.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "cws": {
                  "additionalProperties": false,
                  "description": "CWS (Cloud Workload Security) configuration.",
                  "properties": {
                    "customPolicies": {
                      "additionalProperties": false,
                      "description": "CustomPolicies contains security policies.\nThe content of the ConfigMap will be merged with the policies bundled with the agent.\nAny policies with the same name as those existing in the agent will take precedence.",
                      "properties": {
                        "configData": {
                          "description": "ConfigData corresponds to the configuration file content.",
                          "type": "string"
                        },
                        "configMap": {
                          "additionalProperties": false,
                          "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                          "properties": {
                            "items": {
                              "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Maps a string key to a path within a volume.",
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "key"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "name": {
                              "description": "Name is the name of the ConfigMap.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Enabled enables Cloud Workload Security.\nDefault: false",
                      "type": "boolean"
                    },
                    "network": {
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Cloud Workload Security Network detections.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "remoteConfiguration": {
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Remote Configuration for Cloud Workload Security.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "securityProfiles": {
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Security Profiles collection for Cloud Workload Security.\nDefault: true",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "syscallMonitorEnabled": {
                      "description": "SyscallMonitorEnabled enables Syscall Monitoring (recommended for troubleshooting only).\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "dogstatsd": {
                  "additionalProperties": false,
                  "description": "Dogstatsd configuration.",
                  "properties": {
                    "hostPortConfig": {
                      "additionalProperties": false,
                      "description": "HostPortConfig contains host port configuration.\nEnabled Default: false\nPort Default: 8125",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables host port configuration",
                          "type": "boolean"
                        },
                        "hostPort": {
                          "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "mapperProfiles": {
                      "additionalProperties": false,
                      "description": "Configure the Dogstasd Mapper Profiles.\nCan be passed as raw data or via a json encoded string in a config map.\nSee also: https://docs.datadoghq.com/developers/dogstatsd/dogstatsd_mapper/",
                      "properties": {
                        "configData": {
                          "description": "ConfigData corresponds to the configuration file content.",
                          "type": "string"
                        },
                        "configMap": {
                          "additionalProperties": false,
                          "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                          "properties": {
                            "items": {
                              "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Maps a string key to a path within a volume.",
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "key"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "name": {
                              "description": "Name is the name of the ConfigMap.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "originDetectionEnabled": {
                      "description": "OriginDetectionEnabled enables origin detection for container tagging.\nSee also: https://docs.datadoghq.com/developers/dogstatsd/unix_socket/#using-origin-detection-for-container-tagging",
                      "type": "boolean"
                    },
                    "tagCardinality": {
                      "description": "TagCardinality configures tag cardinality for the metrics collected using origin detection (`low`, `orchestrator` or `high`).\nSee also: https://docs.datadoghq.com/getting_started/tagging/assigning_tags/?tab=containerizedenvironments#environment-variables\nCardinality default: low",
                      "type": "string"
                    },
                    "unixDomainSocketConfig": {
                      "additionalProperties": false,
                      "description": "UnixDomainSocketConfig contains socket configuration.\nSee also: https://docs.datadoghq.com/agent/kubernetes/apm/?tab=helm#agent-environment-variables\nEnabled Default: true\nPath Default: `/var/run/datadog/dsd.socket`",
                      "properties": {
                        "enabled": {
                          "description": "Enabled enables Unix Domain Socket.\nDefault: true",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Path defines the socket path used when enabled.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "ebpfCheck": {
                  "additionalProperties": false,
                  "description": "EBPFCheck configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enables the eBPF check.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "eventCollection": {
                  "additionalProperties": false,
                  "description": "EventCollection configuration.",
                  "properties": {
                    "collectKubernetesEvents": {
                      "description": "CollectKubernetesEvents enables Kubernetes event collection.\nDefault: true",
                      "type": "boolean"
                    },
                    "collectedEventTypes": {
                      "description": "CollectedEventTypes defines the list of events to collect when UnbundleEvents is enabled.\nDefault:\n[\n{\"kind\":\"Pod\",\"reasons\":[\"Failed\",\"BackOff\",\"Unhealthy\",\"FailedScheduling\",\"FailedMount\",\"FailedAttachVolume\"]},\n{\"kind\":\"Node\",\"reasons\":[\"TerminatingEvictedPod\",\"NodeNotReady\",\"Rebooted\",\"HostPortConflict\"]},\n{\"kind\":\"CronJob\",\"reasons\":[\"SawCompletedJob\"]}\n]",
                      "items": {
                        "additionalProperties": false,
                        "description": "EventTypes defines the kind and reasons of events to collect.",
                        "properties": {
                          "kind": {
                            "description": "Kind is the kind of event to collect. (ex: Pod, Node, CronJob)",
                            "type": "string"
                          },
                          "reasons": {
                            "description": "Reasons is a list of event reasons to collect. (ex: Failed, BackOff, Unhealthy)",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "required": [
                          "kind",
                          "reasons"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "unbundleEvents": {
                      "description": "UnbundleEvents enables collection of Kubernetes events as individual events.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "externalMetricsServer": {
                  "additionalProperties": false,
                  "description": "ExternalMetricsServer configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables the External Metrics Server.\nDefault: false",
                      "type": "boolean"
                    },
                    "endpoint": {
                      "additionalProperties": false,
                      "description": "Override the API endpoint for the External Metrics Server.\nURL Default: \"https://app.datadoghq.com\".",
                      "properties": {
                        "credentials": {
                          "additionalProperties": false,
                          "description": "Credentials defines the Datadog credentials used to submit data to/query data from Datadog.",
                          "properties": {
                            "apiKey": {
                              "description": "APIKey configures your Datadog API key.\nSee also: https://app.datadoghq.com/account/settings#agent/kubernetes",
                              "type": "string"
                            },
                            "apiSecret": {
                              "additionalProperties": false,
                              "description": "APISecret references an existing Secret which stores the API key instead of creating a new one.\nIf set, this parameter takes precedence over \"APIKey\".",
                              "properties": {
                                "keyName": {
                                  "description": "KeyName is the key of the secret to use.",
                                  "type": "string"
                                },
                                "secretName": {
                                  "description": "SecretName is the name of the secret.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "secretName"
                              ],
                              "type": "object"
                            },
                            "appKey": {
                              "description": "AppKey configures your Datadog application key.\nIf you are using features.externalMetricsServer.enabled = true, you must set\na Datadog application key for read access to your metrics.",
                              "type": "string"
                            },
                            "appSecret": {
                              "additionalProperties": false,
                              "description": "AppSecret references an existing Secret which stores the application key instead of creating a new one.\nIf set, this parameter takes precedence over \"AppKey\".",
                              "properties": {
                                "keyName": {
                                  "description": "KeyName is the key of the secret to use.",
                                  "type": "string"
                                },
                                "secretName": {
                                  "description": "SecretName is the name of the secret.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "secretName"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "url": {
                          "description": "URL defines the endpoint URL.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "description": "Port specifies the metricsProvider External Metrics Server service port.\nDefault: 8443",
                      "format": "int32",
                      "type": "integer"
                    },
                    "registerAPIService": {
                      "description": "RegisterAPIService registers the External Metrics endpoint as an APIService\nDefault: true",
                      "type": "boolean"
                    },
                    "useDatadogMetrics": {
                      "description": "UseDatadogMetrics enables usage of the DatadogMetrics CRD (allowing one to scale on arbitrary Datadog metric queries).\nDefault: true",
                      "type": "boolean"
                    },
                    "wpaController": {
                      "description": "WPAController enables the informer and controller of the Watermark Pod Autoscaler.\nNOTE: The Watermark Pod Autoscaler controller needs to be installed.\nSee also: https://github.com/DataDog/watermarkpodautoscaler.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "helmCheck": {
                  "additionalProperties": false,
                  "description": "HelmCheck configuration.",
                  "properties": {
                    "collectEvents": {
                      "description": "CollectEvents set to `true` enables event collection in the Helm check\n(Requires Agent 7.36.0+ and Cluster Agent 1.20.0+)\nDefault: false",
                      "type": "boolean"
                    },
                    "enabled": {
                      "description": "Enabled enables the Helm check.\nDefault: false",
                      "type": "boolean"
                    },
                    "valuesAsTags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "ValuesAsTags collects Helm values from a release and uses them as tags\n(Requires Agent and Cluster Agent 7.40.0+).\nDefault: {}",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "kubeStateMetricsCore": {
                  "additionalProperties": false,
                  "description": "KubeStateMetricsCore check configuration.",
                  "properties": {
                    "conf": {
                      "additionalProperties": false,
                      "description": "Conf overrides the configuration for the default Kubernetes State Metrics Core check.\nThis must point to a ConfigMap containing a valid cluster check configuration.",
                      "properties": {
                        "configData": {
                          "description": "ConfigData corresponds to the configuration file content.",
                          "type": "string"
                        },
                        "configMap": {
                          "additionalProperties": false,
                          "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                          "properties": {
                            "items": {
                              "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Maps a string key to a path within a volume.",
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "key"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "name": {
                              "description": "Name is the name of the ConfigMap.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Enabled enables Kube State Metrics Core.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "liveContainerCollection": {
                  "additionalProperties": false,
                  "description": "LiveContainerCollection configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enables container collection for the Live Container View.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "liveProcessCollection": {
                  "additionalProperties": false,
                  "description": "LiveProcessCollection configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Process monitoring.\nDefault: false",
                      "type": "boolean"
                    },
                    "scrubProcessArguments": {
                      "description": "ScrubProcessArguments enables scrubbing of sensitive data in process command-lines (passwords, tokens, etc. ).\nDefault: true",
                      "type": "boolean"
                    },
                    "stripProcessArguments": {
                      "description": "StripProcessArguments enables stripping of all process arguments.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "logCollection": {
                  "additionalProperties": false,
                  "description": "LogCollection configuration.",
                  "properties": {
                    "containerCollectAll": {
                      "description": "ContainerCollectAll enables Log collection from all containers.\nDefault: false",
                      "type": "boolean"
                    },
                    "containerCollectUsingFiles": {
                      "description": "ContainerCollectUsingFiles enables log collection from files in `/var/log/pods instead` of using the container runtime API.\nCollecting logs from files is usually the most efficient way of collecting logs.\nSee also: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup\nDefault: true",
                      "type": "boolean"
                    },
                    "containerLogsPath": {
                      "description": "ContainerLogsPath allows log collection from the container log path.\nSet to a different path if you are not using the Docker runtime.\nSee also: https://docs.datadoghq.com/agent/kubernetes/daemonset_setup/?tab=k8sfile#create-manifest\nDefault: `/var/lib/docker/containers`",
                      "type": "string"
                    },
                    "containerSymlinksPath": {
                      "description": "ContainerSymlinksPath allows log collection to use symbolic links in this directory to validate container ID -\u003e pod.\nDefault: `/var/log/containers`",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Enabled enables Log collection.\nDefault: false",
                      "type": "boolean"
                    },
                    "openFilesLimit": {
                      "description": "OpenFilesLimit sets the maximum number of log files that the Datadog Agent tails.\nIncreasing this limit can increase resource consumption of the Agent.\nSee also: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup\nDefault: 100",
                      "format": "int32",
                      "type": "integer"
                    },
                    "podLogsPath": {
                      "description": "PodLogsPath allows log collection from a pod log path.\nDefault: `/var/log/pods`",
                      "type": "string"
                    },
                    "tempStoragePath": {
                      "description": "TempStoragePath (always mounted from the host) is used by the Agent to store information about processed log files.\nIf the Agent is restarted, it starts tailing the log files immediately.\nDefault: `/var/lib/datadog-agent/logs`",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "npm": {
                  "additionalProperties": false,
                  "description": "NPM (Network Performance Monitoring) configuration.",
                  "properties": {
                    "collectDNSStats": {
                      "description": "CollectDNSStats enables DNS stat collection.\nDefault: false",
                      "type": "boolean"
                    },
                    "enableConntrack": {
                      "description": "EnableConntrack enables the system-probe agent to connect to the netlink/conntrack subsystem to add NAT information to connection data.\nSee also: http://conntrack-tools.netfilter.org/\nDefault: false",
                      "type": "boolean"
                    },
                    "enabled": {
                      "description": "Enabled enables Network Performance Monitoring.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "oomKill": {
                  "additionalProperties": false,
                  "description": "OOMKill configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enables the OOMKill eBPF-based check.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "orchestratorExplorer": {
                  "additionalProperties": false,
                  "description": "OrchestratorExplorer check configuration.",
                  "properties": {
                    "conf": {
                      "additionalProperties": false,
                      "description": "Conf overrides the configuration for the default Orchestrator Explorer check.\nThis must point to a ConfigMap containing a valid cluster check configuration.",
                      "properties": {
                        "configData": {
                          "description": "ConfigData corresponds to the configuration file content.",
                          "type": "string"
                        },
                        "configMap": {
                          "additionalProperties": false,
                          "description": "ConfigMap references an existing ConfigMap with the configuration file content.",
                          "properties": {
                            "items": {
                              "description": "Items maps a ConfigMap data `key` to a file `path` mount.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Maps a string key to a path within a volume.",
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "key"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "name": {
                              "description": "Name is the name of the ConfigMap.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "customResources": {
                      "description": "`CustomResources` defines custom resources for the orchestrator explorer to collect.\nEach item should follow the convention `group/version/kind`. For example, `datadoghq.com/v1alpha1/datadogmetrics`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "ddUrl": {
                      "description": "Override the API endpoint for the Orchestrator Explorer.\nURL Default: \"https://orchestrator.datadoghq.com\".",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Enabled enables the Orchestrator Explorer.\nDefault: true",
                      "type": "boolean"
                    },
                    "extraTags": {
                      "description": "Additional tags to associate with the collected data in the form of `a b c`.\nThis is a Cluster Agent option distinct from DD_TAGS that is used in the Orchestrator Explorer.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "set"
                    },
                    "scrubContainers": {
                      "description": "ScrubContainers enables scrubbing of sensitive container data (passwords, tokens, etc. ).\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "otlp": {
                  "additionalProperties": false,
                  "description": "OTLP ingest configuration",
                  "properties": {
                    "receiver": {
                      "additionalProperties": false,
                      "description": "Receiver contains configuration for the OTLP ingest receiver.",
                      "properties": {
                        "protocols": {
                          "additionalProperties": false,
                          "description": "Protocols contains configuration for the OTLP ingest receiver protocols.",
                          "properties": {
                            "grpc": {
                              "additionalProperties": false,
                              "description": "GRPC contains configuration for the OTLP ingest OTLP/gRPC receiver.",
                              "properties": {
                                "enabled": {
                                  "description": "Enable the OTLP/gRPC endpoint. Host port is enabled by default and can be disabled.",
                                  "type": "boolean"
                                },
                                "endpoint": {
                                  "description": "Endpoint for OTLP/gRPC.\ngRPC supports several naming schemes: https://github.com/grpc/grpc/blob/master/doc/naming.md\nThe Datadog Operator supports only 'host:port' (usually `0.0.0.0:port`).\nDefault: `0.0.0.0:4317`.",
                                  "type": "string"
                                },
                                "hostPortConfig": {
                                  "additionalProperties": false,
                                  "description": "Enable hostPort for OTLP/gRPC\nDefault: true",
                                  "properties": {
                                    "enabled": {
                                      "description": "Enabled enables host port configuration",
                                      "type": "boolean"
                                    },
                                    "hostPort": {
                                      "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                                      "format": "int32",
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "http": {
                              "additionalProperties": false,
                              "description": "HTTP contains configuration for the OTLP ingest OTLP/HTTP receiver.",
                              "properties": {
                                "enabled": {
                                  "description": "Enable the OTLP/HTTP endpoint. Host port is enabled by default and can be disabled.",
                                  "type": "boolean"
                                },
                                "endpoint": {
                                  "description": "Endpoint for OTLP/HTTP.\nDefault: '0.0.0.0:4318'.",
                                  "type": "string"
                                },
                                "hostPortConfig": {
                                  "additionalProperties": false,
                                  "description": "Enable hostPorts for OTLP/HTTP\nDefault: true",
                                  "properties": {
                                    "enabled": {
                                      "description": "Enabled enables host port configuration",
                                      "type": "boolean"
                                    },
                                    "hostPort": {
                                      "description": "Port takes a port number (0 \u003c x \u003c 65536) to expose on the host. (Most containers do not need this.)\nIf HostNetwork is enabled, this value must match the ContainerPort.",
                                      "format": "int32",
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "processDiscovery": {
                  "additionalProperties": false,
                  "description": "ProcessDiscovery configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables the Process Discovery check in the Agent.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "prometheusScrape": {
                  "additionalProperties": false,
                  "description": "PrometheusScrape configuration.",
                  "properties": {
                    "additionalConfigs": {
                      "description": "AdditionalConfigs allows adding advanced Prometheus check configurations with custom discovery rules.",
                      "type": "string"
                    },
                    "enableServiceEndpoints": {
                      "description": "EnableServiceEndpoints enables generating dedicated checks for service endpoints.\nDefault: false",
                      "type": "boolean"
                    },
                    "enabled": {
                      "description": "Enable autodiscovery of pods and services exposing Prometheus metrics.\nDefault: false",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Version specifies the version of the OpenMetrics check.\nDefault: 2",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "remoteConfiguration": {
                  "additionalProperties": false,
                  "description": "Remote Configuration configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enable this option to activate Remote Configuration.\nDefault: true",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "sbom": {
                  "additionalProperties": false,
                  "description": "SBOM collection configuration.",
                  "properties": {
                    "containerImage": {
                      "additionalProperties": false,
                      "description": "SBOMTypeConfig contains configuration for a SBOM collection type.",
                      "properties": {
                        "analyzers": {
                          "description": "Analyzers to use for SBOM collection.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "enabled": {
                          "description": "Enable this option to activate SBOM collection.\nDefault: false",
                          "type": "boolean"
                        },
                        "overlayFSDirectScan": {
                          "description": "Enable this option to enable experimental overlayFS direct scan.\nDefault: false",
                          "type": "boolean"
                        },
                        "uncompressedLayersSupport": {
                          "description": "Enable this option to enable support for uncompressed layers.\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Enable this option to activate SBOM collection.\nDefault: false",
                      "type": "boolean"
                    },
                    "host": {
                      "additionalProperties": false,
                      "description": "SBOMTypeConfig contains configuration for a SBOM collection type.",
                      "properties": {
                        "analyzers": {
                          "description": "Analyzers to use for SBOM collection.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "enabled": {
                          "description": "Enable this option to activate SBOM collection.\nDefault: false",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "serviceDiscovery": {
                  "additionalProperties": false,
                  "description": "ServiceDiscovery",
                  "properties": {
                    "enabled": {
                      "description": "Enables the service discovery check.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "tcpQueueLength": {
                  "additionalProperties": false,
                  "description": "TCPQueueLength configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enables the TCP queue length eBPF-based check.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "usm": {
                  "additionalProperties": false,
                  "description": "USM (Universal Service Monitoring) configuration.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled enables Universal Service Monitoring.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}