generator:
  - http:
      seed: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,
             59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131]
      headers:
        content-type: "application/x-protobuf"
      target_uri: "http://127.0.0.1:4318/v1/metrics"
      bytes_per_second: "25 MiB"
      parallel_connections: 5
      method:
        post:
          maximum_prebuild_cache_size_bytes: "512 MiB"
          variant:
            # all numbers arbitraray
            opentelemetry_metrics:
              metric_weights:
                gauge: 50
                sum: 50
              contexts:
                total_contexts:
                  constant: 10000
                # host., service. etc
                attributes_per_resource:
                  inclusive:
                    min: 8
                    max: 64
                # auto-instrumentation in client libraries, DB connection etc
                scopes_per_resource:
                  inclusive:
                    min: 1
                    max: 32
                # rare? build info possibly
                attributes_per_scope:
                  inclusive:
                    min: 0
                    max: 4
                # exported instruments / telemetry by libraries and custom code
                metrics_per_scope:
                  inclusive:
                    min: 10
                    max: 128
                # stuff like exit code, user id, cgroup id
                attributes_per_metric:
                  inclusive:
                    min: 0
                    max: 255

blackhole:
  - http:
      binding_addr: "127.0.0.1:9091"
      body_variant: "nothing"
  - http:
      binding_addr: "127.0.0.1:9092"
      body_variant: "nothing"
  - http:
      binding_addr: "127.0.0.1:9093"
      body_variant: "nothing"

target_metrics:
  - prometheus:
      uri: "http://127.0.0.1:5000/telemetry"
