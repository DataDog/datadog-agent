---
version: '2.4'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    mem_limit: 1G
  kafka:
    image: wurstmeister/kafka:2.12-2.3.1
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # This is required to be able to run create-topics within the health check
      KAFKA_PORT: 9092
      KAFKA_CREATE_TOPICS: "sts_connection_beat_events:1:1,sts_correlate_endpoints:1:1,sts_generic_events:1:1,sts_intake_health:1:1,sts_multi_metrics:1:1,sts_state_events:1:1,sts_topo_agent_integrations:1:1,sts_topology_events:1:1,sts_topo_process_agents:1:1,sts_trace_events:1:1"
    healthcheck:
      # Okay, here it goes. Due to a variant on this bug: https://github.com/wurstmeister/kafka-docker/issues/661
      # we intermittently get that not all topics are created. This causes flaky behavior on the tests
      # We patched it by having the health check also try to create when it fails
      test: [ "CMD-SHELL", "if [ \"$$(/opt/kafka/bin/kafka-topics.sh --list --zookeeper zookeeper | grep -v __consumer_offsets | wc -l )\" != \"10\" ]; then ( nohup /usr/bin/create-topics.sh & ) && exit 1; fi" ]
      interval: 3s
      timeout: 30s
      retries: 10
    mem_limit: 1G
  receiver:
    image: "quay.io/stackstate/stackstate-receiver:${STACKSTATE_BRANCH}"
    ports:
      - 7077:7077
      - 1618:1618
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
    mem_limit: 1G
  correlate:
    image: "quay.io/stackstate/stackstate-correlate:${STACKSTATE_BRANCH}"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
    mem_limit: 1G
  topic-api:
    image: "quay.io/stackstate/stackstate-topic-api:${STACKSTATE_BRANCH}"
    ports:
      - 7070:7070
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
      ZOOKEEPER_QUORUM: kafka
    mem_limit: 1G
  nginx:
    image: nginx:1.14.2
    ports:
      - 443:443
    depends_on:
      - receiver
    volumes:
      - ./docker.nginx:/etc/nginx/nginx.conf:ro
      - ./nginx-signed.crt:/etc/ssl/certs/nginx-signed.crt:ro
      - ./nginx-signed.key:/etc/ssl/private/nginx-signed.key:ro
    mem_limit: 64M
