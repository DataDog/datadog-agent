---
- name: Prepare Linux Agents
  hosts: agent_linux_vm
  gather_facts: false
  tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-zipstream python-pip) || ((yum check-update || test $? -eq 100) && yum install -y python2) || true
      become: true
      changed_when: false
    - name: Gather facts
      setup:
    # - debug: msg={{ ansible_facts }}
    - name: Install stackstate-agent
      shell: "curl -o- {{ agent_repo_url }}/install.sh | bash"
      register: agent_install_result
      until: agent_install_result is not failed
      retries: 5
      delay: 60
      environment:
        STS_API_KEY: "API_KEY"
        STS_URL: "https://test-stackstate-agent.sts/stsAgent"
        STS_HOSTNAME: "{{ inventory_hostname }}"
        CODE_NAME: "{{ agent_current_branch }}"
        SKIP_SSL_VALIDATION: "true"
    - name: Install secret backend provider
      template:
        src: templates/dummy_secret_feeder.sh.j2
        dest: /etc/stackstate-agent/dummy_secret_feeder.sh
        mode: "u=rwx,g=,o="
        owner: "stackstate-agent"
        group: "root"
      become: yes
    - name: Apply secrets backend file
      lineinfile:
        dest: /etc/stackstate-agent/stackstate.yaml
        regexp: '^api_key:(.*)$'
        line: 'api_key: "ENC[api_key]"'
        insertbefore: BOF
      become: yes
    - name: Apply secrets backend file
      lineinfile:
        dest: /etc/stackstate-agent/stackstate.yaml
        regexp: '^secret_backend_command: (.*)$'
        line: 'secret_backend_command: /etc/stackstate-agent/dummy_secret_feeder.sh'
        insertbefore: BOF
      become: yes
    - name: Template secret check
      template:
        src: templates/dummy_check.py.j2
        dest: /etc/stackstate-agent/checks.d/dummy_check.py
        mode: "u=rwx,g=,o="
        owner: "stackstate-agent"
        group: "root"
      become: yes
    - name: Template secret check config
      template:
        src: templates/dummy_check.yml.j2
        dest: /etc/stackstate-agent/conf.d/dummy_check.yml
        mode: "u=rwx,g=,o="
        owner: "stackstate-agent"
        group: "root"
      become: yes
    - name: Perform stackstate-agent restart
      service: name="stackstate-agent" state="restarted"
      become: yes
    - name: Perform stackstate-agent restart
      service: name="stackstate-agent-process" state="restarted"
      become: yes
    - name: Perform stackstate-agent restart
      service: name="stackstate-agent-trace" state="restarted"
      become: yes
