suites:

# Installs the latest release Agent 5, then updates it to the latest release
# candidate
- name: dd-agent-upgrade-agent5
  excludes: <% if (sles15_platforms.nil? || sles15_platforms.empty?) && (sles11_platforms.nil? || sles11_platforms.empty?) %>[]<% end %> # Agent 5 package doesn't work on SLES 15, Agent 5 install script doesn't work on SLES 11
    <% sles15_platforms.each do |p| %>
    - <%= p %>
    <% end %>
    <% sles11_platforms.each do |p| %>
    - <%= p %>
    <% end %>
  run_list:
    - "recipe[dd-agent-sles-workaround]"
    - "recipe[dd-agent-5]"  # Setup agent 5
    - "recipe[dd-agent-upgrade]" # Upgrade to Agent 6
    - "recipe[dd-agent-import-conf]" # Import the configuration from 5 to 6
  attributes:
    apt:
      unattended_upgrades:
        enable: false
    dd-agent-5:
      api_key: <%= api_key %>
    dd-agent-upgrade:
      add_new_repo: true
      <% dd_agent_config.each do |key, value| %>
      <%= key %>: <%= value %>
      <% end %>
      <% if ENV['AGENT_VERSION'] %>
      windows_version: "<%= ENV['AGENT_VERSION'] %>"
      <% end %>
      <% if ENV['WINDOWS_AGENT_FILE'] %>
      windows_agent_filename: "<%= ENV['WINDOWS_AGENT_FILE'] %>"
      <% end %>
    dd-agent-import-conf:
      api_key: <%= api_key %>
    dd-agent-upgrade-rspec:
      # Used by the rspec test to know the version to which the agent should be upgraded
      agent_expected_version: &agent_expected_version <%= ENV['DD_AGENT_EXPECTED_VERSION'] || "5.99.0" %>
    dd-agent-rspec:
      skip_windows_signing_test: &skip_windows_signing_test <%= ENV['SKIP_SIGNATURE_TEST'] || false %>
