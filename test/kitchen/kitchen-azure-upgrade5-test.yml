suites:

# Installs the latest release Agent 5, then updates it to the latest release
# candidate
- name: dd-agent-upgrade-agent5
  excludes: <% if sles15_platforms.nil? || sles15_platforms.empty? %>[]<% end %> # Agent 5 package doesn't work on SLES 15
    <% sles15_platforms.each do |p| %>
    - <%= p %>
    <% end %>
  run_list:
    #- "recipe[datadog::dd-agent]" # Setup Agent 5
    - "recipe[dd-agent-5]"  # Setup agent 5
    - "recipe[dd-agent-upgrade]" # Upgrade to Agent 6
    - "recipe[dd-agent-import-conf]" # Import the configuration from 5 to 6
  attributes:
    apt:
      unattended_upgrades:
        enable: false
    datadog:
      <% dd_agent_config.each do |key, value| %>
      <%= key %>: <%= value %>
      <% end %>
      # Get the latest release agents. The upgrade recipe will take care of
      # adding the staging repo and upgrading to the latest candidate
      agent6: true
      aptrepo: http://apt.datadoghq.com/
      aptrepo_dist: stable
      yumrepo: http://yum.datadoghq.com/rpm/x86_64/
      yumrepo_suse: http://yum.datadoghq.com/suse/rpm/x86_64/
      windows_agent_url: https://s3.amazonaws.com/ddagent-windows-stable/
    dd-agent-5:
      api_key: <%= api_key %>
      windows_agent_url: https://s3.amazonaws.com/ddagent-windows-unstable
      # temporary, hand-rolled a5
      windows_agent_filename: datadog-agent-5.32.3.git.1.53ce09c4-1-x86_64
    dd-agent-upgrade:
      add_new_repo: true
      aptrepo: <%= aptrepo %>
      aptrepo_dist: pipeline-<%= ENV['DD_PIPELINE_ID'] %>
      yumrepo: http://yumtesting.datad0g.com/pipeline-<%= ENV['DD_PIPELINE_ID'] %>/x86_64/
      yumrepo_suse: http://yumtesting.datad0g.com/suse/pipeline-<%= ENV['DD_PIPELINE_ID'] %>/x86_64/
      windows_agent_url: <%= windows_agent_url %>
      <% if ENV['AGENT_VERSION'] %>
      windows_version: "<%= ENV['AGENT_VERSION'] %>"
      <% end %>
      <% if ENV['WINDOWS_AGENT_FILE'] %>
      windows_agent_filename: "<%= ENV['WINDOWS_AGENT_FILE'] %>"
      <% end %>
    dd-agent-upgrade-rspec:
      # Used by the rspec test to know the version to which the agent should be upgraded
      agent_expected_version: &agent_expected_version <%= ENV['DD_AGENT_EXPECTED_VERSION'] || "5.99.0" %>
    dd-agent-rspec:
      skip_windows_signing_test: &skip_windows_signing_test <%= ENV['SKIP_SIGNATURE_TEST'] || false %>
