---
<%
  ENV['AZURE_LOCATION'] ||= "North Central US"
  location = ENV['AZURE_LOCATION']
%>

<%
  vm_tags = {
    'dd_agent_testing': 'dd_agent_testing'
  }
  if ENV['DD_PIPELINE_ID']
    vm_tags['pipeline_id'] = ENV['DD_PIPELINE_ID']
  else
    vm_tags['pipeline_id'] = 'nopipeline'
  end
%>

provisioner:
  name: chef_solo
  product_name: chef
<% if ENV['KITCHEN_DRIVER'] && ENV['KITCHEN_DRIVER'] == "hyperv" %>
  product_version: 13.6.4
<% else %>
  product_version: 14.12.9
<% end %>
  install_strategy: always

<% if ENV['KITCHEN_DRIVER'] && ENV['KITCHEN_DRIVER'] == "hyperv" %>
driver:
  name: hyperv
  vm_switch: <%= ENV['KITCHEN_HYPERV_SWITCH'] %>
  dynamic_memory: true
  <% if ENV['KITCHEN_HYPERV_MEM_MIN'] %>
  dynamic_memory_min_bytes: <%= ENV['KITCHEN_HYPERV_MEM_MIN'] %>
  memory_startup_bytes: <%= ENV['KITCHEN_HYPERV_MEM_MIN'] %>
  <% else %>
  dynamic_memory_min_bytes: 2GB
  memory_startup_bytes: 2GB
  <% end %>
  <% if ENV['KITCHEN_HYPERV_MEM_MAX'] %>
  dynamic_memory_max_bytes: <%= ENV['KITCHEN_HYPERV_MEM_MAX'] %>
  <% else %>
  dynamic_memory_max_bytes: 8GB
  <% end %>
  <% if ENV['KITCHEN_HYPERV_PROC_COUNT'] %>
  processor_count: <%= ENV['KITCHEN_HYPERV_PROC_COUNT'] %>
  <% end %>
<% else %>

driver:
  name: azurerm

driver_config:
  subscription_id: <%= ENV['AZURE_SUBSCRIPTION_ID'] %>
  location: <%= location %>
  <% if ENV['DD_PIPELINE_ID'] %>
  azure_resource_group_suffix: pl<%= ENV['DD_PIPELINE_ID'] %>
  <% else %>
  azure_resource_group_suffix: plnone
  <% end %>
<% end %>

platforms:
# Loop through two lists and output a total matrix of all possible platform + chef versions,
# for both drivers


<%
    # TEST_PLATFORMS syntax is `short_name1,azure_full_qualified_name1|short_name2,azure_full_qualified_name1`
    # TEST_PLATFORMS syntax is `short_name1,parent vhd folder,parent_vhd_name|...`
    azure_test_platforms = ENV['TEST_PLATFORMS'].split('|').map { |p| p.split(',') }

    sizes = [
      "Standard_D1_v2",
      "Standard_A1_v2",
    ]

    windows_sizes = [
      "Standard_D2_v2"
    ]

    windows_platforms = []
    sles11_platforms = []
    sles15_platforms = []

    idx = 0
    azure_test_platforms.each do |platform|
    idx += 1

    host = "azure"
    if ENV['KITCHEN_DRIVER'] && ENV['KITCHEN_DRIVER'] == "hyperv"
      host = "hyperv"
    end
    platform_name = platform[0] + "-#{host}"

    windows = platform_name.include?("win")
    sles11 = platform_name.include?("sles-11")
    sles15 = platform_name.include?("sles-15")
    windows2008 = windows && platform_name.include?("2008")

    if windows
      windows_platforms << platform_name
      size = windows_sizes[idx % windows_sizes.length]
    else
      if sles15
        sles15_platforms << platform_name
      end
      if sles11
        sles11_platforms << platform_name
      end
      size = sizes[idx % sizes.length]
    end

    vm_username = ENV['VM_USERNAME'] ? ENV['VM_USERNAME'] : "datadog"
    vm_password = ENV['SERVER_PASSWORD']
    vm_hyperv_switch = ENV['KITCHEN_HYPERV_SWITCH'] ? ENV['KITCHEN_HYPERV_SWITCH'] : "public_eth"

%>

- name: <%= platform_name %>
  <% if host == "hyperv" %>
  driver:
    name: hyperv
    parent_vhd_folder: <%= platform[1] %>
    parent_vhd_name: <%= platform[2] %>
    vm_switch: <%= vm_hyperv_switch %>
  <% else %>
  driver_config:
    machine_size: <%= size %>
    <% if platform[1] == "urn" %>
    image_urn: <%= platform[2] %>
    <% else %>
    image_id: <%= platform[2] %>
    <% end %>
    location: <%= location %>
    <% if windows %>
    vm_name: ddat<%= platform[0] %>
    <% if windows2008 %>
    winrm_powershell_script: |-
      winrm quickconfig -q
      winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="512"}'
      winrm set winrm/config '@{MaxTimeoutms="1800000"}'
      winrm set winrm/config/service '@{AllowUnencrypted="true"}'
      winrm set winrm/config/service/auth '@{Basic="true"}'
      netsh advfirewall firewall set rule name="Windows Remote Management (HTTP-In)" profile=public protocol=tcp localport=5985 remoteip=localsubnet new remoteip=any
    <% end %>
    <% else %>
    vm_name: dd-agent-testing-<%= platform[0] %>-azure
    <% end %>
    vm_tags:
      <% vm_tags.each do |key,value| %>
      <%= key %>: <%= value %>
      <% end %>
  <% end %>
    username: <%= vm_username %>
    password: <%= vm_password %>

  transport:
    <% if windows %>
    name: winrm
    username: <%= vm_username %>
    password: <%= vm_password %>
    <% else %>
    connection_retries: 30
    connection_retry_sleep: 2
    ssh_key: <%= ENV['AZURE_SSH_KEY_PATH'] %>
    <% end %>

<% end %>

<%
  api_key = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  application_key = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  url = "https://app.datad0g.com"
  aptrepo = "http://apttesting.datad0g.com/"
  aptrepo_dist = "pipeline-#{ENV['DD_PIPELINE_ID']}"
  yumrepo = "http://yumtesting.datad0g.com/pipeline-#{ENV['DD_PIPELINE_ID']}/#{ENV['MAJOR_VERSION']}/x86_64/"
  yumrepo_suse = "http://yumtesting.datad0g.com/suse/pipeline-#{ENV['DD_PIPELINE_ID']}/#{ENV['MAJOR_VERSION']}/x86_64/"
  agent_major_version = "#{ENV['MAJOR_VERSION']}"
  windows_agent_url = ENV['WINDOWS_AGENT_URL'] ? ENV['WINDOWS_AGENT_URL'] : "https://#{ENV['WIN_S3_BUCKET']}.s3.amazonaws.com/#{ENV['WINDOWS_TESTING_S3_BUCKET']}"
  dd_agent_config = {
    'agent_major_version': agent_major_version,
    'api_key': api_key,
    'application_key': application_key,
    'url': url,
    'aptrepo': aptrepo,
    'aptrepo_dist': aptrepo_dist,
    'yumrepo': yumrepo,
    'yumrepo_suse': yumrepo_suse,
    'windows_agent_url': windows_agent_url
  }
%>
