# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python. Multiline strings are treated as
# verbose regular expressions by Black. Use [ ] to denote a significant space
# character.

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
# Rules were ported over from the legacy flake8 settings for parity
# All the rules can be found here: https://beta.ruff.rs/docs/rules/
select = [
    "B",
    "C",
    "E",
    "F",
    "G",
    "I",
    "U",
    "W",
    "B003",
    "B006",
    "B007",
]
ignore = [
    # From legacy flake8 settings
    # Ignore:
    # - black-incompatible options: E203
    # - bugbear overlap: E722
    # - style options: W2,W3,W50,E111,E114,E117,E2,E3,E5,E74
    # - Unnecessary dict call: C408
    # - complex-structure : C901
    # - raise-without-from-inside-except: B904
    "E203",
    "W2",
    "W3",
    "W50",
    "E111",
    "E114",
    "E117",
    "E2",
    "E3",
    "E5",
    "E74",
    "E722",
    "C408",
    "C901",
    "B904",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.format]
# Enable preview style formatting.
quote-style = "preserve"

[tool.vulture]
ignore_decorators = ["@task"]
ignore_names = ["test_*", "Test*"]
paths = ["tasks"]
