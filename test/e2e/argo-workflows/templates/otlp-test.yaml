apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: otlp-test
spec:
  templates:
    - name: create-sender-config
      inputs:
        parameters:
          - name: namespace
      resource:
        action: apply
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: sender-config
            namespace: {{inputs.parameters.namespace}}
          data:
            sender-config: |+
              receivers:
                file:
                  path: /etc/data/metrics.data
                  loop:
                    enabled: true
                    period: 10s
              exporters:
                otlp:
                  endpoint: ${DD_AGENT_OTLP_ENDPOINT}
                  tls:
                    insecure: true
              service:
                pipelines:
                  metrics:
                    receivers: [file]
                    exporters: [otlp]
    - name: create-metrics-data
      inputs:
        parameters:
          - name: namespace
      resource:
        action: apply
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: metrics-data
            namespace: {{inputs.parameters.namespace}}
          data:
            metrics-data: |+
              {"resourceMetrics":[{"resource":{"attributes":[{"key":"telemetry.sdk.language","value":{"stringValue":"go"}},{"key":"telemetry.sdk.name","value":{"stringValue":"opentelemetry"}},{"key":"telemetry.sdk.version","value":{"stringValue":"1.0.0"}}]},"instrumentationLibraryMetrics":[{"instrumentationLibrary":{"name":"test-meter"},"metrics":[{"name":"an_important_metric","description":"Measures the cumulative epicness of the app","sum":{"dataPoints":[{"attributes":[{"key":"labelA","value":{"stringValue":"chocolate"}},{"key":"labelB","value":{"stringValue":"raspberry"}},{"key":"labelC","value":{"stringValue":"vanilla"}}],"startTimeUnixNano":"1637674530222121000","timeUnixNano":"1637674532223257300","asDouble":14}],"aggregationTemporality":"AGGREGATION_TEMPORALITY_CUMULATIVE","isMonotonic":true}},{"name":"test2.sendtodev.histogram","description":"IO read bytes","histogram":{"dataPoints":[{"attributes":[{"key":"labelA","value":{"stringValue":"chocolate"}},{"key":"labelB","value":{"stringValue":"raspberry"}},{"key":"labelC","value":{"stringValue":"vanilla"}}],"startTimeUnixNano":"1637674530222121000","timeUnixNano":"1637674532223257300","count":"42","sum":1541400,"bucketCounts":["14","0","14","0","0","14","0","0","0","0","0","0"],"explicitBounds":[5000,10000,25000,50000,100000,250000,500000,1000000,2500000,5000000,10000000]}],"aggregationTemporality":"AGGREGATION_TEMPORALITY_CUMULATIVE"}}]}],"schemaUrl":"https://opentelemetry.io/schemas/v1.4.0"}]}
              {"resourceMetrics":[{"resource":{"attributes":[{"key":"telemetry.sdk.language","value":{"stringValue":"go"}},{"key":"telemetry.sdk.name","value":{"stringValue":"opentelemetry"}},{"key":"telemetry.sdk.version","value":{"stringValue":"1.0.0"}}]},"instrumentationLibraryMetrics":[{"instrumentationLibrary":{"name":"test-meter"},"metrics":[{"name":"an_important_metric","description":"Measures the cumulative epicness of the app","sum":{"dataPoints":[{"attributes":[{"key":"labelA","value":{"stringValue":"chocolate"}},{"key":"labelB","value":{"stringValue":"raspberry"}},{"key":"labelC","value":{"stringValue":"vanilla"}}],"startTimeUnixNano":"1637674530222121000","timeUnixNano":"1637674534223387200","asDouble":27}],"aggregationTemporality":"AGGREGATION_TEMPORALITY_CUMULATIVE","isMonotonic":true}},{"name":"test2.sendtodev.histogram","description":"IO read bytes","histogram":{"dataPoints":[{"attributes":[{"key":"labelA","value":{"stringValue":"chocolate"}},{"key":"labelB","value":{"stringValue":"raspberry"}},{"key":"labelC","value":{"stringValue":"vanilla"}}],"startTimeUnixNano":"1637674530222121000","timeUnixNano":"1637674534223387200","count":"81","sum":2972700,"bucketCounts":["27","0","27","0","0","27","0","0","0","0","0","0"],"explicitBounds":[5000,10000,25000,50000,100000,250000,500000,1000000,2500000,5000000,10000000]}],"aggregationTemporality":"AGGREGATION_TEMPORALITY_CUMULATIVE"}}]}],"schemaUrl":"https://opentelemetry.io/schemas/v1.4.0"}]}
    - name: create-deployment
      inputs:
        parameters:
          - name: namespace
      resource:
        action: apply
        manifest: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: otlp-sender
            namespace: {{inputs.parameters.namespace}}
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: otlp-sender
            template:
              metadata:
                labels:
                  app: otlp-sender
              spec:
                containers:
                - name: sender
                  image: datadog/docker-library:e2e-otlp-sender_latest
                  resources:
                    requests:
                      memory: "32Mi"
                      cpu: "100m"
                    limits:
                      memory: "32Mi"
                      cpu: "100m"
                  env:
                  - name: DD_AGENT_HOST
                    valueFrom:
                      fieldRef:
                        fieldPath: status.hostIP
                  - name: DD_AGENT_OTLP_ENDPOINT
                    value: http://$(DD_AGENT_HOST):4317
                  volumeMounts:
                  - name: "sender-config"
                    mountPath: "/etc/otel"
                  - name: "metrics-data"
                    mountPath: "/etc/data"
                volumes:
                  - name: "sender-config"
                    configMap:
                      name: "sender-config"
                      items:
                      - key: sender-config
                        path: config.yaml
                  - name: "metrics-data"
                    configMap:
                      name: "metrics-data"
                      items:
                      - key: metrics-data
                        path: metrics.data
    - name: create
      inputs:
        parameters:
          - name: namespace
      steps:
        - - name: sender-config
            template: create-sender-config
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
          - name: metrics-data
            template: create-metrics-data
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
          - name: deployment
            template: create-deployment
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"

    - name: delete-deployment
      inputs:
        parameters:
          - name: namespace
      resource:
        action: delete
        manifest: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: otlp-sender
            namespace: {{inputs.parameters.namespace}}
    - name: delete-sender-config
      inputs:
        parameters:
          - name: namespace
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: sender-config
            namespace: {{inputs.parameters.namespace}}
    - name: delete-metrics-data
      inputs:
        parameters:
          - name: namespace
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: metrics-data
            namespace: {{inputs.parameters.namespace}}
    - name: delete
      inputs:
        parameters:
          - name: namespace
      steps:
        - - name: deployment
            template: delete-deployment
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
          - name: sender-config
            template: delete-sender-config
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
          - name: metrics-data
            template: delete-metrics-data
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
  
    - name: test
      inputs:
        parameters:
          - name: namespace
      activeDeadlineSeconds: 300
      script:
        image: mongo:4.4.1
        command: [mongo, "fake-datadog.{{inputs.parameters.namespace}}.svc.cluster.local/datadog"]
        source: |
          while (1) {
            sleep(2000);

            // Gauges
            var nb = db.series.find({metric: "an_important_metric"}).count();
            if (nb == 0) {
              print("no 'an_important_metric' metric found");
              continue;
            }

            print("All good");
            break;
          }
    - name: diagnose
      inputs:
        parameters:
          - name: namespace
      activeDeadlineSeconds: 300
      script:
        image: alpine/k8s:1.25.4
        command: [sh]
        source: |
          set -euo pipefail
          set -x

          kubectl --namespace {{inputs.parameters.namespace}} get pods -l app=otlp-sender -o custom-columns=name:metadata.name --no-headers | while read -r po; do
            kubectl --namespace {{inputs.parameters.namespace}} logs $po -c sender || true
          done
