version: 2

# This file uses YAML anchors to deduplicate steps
# see https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
# and https://learnxinyminutes.com/docs/yaml/

experimental:
  # For some reason filtering out notifications keeps being undocumented and
  # marked as experimental but as of today, it's still working.
  notify:
    branches:
      only:
        - main

templates:
  job_template: &job_template
    docker:
      - image: gcr.io/datadoghq/agent-circleci-runner:v50263243-1a30c934
        environment:
          USE_SYSTEM_LIBS: "1"
    working_directory: /go/src/github.com/DataDog/datadog-agent

  step_templates:
    - restore_cache: &restore_deps
        keys:
          # The first match will be used. Doing that so new branches
          # use the default branch's cache but don't pollute it back.
          #
          # If incremental dep fails, increase the cache gen number
          # in restore_deps AND save_deps
          # See https://github.com/DataDog/datadog-agent/pull/2384
          - gen19-godeps-{{ checksum ".circleci/config.yml" }}-{{ .Branch }}-{{ .Revision }}
          - gen19-godeps-{{ checksum ".circleci/config.yml" }}-{{ .Branch }}-
          - gen19-godeps-{{ checksum ".circleci/config.yml" }}-main-
    - save_cache: &save_deps
        key: gen19-godeps-{{ checksum ".circleci/config.yml" }}-{{ .Branch }}-{{ .Revision }}
    - restore_cache: &restore_source
        keys:
          # Cache retrieval is faster than full git checkout
          - v5-repo-{{ .Revision }}
    - save_cache: &save_source
        key: v5-repo-{{ .Revision }}

jobs:
  checkout_code:
    docker:
      - image: alpine/git:latest
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - checkout
      - save_cache:
          <<: *save_source
          paths:
            - /go/src/github.com/DataDog/datadog-agent

  dependencies:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - run:
          name: check go version
          command: |
            inv -e check-go-version
      - run:
          name: grab go deps
          command: |
            inv -e deps
      - run:
          name: install go tooling
          command: |
            inv -e install-tools
      - save_cache:
          <<: *save_deps
          paths:
            - /go/pkg/mod
            - /go/bin
            - /go/src/github.com/DataDog/datadog-agent/dev
            - /usr/local/bin

  integration_tests:
    <<: *job_template
    resource_class: large
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - setup_remote_docker
      - run:
          name: run integration tests
          command: inv -e integration-tests --race --remote-docker

  docker_tests:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - setup_remote_docker
      - run:
          name: run docker image tests
          command: inv -e docker.test
      - run:
          name: run docker image integration tests
          command: inv -e docker.integration-tests

workflows:
  version: 2
  test_and_build:
    jobs:
      - checkout_code
      - dependencies:
          requires:
            - checkout_code
      - integration_tests:
          requires:
            - dependencies
      - docker_tests:
          requires:
            - dependencies
