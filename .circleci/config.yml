version: 2

jobs:
  checkout_code:
    docker:
      - image: jfullaondo/datadog-agent-builder-deb:0.0.2
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - checkout
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
          paths:
            - /go/src/github.com/DataDog/datadog-agent

  dependencies:
    docker:
      - image: jfullaondo/datadog-agent-builder-deb:0.0.2
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run:
          name: grab go deps
          command: invoke deps
      - save_cache:
          key: v1-govendordeps-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/DataDog/datadog-agent/vendor
      - save_cache:
          key: v1-gobindeps
          paths:
            - /go/bin

  unittests:
    docker:
      - image: jfullaondo/datadog-agent-builder-deb:0.0.2
        environment:
          USE_SYSTEM_LIBS: "1"
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-govendordeps-{{ checksum "Gopkg.lock" }}
      - restore_cache:
          keys:
            - v1-gobindeps
      - run:
          name: set non-free sources
          command: sed -i 's/main/main contrib non-free/' /etc/apt/sources.list
      - run:
          name: install mibs for tests
          command: apt-get update && apt-get install -q -y snmp-mibs-downloader
      - run:
          name: run unit tests
          command: invoke -e test --coverage

  agent_deb-x64:
    docker:
      - image: jfullaondo/datadog-agent-builder-deb:0.0.2
        environment:
          AGENT_OMNIBUS_BASE_DIR: $CIRCLE_WORKING_DIRECTORY/.omnibus/var/
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-govendordeps-{{ checksum "Gopkg.lock" }}
      - restore_cache:
          keys:
            - v1-omnibus-deb-{{ checksum ".circle-sha" }}
      - run:
          name: prepare git
          command: git config --global user.email 'dev@datadoghq.com' && git config --global user.name 'Monsieur Croissant'
      - run:
          name: build the deb artifact
          command: invoke agent.omnibus-build
      - save_cache:
          key: v1-omnibus-deb-{{ checksum ".circle-sha" }}
          paths:
            - $AGENT_OMNIBUS_BASE_DIR

  agent_rpm-x64:
    docker:
      - image: jfullaondo/datadog-agent-builder-rpm:0.0.2
        environment:
          AGENT_OMNIBUS_BASE_DIR: $CIRCLE_WORKING_DIRECTORY/.omnibus/var/
    working_directory: /go/src/github.com/DataDog/datadog-agent
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-govendordeps-{{ checksum "Gopkg.lock" }}
      - restore_cache:
          keys:
            - v1-omnibus-rpm-{{ checksum ".circle-sha" }}
      - run:
          name: prepare git
          command: git config --global user.email 'dev@datadoghq.com' && git config --global user.name 'Monsieur Croissant'
      - run:
          name: build the rpm artifact
          command: invoke agent.omnibus-build
      - save_cache:
          key: v1-omnibus-rpm-{{ checksum ".circle-sha" }}
          paths:
            - $AGENT_OMNIBUS_BASE_DIR

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - dependencies:
          requires:
            - checkout_code
      - unittests:
          requires:
            - dependencies
      - agent_deb-x64:
          requires:
            - unittests
      - agent_rpm-x64:
          requires:
            - unittests
