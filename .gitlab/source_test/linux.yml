---
.rtloader_tests:
  stage: source_test
  needs: ["go_deps"]
  before_script:
    - source /root/.bashrc && conda activate $CONDA_ENV
    - !reference [.retrieve_linux_go_deps]
    - inv -e rtloader.make --install-prefix=$CI_PROJECT_DIR/dev
    - inv -e rtloader.install
    - inv -e rtloader.format --raise-if-changed
    - inv -e rtloader.test
  # Placeholder script, overridden by .linux_tests when running all go tests
  script: ["# Skipping go tests"]

.linux_tests:
  stage: source_test
  needs: ["go_deps", "go_tools_deps"]
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.fast_on_dev_branch_only]
  variables:
    FLAVORS: '--flavor base'
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_REQUEST: 16Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    TEST_OUTPUT_FILE: test_output.json
    EXTERNAL_LINKS_PATH: external_links_$CI_JOB_ID.json
  script:
    - !reference [.retrieve_linux_go_tools_deps]
    - inv -e install-tools
    - inv -e gitlab.generate-ci-visibility-links --output=$EXTERNAL_LINKS_PATH
    - FAST_TESTS_FLAG=""
    - if [[ "$FAST_TESTS" == "true" ]]; then FAST_TESTS_FLAG="--only-impacted-packages"; fi
    - inv -e sds.build-library
    - inv -e agent.build
    - inv -e test $FLAVORS --include-sds --race --profile --rerun-fails=2 --coverage --cpus $KUBERNETES_CPU_REQUEST $EXTRA_OPTS --save-result-json $TEST_OUTPUT_FILE --junit-tar "junit-${CI_JOB_NAME}.tgz" --build-stdlib $FAST_TESTS_FLAG --test-washer
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - $TEST_OUTPUT_FILE
      - junit-*.tgz
    reports:
      junit: "**/junit-out-*.xml"
      annotations:
        - $EXTERNAL_LINKS_PATH

.upload_junit_source:
  - $CI_PROJECT_DIR/tools/ci/junit_upload.sh

.upload_coverage:
  # Upload coverage files to Codecov. Never fail on coverage upload.
  - CODECOV_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $CODECOV_TOKEN) || exit $?; export CODECOV_TOKEN
  - inv -e coverage.upload-to-codecov $COVERAGE_CACHE_FLAG || true

.linux_x64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]

tests_deb-x64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
    - .linux_x64
  after_script:
    - !reference [.upload_junit_source]
    - !reference [.upload_coverage]
  variables:
    CONDA_ENV: ddpy3

tests_flavor_iot_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests
    - .linux_x64
  after_script:
    - !reference [.upload_junit_source]
  variables:
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor iot'

tests_flavor_dogstatsd_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests
    - .linux_x64
  after_script:
    - !reference [.upload_junit_source]
  variables:
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor dogstatsd'

tests_flavor_heroku_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests
    - .linux_x64
  after_script:
    - !reference [.upload_junit_source]
  variables:
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor heroku'

tests_rpm-x64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
  after_script:
    - !reference [.upload_junit_source]
    - !reference [.upload_coverage]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    CONDA_ENV: ddpy3
    EXTRA_OPTS: '--build-exclude=systemd'

tests_deb-arm64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
  after_script:
    - !reference [.upload_coverage]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    CONDA_ENV: ddpy3

tests_rpm-arm64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
  after_script:
    - !reference [.upload_coverage]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    CONDA_ENV: ddpy3

# Check consistency of go.mod file with project imports
go_mod_tidy_check:
  stage: source_test
  extends: .linux_x64
  needs: ["go_deps"]
  before_script:
    - !reference [.retrieve_linux_go_deps]
  script:
    - inv -e check-mod-tidy
    - inv -e check-go-mod-replaces
  variables:
    KUBERNETES_MEMORY_REQUEST: "16Gi"
    KUBERNETES_MEMORY_LIMIT: "16Gi"
    KUBERNETES_CPU_REQUEST: 4

new-e2e-unit-tests:
  extends: .linux_tests
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/test-infra-definitions/runner$TEST_INFRA_DEFINITIONS_BUILDIMAGES_SUFFIX:$TEST_INFRA_DEFINITIONS_BUILDIMAGES
  tags: ["arch:amd64"]
  needs:
    - !reference [ .needs_new_e2e_template ]
    - go_deps
    - go_tools_deps
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    - !reference [.retrieve_linux_go_e2e_deps]
    # Setup AWS Credentials
    - mkdir -p ~/.aws
    - $CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_QA_PROFILE >> ~/.aws/config || exit $?
    - export AWS_PROFILE=agent-qa-ci
    # Use S3 backend
    - pulumi login "s3://dd-pulumi-state?region=us-east-1&awssdk=v2&profile=$AWS_PROFILE"
  script:
    - inv -e gitlab.generate-ci-visibility-links --output=$EXTERNAL_LINKS_PATH
    - inv -e new-e2e-tests.run --targets ./pkg/utils --junit-tar junit-${CI_JOB_ID}.tgz ${EXTRA_PARAMS}
  after_script:
    - !reference [.upload_junit_source]
  variables:
    KUBERNETES_MEMORY_REQUEST: 12Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    KUBERNETES_CPU_REQUEST: 6
    # Not using the entrypoint script for the e2e runner image
    FF_KUBERNETES_HONOR_ENTRYPOINT: false
  timeout: 10m
