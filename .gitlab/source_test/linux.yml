---
.rtloader_tests:
  stage: source_test
  needs: ["go_deps"]
  before_script:
    - source /root/.bashrc && conda activate $CONDA_ENV
    - !reference [.retrieve_linux_go_deps]
    - inv -e rtloader.make --install-prefix=$CI_PROJECT_DIR/dev --python-runtimes "$PYTHON_RUNTIMES"
    - inv -e rtloader.install
    - inv -e rtloader.format --raise-if-changed
    - inv -e rtloader.test
  # Placeholder script, overridden by .linux_tests when running all go tests
  script: ["# Skipping go tests"]

.linux_tests:
  stage: source_test
  needs: ["go_deps", "go_tools_deps"]
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.fast_on_dev_branch_only]
  variables:
    FLAVORS: '--flavor base'
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_REQUEST: 16Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    TEST_OUTPUT_FILE: test_output.json
  script:
    - !reference [.retrieve_linux_go_tools_deps]
    - inv -e install-tools
    - FAST_TESTS_FLAG=""
    - if [[ "$FAST_TESTS" == "true" ]]; then FAST_TESTS_FLAG="--only-impacted-packages"; fi
    - inv -e sds.build-library
    - inv -e test $FLAVORS --include-sds --race --profile --rerun-fails=2 --python-runtimes "$PYTHON_RUNTIMES" --coverage --cpus $KUBERNETES_CPU_REQUEST $EXTRA_OPTS --save-result-json $TEST_OUTPUT_FILE --junit-tar "junit-${CI_JOB_NAME}.tgz" --build-stdlib $FAST_TESTS_FLAG --test-washer
    # Upload coverage files to Codecov. Never fail on coverage upload.
    - export CODECOV_TOKEN=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $CODECOV_TOKEN_SSM_NAME)
    - inv -e codecov || true
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - $TEST_OUTPUT_FILE
      - junit-*.tgz
    reports:
      junit: "**/junit-out-*.xml"

.upload_junit_source:
  - $CI_PROJECT_DIR/tools/ci/junit_upload.sh

.linux_tests_with_upload:
  extends: .linux_tests
  after_script:
    - !reference [.upload_junit_source]

.linux_lint:
  stage: source_test
  needs: ["go_deps", "go_tools_deps"]
  variables:
    FLAVORS: '--flavor base'
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_REQUEST: 16Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
  script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    - source /root/.bashrc && conda activate ddpy3
    - inv -e rtloader.make --install-prefix=$CI_PROJECT_DIR/dev --python-runtimes "3"
    - inv -e rtloader.install
    - inv -e install-tools
    - inv -e linter.go --cpus $KUBERNETES_CPU_REQUEST $FLAVORS $EXTRA_OPTS

.linux_x64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]

tests_deb-x64-py2:
  extends:
    - .rtloader_tests
    - .linux_x64
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.except_mergequeue]
    - when: on_success
  variables:
    PYTHON_RUNTIMES: '2'
    CONDA_ENV: ddpy2

tests_deb-x64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests_with_upload
    - .linux_x64
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3

lint_linux-x64:
  extends:
    - .linux_lint
    - .linux_x64
tests_flavor_iot_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests_with_upload
    - .linux_x64
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor iot'

lint_flavor_iot_linux-x64:
  extends:
    - .linux_lint
    - .linux_x64
  variables:
    FLAVORS: '--flavor iot'

tests_flavor_dogstatsd_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests_with_upload
    - .linux_x64
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor dogstatsd'

lint_flavor_dogstatsd_linux-x64:
  extends:
    - .linux_lint
    - .linux_x64
  variables:
    FLAVORS: '--flavor dogstatsd'

tests_flavor_heroku_deb-x64:
  extends:
    - .rtloader_tests
    - .linux_tests_with_upload
    - .linux_x64
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3
    FLAVORS: '--flavor heroku'

lint_flavor_heroku_linux-x64:
  extends:
    - .linux_lint
    - .linux_x64
  variables:
    FLAVORS: '--flavor heroku'

# Exclude systemd because it cannot succeed on Centos 6: the image doesn't have the shared object required by
# https://github.com/coreos/go-systemd/blob/c8cc474ba8655dfbdb0ac7fcc09b7faf5b643caf/sdjournal/functions.go#L46
# This is OK because the test on systemd still runs on the debian image above
tests_rpm-x64-py2:
  extends: .rtloader_tests
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.except_mergequeue]
    - when: on_success
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    PYTHON_RUNTIMES: '2'
    CONDA_ENV: ddpy2
    EXTRA_OPTS: '--build-exclude=systemd'

tests_rpm-x64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests_with_upload
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3
    EXTRA_OPTS: '--build-exclude=systemd'

tests_deb-arm64-py2:
  extends: .rtloader_tests
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.except_mergequeue]
    - when: on_success
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    PYTHON_RUNTIMES: '2'
    CONDA_ENV: ddpy2

tests_deb-arm64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3

lint_linux-arm64:
  extends:
    - .linux_lint
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]

tests_rpm-arm64-py2:
  extends: .rtloader_tests
  rules:
    - !reference [.except_disable_unit_tests]
    - !reference [.except_mergequeue]
    - when: on_success
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    PYTHON_RUNTIMES: '2'
    CONDA_ENV: ddpy2

tests_rpm-arm64-py3:
  extends:
    - .rtloader_tests
    - .linux_tests
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    PYTHON_RUNTIMES: '3'
    CONDA_ENV: ddpy3

# Check consistency of go.mod file with project imports
go_mod_tidy_check:
  stage: source_test
  extends: .linux_x64
  needs: ["go_deps"]
  variables:
    KUBERNETES_CPU_REQUEST: 4
  before_script:
    - source /root/.bashrc
    - !reference [.retrieve_linux_go_deps]
  script:
    - inv -e check-mod-tidy
    - inv -e check-go-mod-replaces
  variables:
    KUBERNETES_MEMORY_REQUEST: "8Gi"
    KUBERNETES_MEMORY_LIMIT: "8Gi"

new-e2e-unit-tests:
  extends: .linux_tests_with_upload
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/test-infra-definitions/runner$TEST_INFRA_DEFINITIONS_BUILDIMAGES_SUFFIX:$TEST_INFRA_DEFINITIONS_BUILDIMAGES
  tags: ["arch:amd64"]
  before_script:
    # Setup AWS Credentials
    - mkdir -p ~/.aws
    - $CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $AGENT_QA_PROFILE_SSM_NAME >> ~/.aws/config
    - export AWS_PROFILE=agent-qa-ci
    # Use S3 backend
    - pulumi login "s3://dd-pulumi-state?region=us-east-1&awssdk=v2&profile=$AWS_PROFILE"
  script:
    - inv -e new-e2e-tests.run --targets ./pkg/utils --junit-tar junit-${CI_JOB_ID}.tgz ${EXTRA_PARAMS}
  after_script:
    - $CI_PROJECT_DIR/tools/ci/junit_upload.sh
  variables:
    KUBERNETES_MEMORY_REQUEST: 12Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    KUBERNETES_CPU_REQUEST: 6
