---
.retrieve_sysprobe_deps:
  - mkdir -p $DATADOG_AGENT_EMBEDDED_PATH/bin
  - mkdir -p $DATADOG_AGENT_EMBEDDED_PATH/include
  - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/clang-$CLANG_LLVM_VER.$ARCH /tmp/clang-bpf
  - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/llc-$CLANG_LLVM_VER.$ARCH /tmp/llc-bpf

.build_sysprobe_artifacts:
  # kitchen prepare also builds object files
  - inv -e system-probe.kitchen-prepare --ci

# Run tests for eBPF code
.tests_linux_ebpf:
  stage: source_test
  needs: ["go_deps", "go_tools_deps"]
  variables:
    KUBERNETES_MEMORY_REQUEST: "16Gi"
    KUBERNETES_MEMORY_LIMIT: "16Gi"
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
  script:
    - inv -e install-tools
    - inv -e system-probe.object-files
    - invoke -e lint-go --build system-probe-unit-tests --cpus 4 --targets ./pkg
    - invoke -e security-agent.run-ebpf-unit-tests --verbose
    - invoke -e lint-go --targets=./pkg/security/tests --cpus 4 --build-tags="functionaltests stresstests trivy containerd linux_bpf ebpf_bindata" --arch=$TASK_ARCH

.tests_windows_sysprobe:
  stage: source_test
  needs: ["go_deps"]
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - $ErrorActionPreference = "Stop"
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - !reference [.setup_python_mirror_win]
    - >
      docker run --rm
      -m 16384M
      -v "$(Get-Location):c:\mnt"
      -e AWS_NETWORKING=true
      -e CI_PIPELINE_ID=${CI_PIPELINE_ID}
      -e CI_PROJECT_NAME=${CI_PROJECT_NAME}
      -e SIGN_WINDOWS_DD_WCS=true
      -e PY_RUNTIMES="$PYTHON_RUNTIMES"
      -e GOMODCACHE="c:\modcache"
      -e PIP_INDEX_URL=${PIP_INDEX_URL}
      486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}${Env:DATADOG_AGENT_WINBUILDIMAGES_SUFFIX}:${Env:DATADOG_AGENT_WINBUILDIMAGES}
      c:\mnt\tasks\winbuildscripts\sysprobe.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
  artifacts:
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files

tests_ebpf_x64:
  extends: .tests_linux_ebpf
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64
    TASK_ARCH: x64

tests_ebpf_arm64:
  extends: .tests_linux_ebpf
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64
    TASK_ARCH: arm64

.prepare_ebpf_functional_tests:
  stage: source_test
  needs: ["go_deps"]
  artifacts:
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - inv -e install-tools
    - !reference [.retrieve_sysprobe_deps]
  script:
    - !reference [.build_sysprobe_artifacts]
    - invoke -e security-agent.kitchen-prepare --skip-linters
    - cp /tmp/clang-bpf $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/clang-bpf
    - cp /tmp/llc-bpf $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/llc-bpf

prepare_ebpf_functional_tests_arm64:
  extends: .prepare_ebpf_functional_tests
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64

prepare_ebpf_functional_tests_x64:
  extends: .prepare_ebpf_functional_tests
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64

tests_windows_sysprobe_x64:
  extends: .tests_windows_sysprobe
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x64"
