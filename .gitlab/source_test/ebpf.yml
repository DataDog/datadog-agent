---
.retrieve_sysprobe_deps:
  - mkdir -p $DATADOG_AGENT_EMBEDDED_PATH/bin
  - mkdir -p $DATADOG_AGENT_EMBEDDED_PATH/include
  - ${S3_CP_CMD} "${S3_PERMANENT_ARTIFACTS_URI}/clang-${CLANG_LLVM_VER}.${ARCH}.${CLANG_BUILD_VERSION}" /opt/datadog-agent/embedded/bin/clang-bpf
  - ${S3_CP_CMD} "${S3_PERMANENT_ARTIFACTS_URI}/llc-${CLANG_LLVM_VER}.${ARCH}.${CLANG_BUILD_VERSION}" /opt/datadog-agent/embedded/bin/llc-bpf
  - ${S3_CP_CMD} "${S3_PERMANENT_ARTIFACTS_URI}/llvm-strip-${CLANG_LLVM_VER}.${ARCH}.${CLANG_BUILD_VERSION}" /opt/datadog-agent/embedded/bin/llvm-strip
  - chmod +x /opt/datadog-agent/embedded/bin/{clang-bpf,llc-bpf,llvm-strip}

# Run tests for eBPF code
.tests_linux_ebpf:
  stage: source_test
  extends: .unit_test_base
  needs: ["go_deps", "go_tools_deps"]
  variables:
    KUBERNETES_MEMORY_REQUEST: "16Gi"
    KUBERNETES_MEMORY_LIMIT: "16Gi"
    KUBERNETES_CPU_REQUEST: 6
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
  script:
    - dda inv -- -e install-tools
    - dda inv -- -e system-probe.object-files
    - dda inv -- -e linter.go --build system-probe-unit-tests --cpus 4 --targets ./pkg
    - dda inv -- -e security-agent.run-ebpf-unit-tests --verbose
    - dda inv -- -e linter.go --targets=./pkg/security/tests --cpus 4 --build-tags="functionaltests stresstests trivy containerd linux_bpf ebpf_bindata"

tests_ebpf_x64:
  extends: .tests_linux_ebpf
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$CI_IMAGE_LINUX_GLIBC_2_17_X64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_17_X64
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64
    TASK_ARCH: x64

tests_ebpf_arm64:
  extends: .tests_linux_ebpf
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$CI_IMAGE_LINUX_GLIBC_2_23_ARM64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_23_ARM64
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64
    TASK_ARCH: arm64

.prepare_sysprobe_ebpf_functional_tests:
  stage: source_test
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs: ["go_deps", "go_tools_deps"]
  variables:
    KUBERNETES_CPU_REQUEST: 4
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/kmt-deps
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    - dda inv -- -e install-tools
    - !reference [.retrieve_sysprobe_deps]
  script:
    - dda inv -- -e kmt.prepare --ci --component="system-probe"

prepare_sysprobe_ebpf_functional_tests_arm64:
  extends: .prepare_sysprobe_ebpf_functional_tests
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$CI_IMAGE_LINUX_GLIBC_2_23_ARM64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_23_ARM64
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64
    DD_CC: "aarch64-unknown-linux-gnu-gcc"
    DD_CXX: "aarch64-unknown-linux-gnu-g++"

prepare_sysprobe_ebpf_functional_tests_x64:
  extends: .prepare_sysprobe_ebpf_functional_tests
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$CI_IMAGE_LINUX_GLIBC_2_17_X64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_17_X64
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64
    DD_CC: 'x86_64-unknown-linux-gnu-gcc'
    DD_CXX: 'x86_64-unknown-linux-gnu-g++'

.prepare_secagent_ebpf_functional_tests:
  stage: source_test
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs: ["go_deps", "go_tools_deps"]
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/kmt-deps
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    - dda inv -- -e install-tools
    - !reference [.retrieve_sysprobe_deps]
  script:
    - dda inv -- -e kmt.prepare --ci --component="security-agent"

prepare_secagent_ebpf_functional_tests_arm64:
  extends: .prepare_secagent_ebpf_functional_tests
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$CI_IMAGE_LINUX_GLIBC_2_23_ARM64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_23_ARM64
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64
    DD_CC: "aarch64-unknown-linux-gnu-gcc"
    DD_CXX: "aarch64-unknown-linux-gnu-g++"

prepare_secagent_ebpf_functional_tests_x64:
  extends: .prepare_secagent_ebpf_functional_tests
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$CI_IMAGE_LINUX_GLIBC_2_17_X64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_17_X64
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64
    DD_CC: 'x86_64-unknown-linux-gnu-gcc'
    DD_CXX: 'x86_64-unknown-linux-gnu-g++'
