---
# golang_deps_diff stage
# Contains the step to generate diff of go imports for each binary/build
golang_deps_diff:
  stage: source_test
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux$CI_IMAGE_LINUX_SUFFIX:$CI_IMAGE_LINUX
  tags: ["arch:amd64", "specific:true"]
  rules:
    - !reference [.on_dev_branches]
    - when: on_success
  needs: ["go_deps"]
  variables:
    KUBERNETES_CPU_REQUEST: 4
    OVERRIDE_GIT_STRATEGY: "clone" # needed because this job uses `git merge-base`
  before_script:
    - !reference [.retrieve_linux_go_deps]
  script:
    # Get API key to send metrics
    - DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_API_KEY_ORG2 token) || exit $?; export DD_API_KEY
    - dda inv -- -e go-deps.diff --report-file=deps-report.md --report-metrics --git-ref "${CI_COMMIT_REF_NAME}"
  artifacts:
    paths:
      - deps-report.md
    expire_in: 2 weeks

golang_deps_commenter:
  stage: source_test
  image:
    name: "486234852809.dkr.ecr.us-east-1.amazonaws.com/pr-commenter:3"
    entrypoint: [""] # disable entrypoint script for the pr-commenter image
  tags: ["arch:amd64", "specific:true"]
  rules:
    - !reference [.on_dev_branches]
    - when: on_success
  needs: ["golang_deps_diff"]
  variables:
    # Not using the entrypoint script for the pr-commenter image
    FF_KUBERNETES_HONOR_ENTRYPOINT: false
  script: # ignore error message about no PR, because it happens for dev branches without PRs
    - echo "${CI_COMMIT_REF_NAME}"
    # Check if the report file exists and has content
    - |
      if [[ ! -s "deps-report.md" ]]
      then
          echo "ERROR: Go deps report not found -- no PR comment posted"
          exit 1
      fi
    # Transform the Markdown report into a valid JSON string
    - cat deps-report.md | sed -z 's/\n/\\n/g' | sed -z 's/"/\\"/g' > deps-report-json-string.txt
    # Create JSON payload for the pr-commenter service
    - PR_COMMENT_JSON_PAYLOAD='{"org":"DataDog", "repo":"datadog-agent", "commit":"'"${CI_COMMIT_SHA}"'", "header":"Go Package Import Differences", "message":"'"$(cat deps-report-json-string.txt)"'"}'
    - printf "%s\n" "PR comment JSON payload: ${PR_COMMENT_JSON_PAYLOAD}"
    # Send HTTP request to pr-commenter service
    - |
      set +e
      out=$(curl https://pr-commenter.us1.ddbuild.io/internal/cit/pr-comment \
          -H "$(authanywhere)" \
          -H "X-DdOrigin: curl" \
          -X PATCH \
          -d "${PR_COMMENT_JSON_PAYLOAD}")
      exitcode=$?
      set -e
      if [ -n "${out}" ]; then
        if [ $exitcode -eq 0 ]; then
          echo $out
        else
          echo $out >&2
        fi
      fi
      if [ "${out}" != "${out/invalid request: no pr found for this commit}" ]; then
        exit 0
      fi
      exit $exitcode

golang_deps_send_count_metrics:
  stage: source_test
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux$CI_IMAGE_LINUX_SUFFIX:$CI_IMAGE_LINUX
  tags: ["arch:amd64", "specific:true"]
  needs: ["go_deps"]
  before_script:
    - !reference [.retrieve_linux_go_deps]
  script:
    # Get API key to send metrics
    - DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_API_KEY_ORG2 token) || exit $?; export DD_API_KEY
    - dda inv -- -e go-deps.send-count-metrics --git-sha "${CI_COMMIT_SHA}" --git-ref "${CI_COMMIT_REF_NAME}"
