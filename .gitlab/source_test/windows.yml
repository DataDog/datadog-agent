---
.tests_windows_base:
  stage: source_test
  needs: ["go_deps", "go_tools_deps"]
  tags: ["runner:windows-docker", "windowsversion:1809"]
  script:
    - $ErrorActionPreference = "Stop"
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    # we pass in CI_JOB_URL and CI_JOB_NAME so that they can be added to additional tags
    # inside JUNIT_TAR and then later used by datadog-ci
    - docker run --rm -m 8192M -v "$(Get-Location):c:\mnt" -e CI_JOB_URL="${CI_JOB_URL}" -e CI_JOB_NAME="${CI_JOB_NAME}" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e GOMODCACHE="c:\modcache" -e JUNIT_TAR="c:\mnt\junit-${CI_JOB_NAME}.tgz" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:$Env:DATADOG_AGENT_WINBUILDIMAGES c:\mnt\tasks\winbuildscripts\unittests.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - test_output.json
      - junit-*.tgz

tests_windows-x64:
  extends: .tests_windows_base
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x64"
