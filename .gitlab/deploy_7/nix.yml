---
.if_not_version_7: &if_not_version_7
  if: $RELEASE_VERSION_7 == ""

.if_deploy: &if_deploy
  if: $DEPLOY_AGENT == "true"

deploy_staging_deb-7:
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  resource_group: deb_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies:
    - agent_deb-x64-a7
    - agent_deb-arm64-a7
    - iot_agent_deb-x64
    - iot_agent_deb-arm64
    - iot_agent_deb-armhf
    - dogstatsd_deb-x64
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  script:
    # We first check that the current version hasn't already been deployed
    # (same as the check_already_deployed_version). We do this twice to mitigate
    # races and issues with retries while failing early if there is an issue.
    - pushd $OMNIBUS_PACKAGE_DIR
    - ~/deploy_scripts/fail_deb_is_pkg_already_exists.sh *_7.*amd64.deb
    - popd

    - set +x  # make sure we don't output the creds to the build log

    - APT_SIGNING_KEY_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_id --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_PRIVATE_KEY_PART1=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_private_key_part1 --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_PRIVATE_KEY_PART2=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_private_key_part2 --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_KEY_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_passphrase --with-decryption --query "Parameter.Value" --out text)

    - echo "$APT_SIGNING_KEY_ID"
    - printf -- "$APT_SIGNING_PRIVATE_KEY_PART1\n$APT_SIGNING_PRIVATE_KEY_PART2\n" | gpg --import --batch

    # Release the artifacts to the "7" component
    - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m 7 -b $DEB_S3_BUCKET -a amd64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_7.*amd64.deb
    - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m 7 -b $DEB_S3_BUCKET -a x86_64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_7.*amd64.deb
    - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m 7 -b $DEB_S3_BUCKET -a arm64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_7.*arm64.deb
    - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m 7 -b $DEB_S3_BUCKET -a armhf --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_7.*armhf.deb

deploy_staging_rpm-7:
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  resource_group: rpm_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies:
    - agent_rpm-x64-a7
    - agent_rpm-arm64-a7
    - iot_agent_rpm-x64
    - iot_agent_rpm-arm64
    - iot_agent_rpm-armhf
    - dogstatsd_rpm-x64
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  script:
    - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "$DEB_RPM_BUCKET_BRANCH/7/x86_64/" -a "x86_64" $OMNIBUS_PACKAGE_DIR/*-7.*x86_64.rpm
    - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "$DEB_RPM_BUCKET_BRANCH/7/aarch64/" -a "aarch64" $OMNIBUS_PACKAGE_DIR/*-7.*aarch64.rpm
    - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "$DEB_RPM_BUCKET_BRANCH/7/armv7hl/" -a "armv7hl" $OMNIBUS_PACKAGE_DIR/*-7.*armv7hl.rpm

deploy_staging_suse_rpm-7:
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  resource_group: suse_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies:
    - agent_suse-x64-a7
    - dogstatsd_suse-x64
    - iot_agent_suse-x64
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR_SUSE
  script:
    - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "suse/$DEB_RPM_BUCKET_BRANCH/7/x86_64/" -a "x86_64" $OMNIBUS_PACKAGE_DIR_SUSE/*-7.*x86_64.rpm

deploy_staging_dmg-a7:
  allow_failure: true
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies: ["agent_dmg-x64-a7"]
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  script:
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-7*.dmg" $OMNIBUS_PACKAGE_DIR s3://$MACOS_S3_BUCKET/$DEB_RPM_BUCKET_BRANCH/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy dsd binary to staging bucket
deploy_staging_dsd:
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies: []
  script:
    - python3.6 -m pip install --user -r requirements.txt
    - $S3_CP_CMD $S3_ARTIFACTS_URI/dogstatsd/dogstatsd ./dogstatsd
    - export PACKAGE_VERSION=$(inv agent.version --url-safe --major-version 7)
    - $S3_CP_CMD ./dogstatsd $S3_DSD6_URI/linux/dogstatsd-$PACKAGE_VERSION --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy iot-agent binary to staging bucket
deploy_staging_iot_agent:
  rules:
    - <<: *if_not_version_7
      when: never
    - <<: *if_deploy
  stage: deploy7
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies: []
  script:
    - python3.6 -m pip install --user -r requirements.txt
    - $S3_CP_CMD $S3_ARTIFACTS_URI/iot/agent ./agent
    - export PACKAGE_VERSION=$(inv agent.version --url-safe --major-version 7)
    - $S3_CP_CMD ./agent $S3_DSD6_URI/linux/iot/agent-$PACKAGE_VERSION --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy android packages to a public s3 bucket when tagged
deploy_staging_android_tags:
  rules:
    # - <<: *if_deploy_on_tag_7
    # This means this job is never run, but let's keep it around in case we need it one day
    - when: never
  stage: deploy7
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main", "size:large"]
  dependencies: ["agent_android_apk"]
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  script:
    - $S3_CP_CMD --recursive --exclude "*" --include "*.apk" $OMNIBUS_PACKAGE_DIR s3://$ANDROID_BUILDS_S3_BUCKET/tagged/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732
