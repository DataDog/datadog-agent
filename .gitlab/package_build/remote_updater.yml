---
#
# Remote updater payloads
#
.agent_build_common_remote_updater:
  script:
    - echo "About to build for $RELEASE_VERSION"
    - export INSTALL_DIR=/opt/datadog-packages/datadog-agent/$(inv agent.version -u)-1
    - !reference [.setup_ruby_mirror_linux]
    - !reference [.setup_python_mirror_linux]
    - !reference [.retrieve_linux_go_deps]
    # remove artifacts from previous pipelines that may come from the cache
    - rm -rf $OMNIBUS_PACKAGE_DIR/*
    # Artifacts and cache must live within project directory but we run omnibus in a neutral directory.
    # Thus, we move the artifacts at the end in a gitlab-friendly dir.
    - tar -xf $CI_PROJECT_DIR/sysprobe-build-outputs.tar.xz
    - mkdir -p /tmp/system-probe
    - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/clang-$CLANG_LLVM_VER.${PACKAGE_ARCH} /tmp/system-probe/clang-bpf
    - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/llc-$CLANG_LLVM_VER.${PACKAGE_ARCH} /tmp/system-probe/llc-bpf
    - cp $CI_PROJECT_DIR/minimized-btfs.tar.xz /tmp/system-probe/minimized-btfs.tar.xz
    - chmod 0744 /tmp/system-probe/clang-bpf /tmp/system-probe/llc-bpf
    # NOTE: for now, we consider "ociru" to be a "redhat_target" in omnibus/lib/ostools.rb
    # if we ever start building on a different platform, that might need to change
    - inv -e agent.omnibus-build --release-version "$RELEASE_VERSION" --major-version "$AGENT_MAJOR_VERSION" --python-runtimes "$PYTHON_RUNTIMES" --base-dir $OMNIBUS_BASE_DIR  ${USE_S3_CACHING} --skip-deps --go-mod-cache="$GOPATH/pkg/mod" --system-probe-bin=/tmp/system-probe --host-distribution=ociru
    - ls -la $OMNIBUS_PACKAGE_DIR
    - !reference [.upload_sbom_artifacts]
  variables:
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_REQUEST: "32Gi"
    KUBERNETES_MEMORY_LIMIT: "32Gi"
  artifacts:
    expire_in: 2 weeks
    paths:
      - $OMNIBUS_PACKAGE_DIR

# build Agent package for remote_updater-x64
agent_remote_updater-x64-a7:
  extends: .agent_build_common_remote_updater
  rules:
    - !reference [.on_a7]
  stage: package_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  needs:
    [
      "go_mod_tidy_check",
      "build_system-probe-x64",
      "go_deps",
      "generate_minimized_btfs_x64",
    ]
  variables:
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: "3"
    PACKAGE_ARCH: amd64
    DESTINATION_OCI: "datadog-agent-7-remote-updater-amd64.tar.xz"
  before_script:
    - source /root/.bashrc
    - export RELEASE_VERSION=$RELEASE_VERSION_7

# build Agent package for remote_updater-x64
agent_remote_updater-arm64-a7:
  extends: .agent_build_common_remote_updater
  rules:
    - !reference [.on_a7]
  stage: package_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  needs:
    [
      "go_mod_tidy_check",
      "build_system-probe-arm64",
      "go_deps",
      "generate_minimized_btfs_arm64",
    ]
  variables:
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: "3"
    PACKAGE_ARCH: arm64
    DESTINATION_OCI: "datadog-agent-7-remote-updater-arm64.tar.xz"
  before_script:
    - source /root/.bashrc
    - export RELEASE_VERSION=$RELEASE_VERSION_7

#
# The updater program
#
.updater_build_common:
  script:
    - source /root/.bashrc
    - !reference [.setup_ruby_mirror_linux]
    - !reference [.retrieve_linux_go_deps]
    - echo "About to build for $RELEASE_VERSION"
    # remove artifacts from previous pipelines that may come from the cache
    - rm -rf $OMNIBUS_PACKAGE_DIR/*
    # Artifacts and cache must live within project directory but we run omnibus in a neutral directory.
    # Thus, we move the artifacts at the end in a gitlab-friendly dir.
    - inv -e updater.omnibus-build --release-version "$RELEASE_VERSION" --base-dir $OMNIBUS_BASE_DIR ${USE_S3_CACHING} --skip-deps --go-mod-cache="$GOPATH/pkg/mod"
    - ls -la $OMNIBUS_PACKAGE_DIR
    - $S3_CP_CMD $OMNIBUS_PACKAGE_DIR/datadog-updater-*-${PACKAGE_ARCH}.tar.xz $S3_ARTIFACTS_URI/$DESTINATION_FILE
    - !reference [.upload_sbom_artifacts]
  variables:
    AGENT_MAJOR_VERSION: 7
  artifacts:
    expire_in: 2 weeks
    paths:
      - $OMNIBUS_PACKAGE_DIR

updater-amd64:
  extends: .updater_build_common
  rules: !reference [.on_a7]
  stage: package_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  needs: ["go_mod_tidy_check", "go_deps"]
  variables:
    PACKAGE_ARCH: amd64
    DESTINATION_FILE: "datadog-updater_7-amd64.tar.xz"
  before_script:
    - export RELEASE_VERSION=$RELEASE_VERSION_7

updater-arm64:
  extends: .updater_build_common
  rules: !reference [.on_a7]
  stage: package_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_ARMBUILDIMAGES_SUFFIX:$DATADOG_AGENT_ARMBUILDIMAGES
  tags: ["arch:arm64"]
  needs: ["go_mod_tidy_check", "go_deps"]
  variables:
    PACKAGE_ARCH: arm64
    DESTINATION_FILE: "datadog-updater_7-arm64.tar.xz"
  before_script:
    - export RELEASE_VERSION=$RELEASE_VERSION_7

