---
.windows_msi_base:
  stage: package_build
  tags: ["runner:windows-docker", "windowsversion:1809"]
  needs: ["go_mod_tidy_check"]
  script:
    - $ErrorActionPreference = 'Stop'
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - if (Test-Path omnibus\pkg) { remove-item -recurse -force omnibus\pkg }
    - mkdir omnibus\pkg
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID} -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION" -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e INTEGRATIONS_CORE_VERSION="$INTEGRATIONS_CORE_VERSION" -e GOMODCACHE="/gomodcache" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e DEBUG_CUSTOMACTION="$DEBUG_CUSTOMACTION" -e DEB_RPM_BUCKET_BRANCH="$DEB_RPM_BUCKET_BRANCH" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDIMAGES} c:\mnt\tasks\winbuildscripts\buildwin.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
    - get-childitem omnibus\pkg
  after_script:
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
  artifacts:
    expire_in: 2 weeks
    paths:
      - omnibus/pkg

.windows_main_agent_base:
  extends: .windows_msi_base
  variables:
    OMNIBUS_TARGET: main

windows_msi_and_bosh_zip_x64-a7:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a7]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: '3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_7

windows_msi_x86-a7:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a7_except_deploy]
  allow_failure: true
  variables:
    ARCH: "x86"
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: '3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_7

windows_msi_x64-a6:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a6]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 6
    PYTHON_RUNTIMES: '2,3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_6

windows_msi_x86-a6:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a6_except_deploy]
  allow_failure: true
  variables:
    ARCH: "x86"
    AGENT_MAJOR_VERSION: 6
    PYTHON_RUNTIMES: '2,3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_6

# cloudfoundry IoT build for Windows
windows_zip_agent_binaries_x64-a7:
  rules:
    !reference [.on_a7]
  stage: package_build
  tags: ["runner:windows-docker", "windowsversion:1809"]
  needs: ["go_mod_tidy_check"]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 7
    OMNIBUS_TARGET: agent_binaries
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_7
  script:
    - $ErrorActionPreference = "Stop"
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - if (Test-Path omnibus\pkg) { remove-item -recurse -force omnibus\pkg }
    - mkdir omnibus\pkg
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION" -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e INTEGRATIONS_CORE_VERSION="$INTEGRATIONS_CORE_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e GOMODCACHE="/gomodcache" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e DEB_RPM_BUCKET_BRANCH="$DEB_RPM_BUCKET_BRANCH" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDIMAGES} c:\mnt\tasks\winbuildscripts\buildwin.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
    - get-childitem omnibus\pkg
  artifacts:
    expire_in: 2 weeks
    paths:
      - omnibus/pkg
