---
.windows_msi_base:
  stage: package_build
  tags: ["runner:windows-docker", "windowsversion:1809"]
  needs: ["go_mod_tidy_check", "go_deps", "build_vcpkg_deps"]
  script:
    - $ErrorActionPreference = 'Stop'
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - if (Test-Path omnibus\pkg) { remove-item -recurse -force omnibus\pkg }
    - mkdir omnibus\pkg
    - $vcpkgBlobSaSUrl = (aws ssm get-parameter --region us-east-1 --name ci.datadog-agent-buildimages.vcpkg_blob_sas_url --with-decryption --query "Parameter.Value" --out text)
    - !reference [.setup_ruby_mirror_win]
    - !reference [.setup_python_mirror_win]
    - >
      docker run --rm
      -m 4096M
      -v "$(Get-Location):c:\mnt"
      -e CI_JOB_ID=${CI_JOB_ID}
      -e CI_PIPELINE_ID=${CI_PIPELINE_ID}
      -e CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH}
      -e OMNIBUS_TARGET=${OMNIBUS_TARGET}
      -e WINDOWS_BUILDER=true
      -e RELEASE_VERSION="$RELEASE_VERSION"
      -e MAJOR_VERSION="$AGENT_MAJOR_VERSION"
      -e PY_RUNTIMES="$PYTHON_RUNTIMES"
      -e INTEGRATIONS_CORE_VERSION="$INTEGRATIONS_CORE_VERSION"
      -e GOMODCACHE="c:\modcache"
      -e AWS_NETWORKING=true
      -e SIGN_WINDOWS=true
      -e TARGET_ARCH="$ARCH"
      -e DEBUG_CUSTOMACTION="$DEBUG_CUSTOMACTION"
      -e BUCKET_BRANCH="$BUCKET_BRANCH"
      -e S3_OMNIBUS_CACHE_BUCKET="$S3_OMNIBUS_CACHE_BUCKET"
      -e USE_S3_CACHING="$USE_S3_CACHING"
      -e INTEGRATION_WHEELS_CACHE_BUCKET="$INTEGRATION_WHEELS_CACHE_BUCKET"
      -e VCPKG_BINARY_SOURCES="clear;x-azblob,${vcpkgBlobSaSUrl}"
      -e GO_VERSION_CHECK="true"
      -e BUNDLE_MIRROR__RUBYGEMS__ORG=${BUNDLE_MIRROR__RUBYGEMS__ORG}
      -e PIP_INDEX_URL=${PIP_INDEX_URL}
      486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}${Env:DATADOG_AGENT_WINBUILDIMAGES_SUFFIX}:${Env:DATADOG_AGENT_WINBUILDIMAGES}
      c:\mnt\tasks\winbuildscripts\buildwin.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
    - get-childitem omnibus\pkg
    - !reference [.upload_sbom_artifacts_windows]
  after_script:
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
  artifacts:
    expire_in: 2 weeks
    paths:
      - omnibus/pkg

.windows_main_agent_base:
  extends: .windows_msi_base
  variables:
    OMNIBUS_TARGET: main

windows_msi_and_bosh_zip_x64-a7:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a7]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: '3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_7

windows_msi_x64-a6:
  extends: .windows_main_agent_base
  rules:
    !reference [.on_a6]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 6
    PYTHON_RUNTIMES: '2,3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_6

# cloudfoundry IoT build for Windows
windows_zip_agent_binaries_x64-a7:
  rules:
    !reference [.on_a7]
  stage: package_build
  tags: ["runner:windows-docker", "windowsversion:1809"]
  needs: ["go_mod_tidy_check", "go_deps", "build_vcpkg_deps"]
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 7
    OMNIBUS_TARGET: agent_binaries
  before_script:
    - $vcpkgBlobSaSUrl = (aws ssm get-parameter --region us-east-1 --name ci.datadog-agent-buildimages.vcpkg_blob_sas_url --with-decryption --query "Parameter.Value" --out text)
    - set RELEASE_VERSION $RELEASE_VERSION_7
  script:
    - $ErrorActionPreference = "Stop"
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - if (Test-Path omnibus\pkg) { remove-item -recurse -force omnibus\pkg }
    - mkdir omnibus\pkg
    - !reference [.setup_ruby_mirror_win]
    - !reference [.setup_python_mirror_win]
    - >
      docker run --rm
      -m 4096M
      -v "$(Get-Location):c:\mnt"
      -e CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH}
      -e OMNIBUS_TARGET=${OMNIBUS_TARGET}
      -e WINDOWS_BUILDER=true
      -e RELEASE_VERSION="$RELEASE_VERSION"
      -e MAJOR_VERSION="$AGENT_MAJOR_VERSION"
      -e INTEGRATIONS_CORE_VERSION="$INTEGRATIONS_CORE_VERSION"
      -e PY_RUNTIMES="$PYTHON_RUNTIMES"
      -e GOMODCACHE="c:\modcache"
      -e AWS_NETWORKING=true
      -e SIGN_WINDOWS=true
      -e BUCKET_BRANCH="$BUCKET_BRANCH"
      -e INTEGRATION_WHEELS_CACHE_BUCKET="$INTEGRATION_WHEELS_CACHE_BUCKET"
      -e S3_OMNIBUS_CACHE_BUCKET="$S3_OMNIBUS_CACHE_BUCKET"
      -e USE_S3_CACHING="$USE_S3_CACHING"
      -e VCPKG_BINARY_SOURCES="clear;x-azblob,${vcpkgBlobSaSUrl}"
      -e BUNDLE_MIRROR__RUBYGEMS__ORG=${BUNDLE_MIRROR__RUBYGEMS__ORG}
      -e PIP_INDEX_URL=${PIP_INDEX_URL}
      486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}${Env:DATADOG_AGENT_WINBUILDIMAGES_SUFFIX}:${Env:DATADOG_AGENT_WINBUILDIMAGES}
      c:\mnt\tasks\winbuildscripts\buildwin.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
    - get-childitem omnibus\pkg
    - !reference [.upload_sbom_artifacts_windows]
  artifacts:
    expire_in: 2 weeks
    paths:
      - omnibus/pkg
