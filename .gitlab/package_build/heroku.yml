---
.heroku_build_base:
  stage: package_build
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$CI_IMAGE_LINUX_GLIBC_2_17_X64_SUFFIX:$CI_IMAGE_LINUX_GLIBC_2_17_X64
  tags: ["arch:amd64"]
  needs:
    [
      "go_mod_tidy_check",
      "go_deps",
    ]
  script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.cache_omnibus_ruby_deps, setup]
    # remove artifacts from previous pipelines that may come from the cache
    - rm -rf $OMNIBUS_PACKAGE_DIR/*
    - !reference [.setup_deb_signing_key]
    - dda inv -- -e omnibus.build --base-dir $OMNIBUS_BASE_DIR --skip-deps --go-mod-cache="$GOPATH/pkg/mod" --flavor heroku
    - ls -la $OMNIBUS_PACKAGE_DIR
    - !reference [.create_signature_and_lint_linux_packages]
    - !reference [.upload_sbom_artifacts]
  variables:
    KUBERNETES_MEMORY_REQUEST: "32Gi"
    KUBERNETES_MEMORY_LIMIT: "32Gi"
    KUBERNETES_CPU_REQUEST: 16
    DD_PKG_ARCH: "x86_64"
    PACKAGE_ARCH: "amd64"
    DD_CC: 'x86_64-unknown-linux-gnu-gcc'
    DD_CXX: 'x86_64-unknown-linux-gnu-g++'
    DD_CMAKE_TOOLCHAIN: '/opt/cmake/x86_64-unknown-linux-gnu.toolchain.cmake'
  artifacts:
    expire_in: 2 weeks
    paths:
      - $OMNIBUS_PACKAGE_DIR
  cache:
    - !reference [.cache_omnibus_ruby_deps, cache]

agent_heroku_deb-x64-a7:
  extends: .heroku_build_base
  variables:
    DESTINATION_DBG_DEB: "datadog-heroku-agent-dbg_7_amd64.deb"
