---
.heroku_build_base:
  stage: package_build
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  needs:
    [
      "go_mod_tidy_check",
      "build_system-probe-x64",
      "go_deps",
      "generate_minimized_btfs_x64",
    ]
  script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.cache_omnibus_ruby_deps, setup]
    - echo "About to build for $RELEASE_VERSION"
    # remove artifacts from previous pipelines that may come from the cache
    - rm -rf $OMNIBUS_PACKAGE_DIR/*
    # Artifacts and cache must live within project directory but we run omnibus in a neutral directory.
    # Thus, we move the artifacts at the end in a gitlab-friendly dir.
    - !reference [.setup_deb_signing_key]
    - tar -xf $CI_PROJECT_DIR/sysprobe-build-outputs.tar.xz
    - mkdir -p /tmp/system-probe
    - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/clang-$CLANG_LLVM_VER.${PACKAGE_ARCH} /tmp/system-probe/clang-bpf
    - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/llc-$CLANG_LLVM_VER.${PACKAGE_ARCH} /tmp/system-probe/llc-bpf
    - cp $CI_PROJECT_DIR/minimized-btfs.tar.xz /tmp/system-probe/minimized-btfs.tar.xz
    - chmod 0744 /tmp/system-probe/clang-bpf /tmp/system-probe/llc-bpf
    - inv -e omnibus.build --release-version "$RELEASE_VERSION" --major-version "$AGENT_MAJOR_VERSION" --base-dir $OMNIBUS_BASE_DIR ${USE_S3_CACHING} --skip-deps --go-mod-cache="$GOPATH/pkg/mod" --system-probe-bin=/tmp/system-probe --flavor heroku
    - ls -la $OMNIBUS_PACKAGE_DIR
    - !reference [.lint_linux_packages]
    - $S3_CP_CMD $OMNIBUS_PACKAGE_DIR/datadog-heroku-agent_*_${PACKAGE_ARCH}.deb $S3_ARTIFACTS_URI/$DESTINATION_DEB
    - $S3_CP_CMD $OMNIBUS_PACKAGE_DIR/datadog-heroku-agent-dbg_*_${PACKAGE_ARCH}.deb $S3_ARTIFACTS_URI/$DESTINATION_DBG_DEB
    - !reference [.upload_sbom_artifacts]
  variables:
    KUBERNETES_MEMORY_REQUEST: "32Gi"
    KUBERNETES_MEMORY_LIMIT: "32Gi"
    KUBERNETES_CPU_REQUEST: 16
    DD_PKG_ARCH: "x86_64"
    PACKAGE_ARCH: "amd64"
    DD_CC: 'x86_64-unknown-linux-gnu-gcc'
    DD_CXX: 'x86_64-unknown-linux-gnu-g++'
    DD_CMAKE_TOOLCHAIN: '/opt/cmake/x86_64-unknown-linux-gnu.toolchain.cmake'
  artifacts:
    expire_in: 2 weeks
    paths:
      - $OMNIBUS_PACKAGE_DIR
  cache:
    - !reference [.cache_omnibus_ruby_deps, cache]

agent_heroku_deb-x64-a7:
  extends: .heroku_build_base
  variables:
    DESTINATION_DEB: "datadog-heroku-agent_7_amd64.deb"
    DESTINATION_DBG_DEB: "datadog-heroku-agent-dbg_7_amd64.deb"
    RELEASE_VERSION: $RELEASE_VERSION_7
    AGENT_MAJOR_VERSION: 7
