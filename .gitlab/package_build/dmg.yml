---
.macos_setup_python:
  # Selecting the current Python version
  - !reference [.select_python_env_commands]
  - !reference [.install_python_dependencies]

.macos_setup_go:
  - echo Setting up Go
  - mkdir -p ~/go
  - export GO_VERSION="$(cat .go-version)"
  - eval "$(gimme $GO_VERSION)"
  - export PATH="$PATH:$GOROOT/bin"
  - echo Go version should be $GO_VERSION
  - go version
  - dda inv check-go-version

.macos_setup_cache:
  # Clean up previous builds
  - sudo bash -c "rm -rf /var/cache/omnibus/src/*" || true
  # Set bundler install path to cached folder
  - !reference [.cache_omnibus_ruby_deps, setup]
  - |
    export GOMODCACHE=~/gomodcache
    mkdir -p $GOMODCACHE

agent_dmg-x64-a7:
  stage: package_build
  tags: ["macos:ventura-amd64", "specific:true"]
  needs: ["go_mod_tidy_check"]
  rules:
     - !reference [.on_macos_gui_change]
     - !reference [.on_packaging_change]
     - !reference [.on_main_or_release_branch]
     - !reference [.on_all_builds]
     - !reference [.manual]
  artifacts:
    expire_in: 2 weeks
    paths:
      - omnibus/pkg/*.dmg
      - omnibus/pkg/version-manifest.json
  variables:
    SIGN: true
    KEYCHAIN_NAME: "build.keychain"
    INTEGRATION_WHEELS_CACHE_BUCKET: dd-agent-omnibus
    INTEGRATION_WHEELS_SKIP_CACHE_UPLOAD: true
    S3_OMNIBUS_CACHE_BUCKET: dd-ci-datadog-agent-omnibus-cache-build-stable
    NOTARIZATION_TIMEOUT: 15m
    NOTARIZATION_ATTEMPTS: 3
    NOTARIZATION_WAIT_TIME: 15s
  timeout: 2h
  cache:
    - !reference [.cache_omnibus_ruby_deps, cache]
  before_script:
    # Since there is no virtualization on the macOS runners, we need to unmount the Agent dmg volume to avoid conflicts
    - sudo umount /Volumes/Agent || true
  after_script:
    # Destroy the keychain used to sign packages
    - |
      if [ "$SIGN" = true ]; then
        security delete-keychain "build.keychain" || true
      fi
    - sudo umount /Volumes/Agent || true
  script:
    - set -eo pipefail
    - !reference [.vault_login]
    - !reference [.macos_setup_python]
    - !reference [.macos_setup_go]
    # List Python and Go existing environments and their disk space
    - !reference [.macos_runner_maintenance]
    - !reference [.macos_setup_cache]
    - bash .gitlab/package_build/build_agent_dmg.sh
    - !reference [.upload_sbom_artifacts]
