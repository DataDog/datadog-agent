---
# internal_image_deploy stage
# Contains jobs to trigger a pipeline in the images repo to create internal Agent images.

docker_trigger_internal:
  stage: internal_image_deploy
  rules:
    !reference [.on_deploy_a7_internal_or_manual]
  needs:
    - job: docker_build_agent7_jmx
      artifacts: false
    - job: docker_build_agent7_jmx_arm64
      artifacts: false
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    DYNAMIC_BUILD_RENDER_RULES: agent-build-only # fake rule to not trigger the ones in the images repo
    IMAGE_VERSION: tmpl-v8
    IMAGE_NAME: datadog-agent
    RELEASE_TAG: ${CI_COMMIT_REF_SLUG}-jmx
    BUILD_TAG: ${CI_COMMIT_REF_SLUG}-jmx
    TMPL_SRC_IMAGE: v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-jmx
    TMPL_SRC_REPO: ci/datadog-agent/agent
    RELEASE_STAGING: "true"
  script:
    - source /root/.bashrc
    - export GITLAB_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.gitlab_pipelines_scheduler_token --with-decryption --query "Parameter.Value" --out text)
    - if [ "$BUCKET_BRANCH" = "beta" ] || [ "$BUCKET_BRANCH" = "stable" ]; then TMPL_SRC_REPO="${TMPL_SRC_REPO}-release"; fi
    - if [ "$BUCKET_BRANCH" = "nightly" ]; then RELEASE_TAG="${RELEASE_TAG}-${CI_COMMIT_SHORT_SHA}"; fi
    - if [ "$BUCKET_BRANCH" = "dev" ]; then RELEASE_TAG="dev-${RELEASE_TAG}-${CI_COMMIT_SHORT_SHA}"; fi
    - >
        inv pipeline.trigger-child-pipeline --project-name "DataDog/images" --git-ref "master"
        --variables "IMAGE_VERSION,IMAGE_NAME,RELEASE_TAG,BUILD_TAG,TMPL_SRC_IMAGE,TMPL_SRC_REPO,RELEASE_STAGING,RELEASE_PROD,DYNAMIC_BUILD_RENDER_RULES,APPS,BAZEL_TARGET,DDR,DDR_WORKFLOW_ID,TARGET_ENV,DYNAMIC_BUILD_RENDER_TARGET,DYNAMIC_BUILD_RENDER_TARGET_FORWARD_PARAMETERS"


docker_trigger_cluster_agent_internal:
  stage: internal_image_deploy
  rules:
    !reference [.on_deploy_a7]
  needs:
    - job: docker_build_cluster_agent_amd64
      artifacts: false
    - job: docker_build_cluster_agent_arm64
      artifacts: false
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    DYNAMIC_BUILD_RENDER_RULES: agent-build-only # fake rule to not trigger the ones in the images repo
    IMAGE_VERSION: tmpl-v3
    IMAGE_NAME: datadog-cluster-agent
    RELEASE_TAG: ${CI_COMMIT_REF_SLUG}
    BUILD_TAG: ${CI_COMMIT_REF_SLUG}
    TMPL_SRC_IMAGE: v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    TMPL_SRC_REPO: ci/datadog-agent/cluster-agent
    RELEASE_STAGING: "true"
    RELEASE_PROD: "true"
  script:
    - source /root/.bashrc
    - export GITLAB_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.gitlab_pipelines_scheduler_token --with-decryption --query "Parameter.Value" --out text)
    - if [ "$BUCKET_BRANCH" = "beta" ] || [ "$BUCKET_BRANCH" = "stable" ]; then TMPL_SRC_REPO="${TMPL_SRC_REPO}-release"; fi
    - if [ "$BUCKET_BRANCH" = "nightly" ]; then RELEASE_TAG="${RELEASE_TAG}-${CI_COMMIT_SHORT_SHA}"; fi
    - if [ "$BUCKET_BRANCH" = "dev" ]; then RELEASE_TAG="dev-${RELEASE_TAG}-${CI_COMMIT_SHORT_SHA}"; fi
    - >
      inv pipeline.trigger-child-pipeline --project-name "DataDog/images" --git-ref "master"
      --variables "IMAGE_VERSION,IMAGE_NAME,RELEASE_TAG,BUILD_TAG,TMPL_SRC_IMAGE,TMPL_SRC_REPO,RELEASE_STAGING,RELEASE_PROD,DYNAMIC_BUILD_RENDER_RULES,APPS,BAZEL_TARGET,DDR,DDR_WORKFLOW_ID,TARGET_ENV,DYNAMIC_BUILD_RENDER_TARGET,DYNAMIC_BUILD_RENDER_TARGET_FORWARD_PARAMETERS"

docker_trigger_cws_instrumentation_internal:
  stage: internal_image_deploy
  rules:
    !reference [.on_deploy_a7]
  needs:
    - job: docker_build_cws_instrumentation_amd64
      artifacts: false
    - job: docker_build_cws_instrumentation_arm64
      artifacts: false
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    DYNAMIC_BUILD_RENDER_RULES: agent-build-only # fake rule to not trigger the ones in the images repo
    IMAGE_VERSION: tmpl-v1
    IMAGE_NAME: datadog-cws-instrumentation
    RELEASE_TAG: ${CI_COMMIT_REF_SLUG}
    BUILD_TAG: ${CI_COMMIT_REF_SLUG}
    TMPL_SRC_IMAGE: v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    TMPL_SRC_REPO: ci/datadog-agent/cws-instrumentation
    RELEASE_STAGING: "true"
    RELEASE_PROD: "true"
  script:
    - source /root/.bashrc
    - export GITLAB_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.gitlab_pipelines_scheduler_token --with-decryption --query "Parameter.Value" --out text)
    - if [ "$BUCKET_BRANCH" = "beta" ] || [ "$BUCKET_BRANCH" = "stable" ]; then TMPL_SRC_REPO="${TMPL_SRC_REPO}-release"; fi
    - if [ "$BUCKET_BRANCH" = "nightly" ]; then RELEASE_TAG="${RELEASE_TAG}-${CI_COMMIT_SHORT_SHA}"; fi
    - >
      inv pipeline.trigger-child-pipeline --project-name "DataDog/images" --git-ref "master"
      --variables "IMAGE_VERSION,IMAGE_NAME,RELEASE_TAG,BUILD_TAG,TMPL_SRC_IMAGE,TMPL_SRC_REPO,RELEASE_STAGING,RELEASE_PROD,DYNAMIC_BUILD_RENDER_RULES,APPS,BAZEL_TARGET,DDR,DDR_WORKFLOW_ID,TARGET_ENV,DYNAMIC_BUILD_RENDER_TARGET,DYNAMIC_BUILD_RENDER_TARGET_FORWARD_PARAMETERS"
