---
.system-probe_build_common:
  before_script:
    - !reference [.retrieve_linux_go_deps]
    # HACK: empty the build directory cache (that can come from previous runs)
    #       to not have remainders of previous runs, which can make our deps bootstrapping logic fail.
    # TODO: remove this once we switch to k8s runners, they won't have this problem
    - find "$CI_BUILDS_DIR" ! -path '*DataDog/datadog-agent*' -depth  # -delete implies -depth
    - find "$CI_BUILDS_DIR" ! -path '*DataDog/datadog-agent*' -delete || true  # Allow failure, we can't remove parent folders of datadog-agent
  script:
    - inv check-go-version
    - inv -e system-probe.build --strip-object-files
    # fail if references to glibc >= 2.18
    - objdump -p $CI_PROJECT_DIR/$SYSTEM_PROBE_BINARIES_DIR/system-probe | egrep 'GLIBC_2\.(1[8-9]|[2-9][0-9])' && exit 1
    - inv -e system-probe.save-build-outputs $CI_PROJECT_DIR/sysprobe-build-outputs.tar.xz
  variables:
    KUBERNETES_MEMORY_REQUEST: "6Gi"
    KUBERNETES_MEMORY_LIMIT: "12Gi"
  artifacts:
    expire_in: 2 weeks
    paths:
      - $CI_PROJECT_DIR/$SYSTEM_PROBE_BINARIES_DIR/system-probe
      - $CI_PROJECT_DIR/sysprobe-build-outputs.tar.xz

build_system-probe-x64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["arch:amd64"]
  needs: ["go_deps"]
  extends: .system-probe_build_common
  variables:
    ARCH: amd64

build_system-probe-arm64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64$DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  needs: ["go_deps"]
  tags: ["arch:arm64"]
  extends: .system-probe_build_common
  variables:
    ARCH: arm64
