---
.if_version_7: &if_version_7
  if: $RELEASE_VERSION_7 != ""

.retrieve_linux_go_deps: &retrieve_linux_go_deps |
  mkdir vendor && tar xzf vendor.tar.gz -C vendor
  rm -f vendor.tar.gz

build_dogstatsd_static-deb_x64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main", "size:large"]
  needs: ["tests_deb-x64-py3", "linux_x64_go_deps"]
  before_script:
    - *retrieve_linux_go_deps
    - source /root/.bashrc && conda activate ddpy3
  script:
    - inv -e dogstatsd.build --static --major-version 7
    - $S3_CP_CMD $SRC_PATH/$STATIC_BINARIES_DIR/dogstatsd $S3_ARTIFACTS_URI/static/dogstatsd

build_dogstatsd-deb_x64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main", "size:large"]
  needs: ["tests_deb-x64-py3", "linux_x64_go_deps"]
  before_script:
    - *retrieve_linux_go_deps
    - source /root/.bashrc && conda activate ddpy3
  script:
    - inv -e dogstatsd.build --major-version 7
    - $S3_CP_CMD $SRC_PATH/$DOGSTATSD_BINARIES_DIR/dogstatsd $S3_ARTIFACTS_URI/dogstatsd/dogstatsd

build_dogstatsd_static-deb_arm64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64:$DATADOG_AGENT_ARMBUILDIMAGES
  tags: ["runner:docker-arm", "platform:arm64"]
  needs: ["tests_deb-x64-py3", "linux_arm64_go_deps"]
  variables:
    ARCH: arm64
  before_script:
    - *retrieve_linux_go_deps
    - source /root/.bashrc && conda activate ddpy3
    # Hack to work around the cloning issue with arm runners
    - mkdir -p $GOPATH/src/github.com/DataDog
    - cp -R $GOPATH/src/github.com/*/*/DataDog/datadog-agent $GOPATH/src/github.com/DataDog
    - cd $SRC_PATH
  script:
    - inv -e dogstatsd.build --static --major-version 7
    - $S3_CP_CMD $SRC_PATH/$STATIC_BINARIES_DIR/dogstatsd $S3_ARTIFACTS_URI/static/dogstatsd.$ARCH

build_dogstatsd-deb_arm64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64:$DATADOG_AGENT_ARMBUILDIMAGES
  tags: ["runner:docker-arm", "platform:arm64"]
  needs: ["tests_deb-x64-py3", "linux_arm64_go_deps"]
  variables:
    ARCH: arm64
  before_script:
    - *retrieve_linux_go_deps
    - source /root/.bashrc && conda activate ddpy3
    # Hack to work around the cloning issue with arm runners
    - mkdir -p $GOPATH/src/github.com/DataDog
    - cp -R $GOPATH/src/github.com/*/*/DataDog/datadog-agent $GOPATH/src/github.com/DataDog
    - cd $SRC_PATH
  script:
    - inv -e dogstatsd.build --major-version 7
    - $S3_CP_CMD $SRC_PATH/$DOGSTATSD_BINARIES_DIR/dogstatsd $S3_ARTIFACTS_URI/dogstatsd/dogstatsd.$ARCH

# IoT Agent builds to make sure the build is not broken because of build flags
build_iot_agent-deb_x64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main", "size:large"]
  needs: ["tests_deb-x64-py3", "linux_x64_go_deps"]
  before_script:
    - *retrieve_linux_go_deps
  script:
    - inv -e agent.build --iot --major-version 7
    - $S3_CP_CMD $SRC_PATH/$AGENT_BINARIES_DIR/agent $S3_ARTIFACTS_URI/iot/agent

build_iot_agent-deb_arm64:
  stage: binary_build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:docker-arm", "platform:arm64"]
  needs: ["tests_deb-x64-py3", "linux_arm64_go_deps"]
  variables:
    ARCH: arm64
  before_script:
    - *retrieve_linux_go_deps
    # Hack to work around the cloning issue with arm runners
    - mkdir -p $GOPATH/src/github.com/DataDog
    - cp -R $GOPATH/src/github.com/*/*/DataDog/datadog-agent $GOPATH/src/github.com/DataDog
    - cd $SRC_PATH
  script:
    - inv -e agent.build --iot --major-version 7
