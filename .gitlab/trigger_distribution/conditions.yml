.if_deploy_installer: &if_deploy_installer
  if: $DEPLOY_INSTALLER == "true" || $DDR_WORKFLOW_ID != null

.if_not_stable_or_beta_repo_branch: &if_not_stable_or_beta_repo_branch
  if: $BUCKET_BRANCH != "beta" && $BUCKET_BRANCH != "stable"

# Rule to trigger jobs only when a tag matches a given pattern (for RCs)
# on the beta branch.
# Note: due to workflow rules, rc tag => deploy pipeline, so there's technically no
# need to check again if the pipeline is a deploy pipeline, but it doesn't hurt
# to explicitly add it.
.if_rc_tag_on_beta_repo_branch: &if_rc_tag_on_beta_repo_branch
  if: $BUCKET_BRANCH == "beta" && $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$/

.if_beta_repo_branch: &if_beta_repo_branch
  if: $BUCKET_BRANCH == "beta"

.if_not_stable_repo_branch: &if_not_stable_repo_branch
  if: $BUCKET_BRANCH != "stable"

.if_not_deploy_installer: &if_not_deploy_installer
  if: $DEPLOY_INSTALLER != "true" && $DDR_WORKFLOW_ID == null

# This rule is a variation of on_deploy_manual where
# the job is usually run manually, except when the pipeline
# builds an RC: in this case, the job is run automatically.
# This is done to reduce the number of manual steps that have
# to be done when creating RCs.
.on_deploy_manual_auto_on_rc:
  - <<: *if_not_stable_or_beta_repo_branch
    when: manual
    allow_failure: true
    variables:
      AGENT_REPOSITORY: agent-dev
      OTEL_AGENT_REPOSITORY: ddot-collector-dev
      DSD_REPOSITORY: dogstatsd-dev
      IMG_REGISTRIES: dev
  - <<: *if_rc_tag_on_beta_repo_branch
    when: on_success
    variables:
      AGENT_REPOSITORY: agent
      OTEL_AGENT_REPOSITORY: ddot-collector
      DSD_REPOSITORY: dogstatsd
      IMG_REGISTRIES: public
  - when: manual
    allow_failure: true
    variables:
      AGENT_REPOSITORY: agent
      OTEL_AGENT_REPOSITORY: ddot-collector
      DSD_REPOSITORY: dogstatsd
      IMG_REGISTRIES: public

.on_deploy_rc:
  - <<: *if_rc_tag_on_beta_repo_branch
    when: on_success
    variables:
      AGENT_REPOSITORY: agent
      OTEL_AGENT_REPOSITORY: ddot-collector
      DSD_REPOSITORY: dogstatsd
      IMG_REGISTRIES: public

# Same as on_deploy_manual, except the job would not run on pipelines
# using beta branch, it would only run for the final release.
.on_deploy_manual_final:
  - <<: *if_beta_repo_branch
    when: never
  - <<: *if_not_stable_or_beta_repo_branch
    when: manual
    allow_failure: true
    variables:
      AGENT_REPOSITORY: agent-dev
      OTEL_AGENT_REPOSITORY: ddot-collector-dev
      DSD_REPOSITORY: dogstatsd-dev
      IMG_REGISTRIES: dev
  - when: manual
    allow_failure: true
    variables:
      AGENT_REPOSITORY: agent
      OTEL_AGENT_REPOSITORY: ddot-collector
      DSD_REPOSITORY: dogstatsd
      IMG_REGISTRIES: public

# This is used for image vulnerability scanning. Because agent 6
# uses python 2, which has many vulnerabilities that will not get
# patched, we do not wish to scan this image. For this reason, only
# agent 7 versions should be published internally using these
# configurations.
.on_deploy_internal_rc:
  - <<: *if_rc_tag_on_beta_repo_branch
    when: on_success
    variables:
      AGENT_REPOSITORY: ci/datadog-agent/agent-release
      CLUSTER_AGENT_REPOSITORY: ci/datadog-agent/cluster-agent-release
      OTEL_AGENT_REPOSITORY: ci/datadog-agent/otel-agent-release
      DSD_REPOSITORY: ci/datadog-agent/dogstatsd-release
      CWS_INSTRUMENTATION_REPOSITORY: ci/datadog-agent/cws-instrumentation-release
      IMG_REGISTRIES: internal-aws-ddbuild

# Same as on_deploy_manual_final, except the job is used to publish images
# to our internal registries.
.on_deploy_internal_manual_final:
  - <<: *if_beta_repo_branch
    when: never
  - <<: *if_not_stable_or_beta_repo_branch
    when: never
  - when: manual
    allow_failure: true
    variables:
      AGENT_REPOSITORY: ci/datadog-agent/agent-release
      OTEL_AGENT_REPOSITORY: ci/datadog-agent/otel-agent-release
      CLUSTER_AGENT_REPOSITORY: ci/datadog-agent/cluster-agent-release
      DSD_REPOSITORY: ci/datadog-agent/dogstatsd-release
      CWS_INSTRUMENTATION_REPOSITORY: ci/datadog-agent/cws-instrumentation-release
      IMG_REGISTRIES: internal-aws-ddbuild

.on_deploy_stable_or_beta_repo_branch_manual:
  - <<: *if_not_stable_or_beta_repo_branch
    when: never
  - when: manual
    allow_failure: true

# This rule will add the job as manual when running on beta deploy branch
# and will add it as a regular automatically running job when running
# on stable deploy branch.
.on_deploy_stable_or_beta_manual_auto_on_stable:
  - <<: *if_not_stable_or_beta_repo_branch
    when: never
  - <<: *if_not_stable_repo_branch
    when: manual
    allow_failure: true
  - when: always

.on_deploy_installer:
  - <<: *if_deploy_installer
    when: always

# This rule will add the job as manual when running on beta deploy branch
# and will add it as a regular automatically running job when running
# on stable deploy branch.
.on_deploy_installer_stable_or_beta_manual_auto_on_stable:
  - <<: *if_not_stable_or_beta_repo_branch
    when: never
  - <<: *if_not_deploy_installer
    when: never
  - <<: *if_not_stable_repo_branch
    when: manual
    allow_failure: true
  - when: always

# windows_docker_2019 configures the job to use the Windows Server 2019 runners.
# Use in jobs that need to run on Windows Server 2019 runners.
.windows_docker_2019:
  tags: ["windows-v2:2019"]

# windows_docker_2022 configures the job to use the Windows Server 2022 runners.
# Use in jobs that need to run on Windows Server 2022 runners.
.windows_docker_2022:
  tags: ["runner:windows-docker", "windowsversion:2022"]
  variables:
    # Full image name for Agent windows build image, for use in docker run command
    WINBUILDIMAGE: registry.ddbuild.io/ci/datadog-agent-buildimages/windows_ltsc2022_${ARCH}${CI_IMAGE_WIN_LTSC2022_X64_SUFFIX}:${CI_IMAGE_WIN_LTSC2022_X64}

# The windows-v2 runner is currently only used in container_build jobs needed to do authenticated push. It should not replace the basic windows runner, unless agreeded first with #ci-infra team
.windows_docker_v2_2022:
  tags: ["windows-v2:2022"]
  variables:
    # Full image name for Agent windows build image, for use in docker run command
    WINBUILDIMAGE: registry.ddbuild.io/ci/datadog-agent-buildimages/windows_ltsc2022_${ARCH}${CI_IMAGE_WIN_LTSC2022_X64_SUFFIX}:${CI_IMAGE_WIN_LTSC2022_X64}

# windows_docker_default configures the job to use the default Windows Server runners
# Use in jobs that may need to have their version updated in the future.
#
# Current default: Windows Server 2022
.windows_docker_default:
  extends: .windows_docker_v2_2022
