regression_detector_submit_job:
  stage: functional_test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/docker_x64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:docker"]
  needs:
    - job: docker_build_agent7_single_machine_performance
      artifacts: false
  artifacts:
    expire_in: 1 weeks
    paths:
      - submission_metadata
  variables:
    GIT_STRATEGY: clone # pull the whole repo so we can compute baseline SHA
    SMP_VERSION: 0.6.3-rc3
    LADING_VERSION: 0.10.2
    TOTAL_SAMPLES: 600
    WARMUP_SECONDS: 45
    REPLICAS: 10
    CPUS: 7
    MEMORY: "30g"
  script:
    # Setup AWS credentials for single-machine-performance AWS account
    - SMP_ACCOUNT_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.single-machine-performance-account-id --with-decryption --query "Parameter.Value" --out text)
    - SMP_ECR_URL=${SMP_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com
    - SMP_AGENT_TEAM_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.single-machine-performance-agent-team-id --with-decryption --query "Parameter.Value" --out text)
    - aws configure set aws_access_key_id $(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.single-machine-performance-bot-access-key-id --with-decryption --query "Parameter.Value" --out text) --profile single-machine-performance
    - aws configure set aws_secret_access_key $(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.single-machine-performance-bot-access-key --with-decryption --query "Parameter.Value" --out text) --profile single-machine-performance
    - aws configure set region us-west-2 --profile single-machine-performance
    # Download smp binary and prepare it for use
    - aws --profile single-machine-performance s3 cp s3://smp-cli-releases/v${SMP_VERSION}/x86_64-unknown-linux-musl/smp smp
    - chmod +x smp
    # Submit job, using the current main SHA as baseline. This will have been
    # previously submitted in a separate pipeline run. The comparison will have
    # been submitted in this pipeline run.
    - git fetch origin main:main
    - BASELINE_SHA=$(git rev-parse main)
    - BASELINE_IMAGE=${SMP_ECR_URL}/${SMP_AGENT_TEAM_ID}-agent:${BASELINE_SHA}-7-amd64
    - COMPARISON_IMAGE=${SMP_ECR_URL}/${SMP_AGENT_TEAM_ID}-agent:${CI_COMMIT_SHA}-7-amd64
    - ./smp --team-id ${SMP_AGENT_TEAM_ID} --aws-named-profile single-machine-performance
            job submit
            --lading-version ${LADING_VERSION}
            --total-samples ${TOTAL_SAMPLES}
            --warmup-seconds ${WARMUP_SECONDS}
            --replicas ${REPLICAS}
            --baseline-image ${BASELINE_IMAGE}
            --comparison-image ${COMPARISON_IMAGE}
            --baseline-sha ${BASELINE_SHA}
            --comparison-sha ${CI_COMMIT_SHA}
            --target-command "/usr/local/bin/agent run --cfgpath /etc/agent"
            --target-config-dir test/regression/
            --target-cpu-allotment ${CPUS}
            --target-memory-allotment ${MEMORY}
            --target-name agent
            --submission-metadata submission_metadata
    # Wait for job to complete.
    - ./smp --team-id ${SMP_AGENT_TEAM_ID} --aws-named-profile single-machine-performance
            job status
            --wait
            --wait-delay-seconds 60
            --submission-metadata submission_metadata
    # Now that the job is completed pull the analysis report, output it to stdout.
    - mkdir outputs
    - ./smp --team-id ${SMP_AGENT_TEAM_ID} --aws-named-profile single-machine-performance
            job sync
            --submission-metadata submission_metadata
            --output-path outputs
    - cat outputs/report.html
    # Finally, exit 1 if the job signals a regression else 0.
    - ./smp --team-id ${SMP_AGENT_TEAM_ID} --aws-named-profile single-machine-performance
            job result
            --submission-metadata submission_metadata
