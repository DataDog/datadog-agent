---
# internal_kubernetes_deploy stage
# Contains jobs to trigger a pipeline in our k8s-datadog-agent-ops repo

internal_kubernetes_deploy_experimental:
  stage: internal_kubernetes_deploy
  rules:
    - !reference [.on_scheduled_main]
  needs:
    - job: docker_trigger_internal
      artifacts: false
    - job: docker_trigger_internal-full
      artifacts: false
    - job: docker_trigger_cluster_agent_internal
      artifacts: false
    - job: docker_build_agent7_windows1809
      artifacts: false
    - job: docker_build_agent7_windows2022
      artifacts: false
    - job: docker_build_agent7_windows1809_jmx
      artifacts: false
    - job: docker_build_agent7_windows2022_jmx
      artifacts: false
    - job: docker_build_agent7_windows1809_core
      artifacts: false
    - job: docker_build_agent7_windows2022_core
      artifacts: false
    - job: docker_build_agent7_windows1809_core_jmx
      artifacts: false
    - job: docker_build_agent7_windows2022_core_jmx
      artifacts: false
    - job: k8s-e2e-main # Currently only require container Argo workflow
      artifacts: false
      optional: true
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    OPTION_AUTOMATIC_ROLLOUT: "true"
    OPTION_PRE_SCRIPT: "patch-cluster-images-operator.sh env=ci ${CI_COMMIT_REF_SLUG}-full-${CI_COMMIT_SHORT_SHA} ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    SKIP_PLAN_CHECK: "true"
    EXPLICIT_WORKFLOWS: "//workflows:beta_builds.agents_nightly.staging-deploy.publish,//workflows:beta_builds.agents_nightly.staging-validate.publish,//workflows:beta_builds.agents_nightly.prod-wait-business-hours.publish,//workflows:beta_builds.agents_nightly.prod-deploy.publish,//workflows:beta_builds.agents_nightly.prod-validate.publish,//workflows:beta_builds.agents_nightly.publish-image-confirmation.publish"
    BUNDLE_VERSION_OVERRIDE: "v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"
  script:
    - GITLAB_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $GITLAB_TOKEN write_api) || exit $?; export GITLAB_TOKEN
    - "dda inv pipeline.trigger-child-pipeline --project-name DataDog/k8s-datadog-agent-ops --git-ref main
        --variable OPTION_AUTOMATIC_ROLLOUT
        --variable EXPLICIT_WORKFLOWS
        --variable OPTION_PRE_SCRIPT
        --variable SKIP_PLAN_CHECK
        --variable APPS
        --variable BAZEL_TARGET
        --variable DDR
        --variable DDR_WORKFLOW_ID
        --variable TARGET_ENV
        --variable DYNAMIC_BUILD_RENDER_TARGET_FORWARD_PARAMETERS
        --variable BUNDLE_VERSION_OVERRIDE"

notify-slack:
  stage: internal_kubernetes_deploy
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules:
    - !reference [.on_scheduled_main]
  tags: ["arch:arm64"]
  needs: ["internal_kubernetes_deploy_experimental"]
  allow_failure: true
  script:
    - export SDM_JWT=$(vault read -field=token identity/oidc/token/sdm)
    - python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)"
    - dda self dep sync -f legacy-tasks -f legacy-notifications
    - SLACK_DATADOG_AGENT_BOT_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $SLACK_AGENT token) || exit $?; export SLACK_DATADOG_AGENT_BOT_TOKEN
    - dda inv pipeline.changelog ${CI_COMMIT_SHORT_SHA} || exit $?
