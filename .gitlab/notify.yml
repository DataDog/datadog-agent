---
# notify stage
# Contains jobs which send slack notifications depending on pipeline status.

include:
  - https://gitlab-templates.ddbuild.io/slack-notifier/v1/template.yml

notify-on-tagged-success:
  extends: .slack-notifier-base
  rules:
    !reference [.on_deploy_stable_or_beta_repo_branch]
  dependencies: []
  script: |
    MESSAGE_TEXT=":host-green: Tagged build <$CI_PIPELINE_URL|$CI_PIPELINE_ID> succeeded.
    *$CI_COMMIT_REF_NAME* is available in the staging repositories."
    postmessage "#agent-release-sync" "$MESSAGE_TEXT"

notify:
  extends: .slack-notifier-base
  rules:
    !reference [.on_main_or_release_branch_or_deploy]
  dependencies: []
  script:
    - set +x
    - export GITLAB_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.gitlab_read_api_token --with-decryption --query "Parameter.Value" --out text)
    - export DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.datadog_api_key_org2 --with-decryption --query "Parameter.Value" --out text)
    - python3 -m pip install -r tasks/libs/requirements-notifications.txt -r tasks/libs/requirements-datadog-api.txt
    - |
      # Do not send notifications and statistics if this is a child pipeline of another repo
      # The triggering repo should already have its own notification system
      if [ "$CI_PIPELINE_SOURCE" != "pipeline" ]; then
        if [ "$DEPLOY_AGENT" = "true" ]; then
          invoke -e pipeline.notify --notification-type "deploy" --send-stats
        else
          invoke -e pipeline.notify --notification-type "merge" --send-stats
        fi
      else
        echo "This pipeline was triggered by another repository, skipping notification."
      fi
