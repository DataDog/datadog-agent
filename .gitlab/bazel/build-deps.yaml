.bazel:build-deps:
  extends: .bazel:defs
  rules:
    - !reference [ .except_mergequeue ]
    - when: on_success
  stage: deps_build

bazel:build-deps:linux-amd64:
  extends: [ .bazel:build-deps, .linux_x64 ]
  tags: ["linux-persistent:amd64", "specific:true"]
  cache: []
  script:
    - mkdir -p $BAZELISK_HOME
    - mkdir -p $BAZEL_DISK_CACHE
    - mkdir -p $BAZEL_OUTPUT_USER_ROOT
    - mkdir -p $BAZEL_REPO_CONTENTS_CACHE
    - bazel build //deps/...
  variables:
      BAZELISK_HOME: "$XDG_CACHE_HOME/bazelisk"
      BAZEL_DISK_CACHE: "$XDG_CACHE_HOME/disk_cache"
      BAZEL_OUTPUT_USER_ROOT: "$XDG_CACHE_HOME/output_user_root"
      BAZEL_REPO_CONTENTS_CACHE: "$XDG_CACHE_HOME/repo_contents"
      XDG_CACHE_HOME: "/data/bzl"

bazel:build-deps:linux-arm64:
  extends: [ .bazel:build-deps, .linux_arm64 ]
  tags: [ "arch:arm64", "specific:true" ]
  script:
    - bazel build //deps/...

bazel:build-deps:macos-amd64:
  extends: .bazel:build-deps
  tags: [ "macos:ventura-amd64", "specific:true" ]
  script:
    - bazel build //deps/...

bazel:build-deps:macos-arm64:
  extends: .bazel:build-deps
  tags: [ "macos:ventura-arm64", "specific:true" ]
  script:
    - bazel build //deps/...

# TODO(agent-build): re-enable when we're sure they won't cause problems (#incident-42947)
bazel:build-deps:windows-amd64:
  extends: [ .bazel:build-deps, .bazel:ext:windows ]
  variables:
    ARCH: x64
    SCRIPT: |-
      echo "ðŸŸ¡ TODO(regis): compilation errors remain - limiting to a working subset for the time being"
      bazel build '@zlib//...' '@libffi//:ffi'
      # bazel build @bzip2//...
