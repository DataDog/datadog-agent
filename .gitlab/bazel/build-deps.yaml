.bazel:build-deps:
  extends: .bazel:defs
  rules:
    - !reference [ .except_mergequeue ]
    - when: on_success
  stage: deps_build

bazel:build-deps:linux-amd64:
  extends: [ .bazel:build-deps, .linux_x64 ]
  tags: ["linux-persistent:amd64", "specific:true"]
  cache:
    - key:
        prefix: bazel-$CI_RUNNER_DESCRIPTION
        files: [ .bazelversion ]
      paths:
        - .cache/bazelisk
        #- .cache/bazel/install
      policy: pull-push
      when: on_success
  script:
  # Wrapper in tools/bazel expects these directories to exist
  # TODO(agent-build): make the wrapper to create these directories
    - mkdir -p /data/bzl /data/output /data/bzl-repo
    - bazel build //deps/...
  variables:
      #BAZELISK_HOME: "$XDG_CACHE_HOME/bazelisk"
      BAZEL_DISK_CACHE: "/data/bzl"
      BAZEL_OUTPUT_USER_ROOT: "/data/output"
      BAZEL_REPO_CONTENTS_CACHE: "/data/bzl-repo"
      #XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"

bazel:build-deps:linux-arm64:
  extends: [ .bazel:build-deps, .linux_arm64 ]
  tags: [ "arch:arm64", "specific:true" ]
  script:
    - bazel build //deps/...

bazel:build-deps:macos-amd64:
  extends: .bazel:build-deps
  tags: [ "macos:ventura-amd64", "specific:true" ]
  script:
    - bazel build //deps/...

bazel:build-deps:macos-arm64:
  extends: .bazel:build-deps
  tags: [ "macos:ventura-arm64", "specific:true" ]
  script:
    - bazel build //deps/...

# TODO(agent-build): re-enable when we're sure they won't cause problems (#incident-42947)
bazel:build-deps:windows-amd64:
  extends: [ .bazel:build-deps, .bazel:ext:windows ]
  variables:
    ARCH: x64
    SCRIPT: |-
      echo "ðŸŸ¡ TODO(regis): compilation errors remain - limiting to a working subset for the time being"
      bazel build @zlib//...
      # bazel build @bzip2//...
