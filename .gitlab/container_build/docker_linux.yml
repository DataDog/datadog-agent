---
.docker_build_job_definition:
  stage: container_build
  script:
    - TAG_SUFFIX=${TAG_SUFFIX:-}
    - BUILD_ARG=${BUILD_ARG:-}
    - |
      if [[ "$BUCKET_BRANCH" == "nightly" && ( "$IMAGE" =~ "ci/datadog-agent/agent" || "$IMAGE" =~ "ci/datadog-agent/cluster-agent" || "$IMAGE" =~ "ci/datadog-agent/cws-instrumentation" ) ]]; then
        export ECR_RELEASE_SUFFIX="-nightly"
      else
        export ECR_RELEASE_SUFFIX=${CI_COMMIT_TAG+-release}
      fi
    - TARGET_TAG=${IMAGE}${ECR_RELEASE_SUFFIX}:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}$TAG_SUFFIX-$ARCH
    - !reference [.login_to_docker_readonly]
    # Build image, use target none label to avoid replication
    - docker buildx build --no-cache --push --pull --platform linux/$ARCH --build-arg CIBUILD=true --build-arg GENERAL_ARTIFACTS_CACHE_BUCKET_URL=${GENERAL_ARTIFACTS_CACHE_BUCKET_URL} $BUILD_ARG --build-arg DD_GIT_REPOSITORY_URL=https://github.com/DataDog/datadog-agent --build-arg DD_GIT_COMMIT_SHA=${CI_COMMIT_SHA} --file $BUILD_CONTEXT/Dockerfile --tag ${TARGET_TAG} --label "org.opencontainers.image.created=$(date --rfc-3339=seconds)" --label "org.opencontainers.image.authors=Datadog <package@datadoghq.com>" --label "org.opencontainers.image.source=https://github.com/DataDog/datadog-agent" --label "org.opencontainers.image.version=$(dda inv agent.version)" --label "org.opencontainers.image.revision=${CI_COMMIT_SHA}" --label "org.opencontainers.image.vendor=Datadog, Inc." --label "target=none" $BUILD_CONTEXT
    # Squash image
    - crane flatten -t ${TARGET_TAG} ${TARGET_TAG}
  # Workaround for temporary network failures
  retry: 2
  timeout: 30m

# Base template for jobs that don't rely on the packaging job artifacts but
# rather from binaries stored in the 'dd-ci-artefacts-build-stable' bucket
.docker_build_s3:
  before_script:
    - aws s3 sync --only-show-errors $S3_ARTIFACTS_URI $BUILD_CONTEXT

# Base template to move the packaged artifact from gitlab into the build
# context
.docker_build_artifact:
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR/*.xz | grep -v -- -dbg- | xargs -I '{}' mv '{}' $BUILD_CONTEXT/

.docker_build_job_definition_amd64:
  extends: .docker_build_job_definition
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/docker_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  variables:
    ARCH: amd64

.docker_build_job_definition_arm64:
  extends: .docker_build_job_definition
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/docker_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:arm64"]
  variables:
    ARCH: arm64

# build agent7 image
docker_build_agent7:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-agent-7*-amd64.tar.xz

single_machine_performance-amd64-a7:
  extends: .docker_publish_job_definition
  stage: container_build
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - docker_build_agent7
  variables:
    IMG_REGISTRIES: internal-aws-smp
    IMG_SOURCES: ${SRC_AGENT}:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-amd64
    IMG_DESTINATIONS: 08450328-agent:${CI_COMMIT_SHA}-7-amd64

single_machine_performance-full-amd64-a7:
  extends: .docker_publish_job_definition
  stage: container_build
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - docker_build_agent7_full
  variables:
    IMG_REGISTRIES: internal-aws-smp
    IMG_SOURCES: ${SRC_AGENT}:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-full-amd64
    IMG_DESTINATIONS: 08450328-agent:${CI_COMMIT_SHA}-7-full-amd64

docker_build_agent7_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-agent-7*-arm64.tar.xz

# build agent7 fips image
docker_build_fips_agent7:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64-fips
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-fips
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-fips-agent-7*-amd64.tar.xz

docker_build_fips_agent7_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64-fips
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-fips
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-fips-agent-7*-arm64.tar.xz

# build agent7 jmx image
docker_build_agent7_jmx:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-agent-7*-amd64.tar.xz

docker_build_agent7_jmx_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-agent-7*-arm64.tar.xz

docker_build_fips_agent7_jmx:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64-fips
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-fips-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg WITH_JMX_FIPS=true --build-arg DD_AGENT_ARTIFACT=datadog-fips-agent-7*-amd64.tar.xz

docker_build_fips_agent7_arm64_jmx:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64-fips
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-fips-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg WITH_JMX_FIPS=true --build-arg DD_AGENT_ARTIFACT=datadog-fips-agent-7*-arm64.tar.xz

# Build agent7 OTel image
docker_build_ot_agent7:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64
    - job: datadog-otel-agent-x64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-ot-beta
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-amd64.tar.xz

docker_build_ot_agent7_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64
    - job: datadog-otel-agent-arm64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-ot-beta
    BUILD_ARG: --target test --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-arm64.tar.xz

docker_build_ot_agent7_jmx:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64
    - job: datadog-otel-agent-x64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-ot-beta-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-amd64.tar.xz

docker_build_ot_agent7_jmx_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64
    - job: datadog-otel-agent-arm64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-ot-beta-jmx
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-arm64.tar.xz

docker_build_agent7_full:
  extends: [.docker_build_job_definition_amd64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-x64
    - job: datadog-otel-agent-x64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-full
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-amd64.tar.xz

docker_build_agent7_full_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_artifact]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: datadog-agent-7-arm64
    - job: datadog-otel-agent-arm64
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/agent
    BUILD_CONTEXT: Dockerfiles/agent
    TAG_SUFFIX: -7-full
    BUILD_ARG: --target test --build-arg WITH_JMX=true --build-arg DD_AGENT_ARTIFACT=datadog-*-7*-arm64.tar.xz

# build the cluster-agent image
docker_build_cluster_agent_amd64:
  extends: [.docker_build_job_definition_amd64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cluster_agent-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_arm64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cluster-agent
    BUILD_CONTEXT: Dockerfiles/cluster-agent
  before_script:
    - mv -vf $CLUSTER_AGENT_BINARIES_DIR/datadog-cluster-agent $BUILD_CONTEXT/
    - mv -vf $CWS_INSTRUMENTATION_BINARIES_DIR $BUILD_CONTEXT/
    - mv -vf Dockerfiles/agent/nosys-seccomp Dockerfiles/cluster-agent/

docker_build_cluster_agent_arm64:
  extends: [.docker_build_job_definition_arm64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cluster_agent-build_arm64
      artifacts: true
    - job: cws_instrumentation-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_arm64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cluster-agent
    BUILD_CONTEXT: Dockerfiles/cluster-agent
  before_script:
    - mv -vf $CLUSTER_AGENT_BINARIES_DIR/datadog-cluster-agent $BUILD_CONTEXT/
    - mv -vf $CWS_INSTRUMENTATION_BINARIES_DIR $BUILD_CONTEXT/
    - mv -vf Dockerfiles/agent/nosys-seccomp Dockerfiles/cluster-agent/

docker_build_cluster_agent_fips_amd64:
  extends: [.docker_build_job_definition_amd64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cluster_agent_fips-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_arm64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cluster-agent
    BUILD_CONTEXT: Dockerfiles/cluster-agent
    TAG_SUFFIX: -fips
  before_script:
    - mv -vf $CLUSTER_AGENT_BINARIES_DIR/datadog-cluster-agent $BUILD_CONTEXT/
    - mv -vf Dockerfiles/agent/nosys-seccomp Dockerfiles/cluster-agent/
    - mv -vf $CWS_INSTRUMENTATION_BINARIES_DIR $BUILD_CONTEXT/
    - nm --defined-only ${BUILD_CONTEXT}/datadog-cluster-agent | grep boringssl_fips_self_test

docker_build_cluster_agent_fips_arm64:
  extends: [.docker_build_job_definition_arm64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cluster_agent_fips-build_arm64
      artifacts: true
    - job: cws_instrumentation-build_amd64
      artifacts: true
    - job: cws_instrumentation-build_arm64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cluster-agent
    BUILD_CONTEXT: Dockerfiles/cluster-agent
    TAG_SUFFIX: -fips
  before_script:
    - mv -vf $CLUSTER_AGENT_BINARIES_DIR/datadog-cluster-agent $BUILD_CONTEXT/
    - mv -vf Dockerfiles/agent/nosys-seccomp Dockerfiles/cluster-agent/
    - mv -vf $CWS_INSTRUMENTATION_BINARIES_DIR $BUILD_CONTEXT/
    - nm --defined-only ${BUILD_CONTEXT}/datadog-cluster-agent | grep boringssl_fips_self_test

# build the cws-instrumentation image
docker_build_cws_instrumentation_amd64:
  extends: [.docker_build_job_definition_amd64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cws_instrumentation-build_amd64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cws-instrumentation
    BUILD_CONTEXT: Dockerfiles/cws-instrumentation
  before_script:
    - cp $CWS_INSTRUMENTATION_BINARIES_DIR/cws-instrumentation.${ARCH} $BUILD_CONTEXT/

docker_build_cws_instrumentation_arm64:
  extends: [.docker_build_job_definition_arm64]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: cws_instrumentation-build_arm64
      artifacts: true
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/cws-instrumentation
    BUILD_CONTEXT: Dockerfiles/cws-instrumentation
  before_script:
    - cp $CWS_INSTRUMENTATION_BINARIES_DIR/cws-instrumentation.${ARCH} $BUILD_CONTEXT/

# build the dogstatsd image
docker_build_dogstatsd_amd64:
  extends: [.docker_build_job_definition_amd64, .docker_build_s3]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: build_dogstatsd_static-binary_x64
      artifacts: false
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/dogstatsd
    BUILD_CONTEXT: Dockerfiles/dogstatsd/alpine
  timeout: 20m

# build the dogstatsd image
docker_build_dogstatsd_arm64:
  extends: [.docker_build_job_definition_arm64, .docker_build_s3]
  rules:
    - !reference [.except_mergequeue]
    - when: on_success
  needs:
    - job: build_dogstatsd_static-binary_arm64
      artifacts: false
  variables:
    IMAGE: registry.ddbuild.io/ci/datadog-agent/dogstatsd
    BUILD_CONTEXT: Dockerfiles/dogstatsd/alpine
  timeout: 20m
