.pull_test_dockers:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/docker_x64:$DATADOG_AGENT_BUILDIMAGES
  needs: []
  tags: ["runner:docker"]
  stage: kernel_version_testing
  script:
    # DockerHub login for build to limit rate limit when pulling base images
    - DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_LOGIN_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_PWD_SSM_KEY --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin "$DOCKER_REGISTRY_URL"
    # Pull base images
    - mkdir $KITCHEN_DOCKERS
    - inv -e system-probe.save-test-dockers --output-dir $KITCHEN_DOCKERS --arch $ARCH
    # upload docker images to S3 artifacts bucket
    - pushd $DD_AGENT_TESTING_DIR
    - tar czvf kitchen-dockers-$ARCH.tar.gz kitchen-dockers-$ARCH
    - $S3_CP_CMD kitchen-dockers-$ARCH.tar.gz $S3_ARTIFACTS_URI/kitchen-dockers-$ARCH.tar.gz
    - popd
  artifacts:
    expire_in: 1 day
    paths:
      - $DD_AGENT_TESTING_DIR/kitchen-dockers-$ARCH
  variables:
    KITCHEN_DOCKERS: $DD_AGENT_TESTING_DIR/kitchen-dockers-$ARCH

pull_test_dockers_x64:
  extends: .pull_test_dockers
  variables:
    ARCH: amd64

pull_test_dockers_arm64:
  extends: .pull_test_dockers
  variables:
    ARCH: arm64

.package_dependencies:
  stage: kernel_version_testing
  rules:
    !reference [.on_system_probe_changes_or_manual]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/btf-gen:$DATADOG_AGENT_BTF_GEN_BUILDIMAGES
  tags: ["runner:main"]
  script:
    # Build dependencies directoru
    - mkdir $DEPENDENCIES
    - pushd $DEPENDENCIES
    # copy clang and llc bins
    - mkdir -p $EMBEDDED_BIN
    - cp $CLANG_BPF $EMBEDDED_BIN
    - cp $LLC_BPF $EMBEDDED_BIN
    - mkdir -p $EMBEDDED_INC
    # download and copy btf files
    - mkdir -p $BTF_DIR
    - $S3_CP_CMD $S3_ARTIFACTS_URI/minimized-btfs-${ARCH}.tar.xz $BTF_DIR/minimized-btfs.tar.xz
    # copy gotestsum and test2json
    - mkdir $GO_BIN
    - cp $GOTESTSUM $GO_BIN
    - cp $TEST2JSON $GO_BIN
    - mkdir junit
    - mkdir testjson
    - mkdir pkgjson
    # copy over docker images
    - mkdir kitchen-dockers
    - cp -R $KITCHEN_DOCKERS $DEPENDENCIES
    - cp -R site-cookbooks $DEPENDENCIES
    # copy system probe tests
    - mkdir $SYSTEM_PROBE_TESTS
    - cp -R $KITCHEN_TESTS $SYSTEM_PROBE_TESTS
    # package all the dependencies
    - tar czvf $ARCHIVE_NAME $DEPENDENCIES
    - popd
  artifacts:
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/$ARCHIVE_NAME
  variables:
    DEPENDENCIES: $DD_AGENT_TESTING_DIR/dependencies
    CLANG_BPF: $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/clang-bpf
    LLC_BPF: $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/llc-bpf
    GO_BIN: go/bin
    GOTESTSUM: $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/gotestsum
    TEST2JSON: $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/test2json
    EMBEDDED_BIN: opt/datadog-agent/embedded/bin
    EMBEDDED_INC: opt/datadog-agent/embedded/include
    BTF_DIR: system-probe-tests/pkg/ebpf/bytecode/build/co-re/btf
    KITCHEN_DOCKERS: $DD_AGENT_TESTING_DIR/kitchen-dockers-$ARCH
    SYSTEM_PROBE_TESTS: system-probe-tests
    KITCHEN_TESTS: $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/tests/pkg

package_dependencies_x64:
  extends:
    - .package_dependencies
  needs: ["tests_ebpf_x64", "pull_test_dockers_x64"]
  variables:
    ARCHIVE_NAME: "dependencies-x86_64.tar.gz"
    ARCH: amd64

package_dependencies_arm64:
  extends:
    - .package_dependencies
  needs: ["tests_ebpf_arm64", "pull_test_dockers_arm64"]
  variables:
    ARCHIVE_NAME: "dependencies-arm64.tar.gz"
    ARCH: arm64


kernel_version_testing_system_probe_linux_x64_ec2:
  extends:
    - .kitchen_ec2_location_us_east_1
  stage: kernel_version_testing
  rules:
    !reference [.manual]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  needs: ["go_deps", "go_tools_deps", "package_dependencies_x64"]
  tags: ["runner:main"]
  variables:
    ARCH: x86_64
    EC2_INSTANCE_TYPE: "z1d.metal"
    AWS_REGION: us-east-1
    LibvirtSSHKeyX86: $CI_PROJECT_DIR/libvirt_rsa-x86
    LibvirtSSHKeyARM: $CI_PROJECT_DIR/libvirt_rsa-arm
  script:
    - pulumi login s3://dd-ci-datadog-agent-omnibus-cache-build-stable/kernel-version-testing/$CI_PIPELINE_ID/pulumi
    - inv -e system-probe.test-microvms --security-groups=$KITCHEN_EC2_SG_IDS --subnets=$KITCHEN_EC2_SUBNET --instance-type-x86=$EC2_INSTANCE_TYPE
  artifacts:
    when: always
    paths:
      - $LibvirtSSHKeyX86
      - $LibvirtSSHKeyX86.pub
      - $LibvirtSSHKeyARM
      - $LibvirtSSHKeyARM.pub

kernel_version_testing_system_probe_linux_x64_ec2_cleanup:
  extends:
    - .kitchen_ec2_location_us_east_1
  stage: kernel_version_testing
  rules:
    !reference [.on_system_probe_changes_or_manual]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  needs: ["kernel_version_testing_system_probe_linux_x64_ec2"]
  tags: ["runner:main"]
  variables:
    ARCH: x86_64
    EC2_INSTANCE_TYPE: "z1d.metal"
    AWS_REGION: us-east-1
    LibvirtSSHKeyX86: $CI_PROJECT_DIR/libvirt_rsa-x86
    LibvirtSSHKeyARM: $CI_PROJECT_DIR/libvirt_rsa-arm
  script:
    - pulumi login s3://dd-ci-datadog-agent-omnibus-cache-build-stable/kernel-version-testing/$CI_PIPELINE_ID/pulumi
    - inv -e system-probe.test-microvms --destroy --security-groups=$KITCHEN_EC2_SG_IDS --subnets=$KITCHEN_EC2_SUBNET --instance-type-x86=$EC2_INSTANCE_TYPE
    - pulumi logout
