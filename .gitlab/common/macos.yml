---
# This is the scripts to be executed on the Gitlab macOS runners before every job.
# We don't have virtualization now so we need to clean the environment and install the proper dependencies before every job.
.list_go_versions_commands:
  - |
    echo "Don't forget to regularly delete Go unused versions. Here are the installed Go versions and their disk space on the runner:"
    echo "Go:"
    du -sh $HOME/.gimme/versions/*
    echo "To remove a Go version please run:"
    echo "gimme uninstall <version>"

.macos_setup_python:
  - |
    PY_VERSION_AGENT=$(cat .python-version)
    PY_VERSION_RUNNER=$(python3 --version | cut -d " " -f 2)
    echo "Python version on the agent: $PY_VERSION_AGENT"
    echo "Python version on the runner: $PY_VERSION_RUNNER"
    # Verify that python versions are compatible
    if [[ "$PY_VERSION_RUNNER" != "$PY_VERSION_AGENT"* ]]; then
      echo "Python versions are not compatible. Please update the python version on the runner (https://github.com/DataDog/ci-platform-machine-images/blob/main/packer/macos-ami/team/datadog-agent-ventura.pkr.hcl)."
      exit 1
    fi
  - |
    # Install dda in the home venv
    . $HOME/.venv/bin/activate
    python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)"
    python3 -m dda self dep sync -f legacy-tasks

.vault_login:
  # Point the CLI to our internal vault
  - export VAULT_ADDR=https://vault.us1.ddbuild.io
  - vault login -method=aws -no-print

.aws_retry_config:
  - export AWS_RETRY_MODE=standard
  - export AWS_RETRY_MAX_ATTEMPTS=5

.macos_gitlab:
  before_script:
    - !reference [.aws_retry_config]
    # Set up python
    - !reference [.macos_setup_python]
    # Selecting the current Go version
    - |
      eval $(gimme $(cat .go-version))
      export GOPATH=$GOROOT
    # List Python and Go existing environments and their disk space
    - !reference [.list_go_versions_commands]
    - dda inv -- -e rtloader.make
    - dda inv -- -e rtloader.install
    - dda inv -- -e install-tools
