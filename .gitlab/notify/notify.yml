---
# notify stage
# Contains jobs which send notifications depending on pipeline status.

.notify_setup:
  - SLACK_DATADOG_AGENT_BOT_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $SLACK_AGENT token) || exit $?; export SLACK_DATADOG_AGENT_BOT_TOKEN
  - GITLAB_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $GITLAB_TOKEN read_api) || exit $?; export GITLAB_TOKEN
  - DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_API_KEY_ORG2 token) || exit $?; export DD_API_KEY
  - python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)"
  - dda self dep sync -f legacy-tasks -f legacy-notifications

# Notify jobs are allowed to fail but are monitored by https://app.datadoghq.com/monitors/132367692
.notify-job:
  stage: notify
  allow_failure: true

notify-on-tagged-success:
  extends: .notify-job
  stage: notify
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules: !reference [.on_deploy_stable_or_beta_repo_branch]
  dependencies: []
  tags: ["arch:arm64"]
  script: |
    MESSAGE_TEXT=":host-green: Tagged build <$CI_PIPELINE_URL|$CI_PIPELINE_ID> succeeded.
    *$CI_COMMIT_REF_NAME* is available in the staging repositories."
    python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)"
    dda self dep sync -f legacy-tasks -f legacy-notifications
    SLACK_DATADOG_AGENT_BOT_TOKEN=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $SLACK_AGENT token) || exit $?; export SLACK_DATADOG_AGENT_BOT_TOKEN
    dda inv notify.post-message -c "#agent-release-sync" -m "$MESSAGE_TEXT"

notify:
  extends: .notify-job
  stage: notify
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules: !reference [.on_main_or_release_branch_or_deploy_always]
  dependencies: []
  tags: ["arch:arm64"]
  resource_group: notification
  timeout: 15 minutes # Added to prevent a stuck job blocking the resource_group defined above
  script:
    - !reference [.notify_setup]
    - !reference [.setup_agent_github_app]
    - dda inv -- -e notify.check-consistent-failures -p $CI_PIPELINE_ID

send_pipeline_stats:
  extends: .notify-job
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  when: always
  dependencies: []
  script:
    - !reference [.notify_setup]
    - dda inv -- -e notify.send-stats

notify_gitlab_ci_changes:
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  extends: .notify-job
  needs: [compute_gitlab_ci_config]
  tags: ["arch:amd64"]
  rules:
    - !reference  [.except_mergequeue]
    - changes:
        paths:
          - .gitlab-ci.yml
          - .gitlab/**/*.yml
        compare_to: $COMPARE_TO_BRANCH
  script:
    # Python 3.12 changes default behavior how packages are installed.
    # In particular, --break-system-packages command line option is
    # required to use the old behavior or use a virtual env. https://github.com/actions/runner-images/issues/8615
    - python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)" --break-system-packages
    - python3 -m dda self dep sync -f legacy-tasks
    - !reference [.setup_agent_github_app]
    - dda inv -- -e notify.gitlab-ci-diff --from-diff artifacts/diff.gitlab-ci.yml --pr-comment

.failure_summary_job:
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-17-x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  extends: .notify-job
  dependencies: []
  tags: ["arch:amd64"]
  resource_group: notification
  timeout: 15 minutes # Added to prevent a stuck job blocking the resource_group defined above


# Upload failure summary data to S3 at the end of each main pipeline
notify_failure_summary_on_pipeline:
  extends: [.failure_summary_job, .notify-job]
  rules:
    - !reference [.on_scheduled_main]
    - if: $CI_PIPELINE_SOURCE != "push" && $CI_PIPELINE_SOURCE != "api"
      when: never
    - !reference [.on_main_always]
  script:
    - !reference [.notify_setup]
    - dda inv -- -e notify.failure-summary-upload-pipeline-data

# Send failure summary notifications daily and weekly
notify_failure_summary_daily:
  extends: [.failure_summary_job, .notify-job]
  rules:
    - !reference [.on_scheduled_main]
  script:
    - !reference [.notify_setup]
    - weekday="$(date --utc '+%A')"
    - |
      if [ "$weekday" = "Sunday" ] || [ "$weekday" = "Monday" ]; then
        echo "Skipping daily summary on $weekday"
        exit
      fi
    # Daily
    - dda inv -- -e notify.failure-summary-send-notifications --daily-summary
    # Send weekly if necessary (note that this workflow is usually triggered early in the morning)
    - |
      if [ "$weekday" = "Friday" ]; then
        echo 'Sending weekly summary'
        dda inv -e notify.failure-summary-send-notifications --weekly-summary
      fi

close_failing_tests_stale_issues:
  extends: .notify-job
  image: registry.ddbuild.io/ci/datadog-agent-buildimages/linux-glibc-2-23-arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules:
    - !reference [.on_scheduled_main]
  needs: []
  tags: ["arch:arm64"]
  script:
    - weekday="$(date --utc '+%A')"
    # Weekly on Friday
    - |
      if [ "$weekday" != "Friday" ]; then
        echo "This script is run weekly on Fridays"
        exit
      fi
    - DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_API_KEY_ORG2 token) || exit $?; export DD_API_KEY
    - DD_APP_KEY=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $AGENT_APP_KEY_ORG2 token) || exit $?; export DD_APP_KEY
    - ATLASSIAN_PASSWORD=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $ATLASSIAN_WRITE token) || exit $?; export ATLASSIAN_PASSWORD
    - ATLASSIAN_USERNAME=$($CI_PROJECT_DIR/tools/ci/fetch_secret.sh $ATLASSIAN_WRITE user) || exit $?; export ATLASSIAN_USERNAME
    - python3 -m pip install "git+https://github.com/DataDog/datadog-agent-dev.git@v$(cat .dda/version)" --break-system-packages
    - python3 -m dda self dep sync -f legacy-tasks
    - dda inv -- -e notify.close-failing-tests-stale-issues
