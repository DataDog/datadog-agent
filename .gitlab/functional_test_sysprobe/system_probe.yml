---
# FIXME: our current Gitlab version doesn't support importing a file more than once
# For now, the workaround is to include "common" files once in the top-level .gitlab-ci.yml file
# See: https://gitlab.com/gitlab-org/gitlab/-/issues/28987
# include:
#   - /.gitlab/kitchen_common/testing.yml
#   - /.gitlab/functional_test/common.yml

.kitchen_test_system_probe_linux:
  extends:
    - .kitchen_test_system_probe
  stage: functional_test_sysprobe
  before_script:
    - echo "CI_JOB_URL=${CI_JOB_URL}" >> $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/job_env.txt
    - echo "CI_JOB_ID=${CI_JOB_ID}" >> $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/job_env.txt
    - echo "CI_JOB_NAME=${CI_JOB_NAME}" >> $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/job_env.txt
    - echo "CI_JOB_STAGE=${CI_JOB_STAGE}" >> $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/job_env.txt
    - cp $CI_PROJECT_DIR/minimized-btfs.tar.xz $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/minimized-btfs.tar.xz
    - inv system-probe.test-docker-image-list > $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/docker-images.txt
    - |
      get_docker_secrets() {
        if [ -o xtrace ]; then set +x; trap 'set -x' RETURN; fi
        export DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_LOGIN_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
        export DOCKER_REGISTRY_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_PWD_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
      }
      get_docker_secrets
    - pushd $DD_AGENT_TESTING_DIR
    - tasks/kitchen_setup.sh
  script:
    - tasks/run-test-kitchen.sh system-probe-test $AGENT_MAJOR_VERSION
    - popd
    - inv system-probe.print-failed-tests --output-dir $DD_AGENT_TESTING_DIR/testjson
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/kitchen-junit-*.tar.gz
      - $DD_AGENT_TESTING_DIR/testjson
      - $CI_PROJECT_DIR/kitchen_logs

# This dummy job is added here because we want the functional_tests stage to start at the same time as kernel_matrix_testing stage.
# The ebpf-platform team is trying to measure the time from the start of the pipeline to the completion of the kernel_matrix_testing and functional_tests stages, to measure improvement.
# The CI visibility product currently does not provide a way to measure this in the datadog app.
# We are trying to hack around this by having jobs which are triggered at the start of a pipeline.
# For functional tests this is the 'kitchen_test_dummy_job_tmp' and for kernel_matrix_testing it is the 'pull_test_dockers*' jobs.
# This way the stage.duration metric will allow us to measure what we want.
# This will most likely be temporary, until we decide which approach to move forward with for testing in the future.
kitchen_test_dummy_job_tmp:
  stage: functional_test_sysprobe
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/btf-gen$DATADOG_AGENT_BTF_GEN_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BTF_GEN_BUILDIMAGES
  needs: []
  tags: ["arch:amd64"]
  rules:
    !reference [ .on_system_probe_or_e2e_changes_or_manual ]
  script:
    - 'true'

kitchen_test_system_probe_linux_x64_ec2:
  extends:
    - .kitchen_test_system_probe_linux
    - .kitchen_ec2_location_us_east_1
    - .kitchen_ec2
  needs: [ "tests_ebpf_x64", "prepare_ebpf_functional_tests_x64", "generate_minimized_btfs_x64" ]
  variables:
    ARCH: amd64
    KITCHEN_ARCH: x86_64
    KITCHEN_EC2_INSTANCE_TYPE: "t2.xlarge"
    KITCHEN_CI_MOUNT_PATH: "/mnt/ci"
    KITCHEN_CI_ROOT_PATH: "/tmp/ci"
    KITCHEN_DOCKERS: $DD_AGENT_TESTING_DIR/kitchen-dockers-$ARCH
  parallel:
    matrix:
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2-4-14"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2-5-10"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2022-5-15"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2023"
      - KITCHEN_PLATFORM: "centos"
        KITCHEN_OSVERS: "centos-79"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "centos"
        KITCHEN_OSVERS: "rhel-86"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "debian"
        KITCHEN_OSVERS: "debian-10"
      - KITCHEN_PLATFORM: "debian"
        KITCHEN_OSVERS: "debian-11"
      - KITCHEN_PLATFORM: "fedora"
        KITCHEN_OSVERS: "fedora-36"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "fedora"
        KITCHEN_OSVERS: "fedora-37"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-16-04"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-18-04"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-20-04"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-22-04"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-23-04"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-23-10"
        KITCHEN_EC2_DEVICE_NAME: "/dev/sda1"

kitchen_test_system_probe_linux_arm64:
  extends:
    - .kitchen_test_system_probe_linux
    - .kitchen_ec2_location_us_east_1
    - .kitchen_ec2
  needs: [ "tests_ebpf_arm64", "prepare_ebpf_functional_tests_arm64", "generate_minimized_btfs_arm64" ]
  variables:
    ARCH: arm64
    KITCHEN_ARCH: arm64
    KITCHEN_EC2_INSTANCE_TYPE: "t4g.xlarge"
    KITCHEN_CI_MOUNT_PATH: "/mnt/ci"
    KITCHEN_CI_ROOT_PATH: "/tmp/ci"
    KITCHEN_DOCKERS: $DD_AGENT_TESTING_DIR/kitchen-dockers-$ARCH
  parallel:
    matrix:
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2-4-14"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2-5-10"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2022-5-15"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "amazonlinux"
        KITCHEN_OSVERS: "amazonlinux2023"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "centos"
        KITCHEN_OSVERS: "centos-79"
      - KITCHEN_PLATFORM: "centos"
        KITCHEN_OSVERS: "rhel-86"
      - KITCHEN_PLATFORM: "debian"
        KITCHEN_OSVERS: "debian-10"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "debian"
        KITCHEN_OSVERS: "debian-11"
        KITCHEN_EC2_DEVICE_NAME: "/dev/xvda"
      - KITCHEN_PLATFORM: "fedora"
        KITCHEN_OSVERS: "fedora-36"
      - KITCHEN_PLATFORM: "fedora"
        KITCHEN_OSVERS: "fedora-37"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-18-04"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-20-04"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-22-04"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-23-04"
      - KITCHEN_PLATFORM: "ubuntu"
        KITCHEN_OSVERS: "ubuntu-23-10"
