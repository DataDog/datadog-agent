# NOTE: If a new job is added, be sure to upate .gitlab/e2e_test_junit_upload.yml

.new-e2e_with_version:
  variables:
    WINDOWS_AGENT_ARCH: "x86_64"
    TEAM: windows-products
  extends:
    - .new_e2e_template
  before_script:
    # WINDOWS_AGENT_VERSION is used to verify the installed agent version
    # Must run before new_e2e_template changes the aws profile
    - WINDOWS_AGENT_VERSION=$(dda inv agent.version) || exit $?; export WINDOWS_AGENT_VERSION
    - !reference [.new_e2e_template, before_script]
  script:
    # LAST_STABLE_VERSION is used for upgrade test
    - export LAST_STABLE_VERSION=$(dda inv release.get-release-json-value "last_stable::7" --no-worktree)
    - !reference [.new_e2e_template, script]

.new-e2e_windows_msi:
  variables:
    TARGETS: ./tests/windows/install-test
    EXTRA_PARAMS: --run "$E2E_MSI_TEST$"
  extends:
    - .new-e2e_with_version

.new-e2e_windows_domain_test:
  variables:
    TARGETS: ./tests/windows/domain-test
  extends:
    - .new-e2e_with_version

.new-e2e_windows_installer_v7_tests:
  parallel:
    matrix:
      - E2E_MSI_TEST: TestInstall
      - E2E_MSI_TEST: TestRepair
      - E2E_MSI_TEST: TestUpgrade
      - E2E_MSI_TEST: TestUpgradeFromLatest
      - E2E_MSI_TEST: TestPersistingIntegrations
      - E2E_MSI_TEST: TestPersistingIntegrationsDuringUninstall
      - E2E_MSI_TEST: TestDisablePersistingIntegrations
      - E2E_MSI_TEST: TestIntegrationFolderPermissions
      - E2E_MSI_TEST: TestIntegrationRollback
      - E2E_MSI_TEST: TestUpgradeRollback
      - E2E_MSI_TEST: TestUpgradeRollbackWithoutCWS
      - E2E_MSI_TEST: TestUpgradeChangeUser
      - E2E_MSI_TEST: TestUpgradeFromV5
      - E2E_MSI_TEST: TestAgentUser/user_only
      - E2E_MSI_TEST: TestAgentUser/dotslash_user
      - E2E_MSI_TEST: TestAgentUser/hostname_user
      - E2E_MSI_TEST: TestAgentUser/LocalSystem
      - E2E_MSI_TEST: TestAgentUser/SYSTEM
      - E2E_MSI_TEST: TestInstallOpts
      - E2E_MSI_TEST: TestSubServicesOpts/all-subservices
      - E2E_MSI_TEST: TestSubServicesOpts/no-subservices
      - E2E_MSI_TEST: TestInstallAltDir
      - E2E_MSI_TEST: TestInstallExistingAltDir
      - E2E_MSI_TEST: TestInstallAltDirAndCorruptForUninstall
      - E2E_MSI_TEST: TestInstallFail
      - E2E_MSI_TEST: TestInstallWithLanmanServerDisabled
      # These tests are v7 only
      - E2E_MSI_TEST: TestNPMUpgradeToNPM
      - E2E_MSI_TEST: TestNPMUpgradeNPMToNPM
      - E2E_MSI_TEST: TestNPMInstallWithAddLocal
      - E2E_MSI_TEST: TestNPMUpgradeFromBeta
      - E2E_MSI_TEST: TestUpgradeFromV6

# Agent 7
.new-e2e_windows_a7_x86_64:
  extends:
    - .new-e2e_windows_msi
    - .new-e2e_agent_a7
  needs:
    - !reference [.needs_new_e2e_template]
    - deploy_windows_testing-a7

## full tests
new-e2e-windows-agent-msi-windows-server-a7-x86_64:
  stage: e2e_install_packages
  extends:
    - .new-e2e_windows_a7_x86_64
    - .new-e2e_windows_installer_v7_tests
  rules:
    - !reference [.on_deploy]
    - !reference [.on_e2e_or_windows_installer_changes]
    - !reference [.manual]
  timeout: 1h15m

new-e2e-windows-agent-domain-tests-a7-x86_64:
  stage: e2e_install_packages
  extends:
    - .new-e2e_windows_domain_test
    - .new-e2e_agent_a7
  needs:
    - !reference [.needs_new_e2e_template]
    - deploy_windows_testing-a7
  rules:
    - !reference [.on_deploy]
    - !reference [.on_e2e_or_windows_installer_changes]
    - !reference [.manual]
  timeout: 1h15m

new-e2e-windows-agent-a7-x86_64-fips:
  stage: e2e_install_packages
  variables:
    WINDOWS_AGENT_FLAVOR: "fips"
    TARGETS: ./tests/windows/fips-test
  extends:
    - .new-e2e_with_version
    - .new-e2e_agent_a7
  needs:
    - !reference [.needs_new_e2e_template]
    - deploy_windows_testing-a7
    - deploy_windows_testing-a7-fips
  parallel:
    matrix:
      - EXTRA_PARAMS: --run "TestFIPSAgent$"
      - EXTRA_PARAMS: --run "TestFIPSAgentAltDir$"
      - EXTRA_PARAMS: --run "TestFIPSAgentDoesNotInstallOverAgent$"
      - EXTRA_PARAMS: --run "TestAgentDoesNotInstallOverFIPSAgent$"
  rules:
    - !reference [.on_deploy]
    - !reference [.on_e2e_or_windows_installer_changes]
    - !reference [.manual]
  timeout: 1h15m

## single test for PRs
## skipped if the full tests are running
new-e2e-windows-agent-msi-upgrade-windows-server-a7-x86_64:
  stage: e2e_install_packages
  extends:
    - .new-e2e_windows_msi
    - .new-e2e_windows_a7_x86_64
  rules:
    - !reference [.except_main_release_or_mq]
    - !reference [.except_windows_installer_changes]
    - !reference [.on_default_new_e2e_tests]
    - !reference [.except_deploy]
  variables:
    E2E_MSI_TEST: TestUpgrade

new-e2e-installer-windows:
  extends: .new_e2e_template
  rules:
    - !reference [.on_installer_or_e2e_changes]
    - !reference [.manual]
  needs:
    - !reference [.needs_new_e2e_template]
    - deploy_windows_testing-a7
    - deploy_installer_oci
    - deploy_agent_oci
    - qa_installer_script_windows
  before_script:
    # CURRENT_AGENT_VERSION is used to verify the installed agent version
    # Must run before new_e2e_template changes the aws profile
    # Note: this is similar to the WINDOWS_AGENT_VERSION in new-e2e_windows_msi but this job is running cross platforms
    # Note 2: new_e2e_template does not define AGENT_MAJOR_VERSION, so define it as 7 below.
    - CURRENT_AGENT_VERSION=$(dda inv agent.version) || exit $?; export CURRENT_AGENT_VERSION
    - CURRENT_AGENT_VERSION_PACKAGE=$(dda inv agent.version --url-safe)-1 || exit $?; export CURRENT_AGENT_VERSION_PACKAGE
    - !reference [.new_e2e_template, before_script]
  variables:
    TARGETS: ./tests/installer/windows
    TEAM: windows-products
    FLEET_INSTALL_METHOD: "windows"
    E2E_USE_AWS_PROFILE: "false"
    MAX_RETRIES_FLAG: "--max-retries=3"
  parallel:
    matrix:
      # agent-package
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeMSI$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeAgentPackage$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeAgentPackageWithAltDir$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeAgentPackageAfterRollback$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestDowngradeAgentPackage$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestStopExperiment$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestExperimentForNonExistingPackageFails$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestExperimentCurrentVersionFails$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestStopWithoutExperiment$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestRevertsExperimentWhenServiceDies$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestRevertsExperimentWhenTimeout$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestExperimentMSIRollbackMaintainsCustomUserAndAltDir$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestRevertsExperimentWhenServiceDiesMaintainsCustomUserAndAltDir$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeWithHostNameChange$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestRunAgentMSIAfterExperiment$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestUpgradeWithAgentUser$"
      - EXTRA_PARAMS: --run "TestAgentUpgrades$/TestDowngradeWithMissingInstallSource$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesOnDC$/TestUpgradeMSI$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesOnDC$/TestUpgradeAgentPackage$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesAfterDCPromotion$/TestUpgradeAfterDCPromotion$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesOnDCWithGMSA$/TestUpgradeMSI$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesOnDCWithGMSA$/TestUpgradeAgentPackage$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesFromGA$/TestUpgradeAgentPackage$"
      - EXTRA_PARAMS: --run "TestAgentUpgradesFromGA$/TestUpgradeAgentPackageAfterRollback$"
      - EXTRA_PARAMS: --run "TestAgentInstalls$/TestSetupScriptInstallInfo$"
      - EXTRA_PARAMS: --run "TestUpgradeWithMissingPassword$/TestUpgradeWithMissingPassword$"
      # agent config experiment
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestConfigUpgradeSuccessful$"
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestConfigUpgradeFailure$"
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestConfigUpgradeNewAgents$"
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestRevertsConfigExperimentWhenServiceDies$"
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestRevertsConfigExperimentWhenTimeout$"
      - EXTRA_PARAMS: --run "TestAgentConfig$/TestManagedConfigActiveAfterUpgrade$"
      # install-exe
      - EXTRA_PARAMS: --run "TestInstallExe$/TestInstallAgentPackage$"
      - EXTRA_PARAMS: --run "TestInstallExeWithProxy$/TestInstallAgentPackageWithProxy$"
      # install-script
      - EXTRA_PARAMS: --run "TestInstallScript$/TestInstallAgentPackage$"
      - EXTRA_PARAMS: --run "TestInstallScript$/TestInstallFromOldInstaller$"
      - EXTRA_PARAMS: --run "TestInstallScript$/TestInstallIgnoreMajorMinor$"
      - EXTRA_PARAMS: --run "TestInstallScript$/TestInstallCurrentWithOldInstallerScript$"
      - EXTRA_PARAMS: --run "TestInstallScriptWithAgentUser$"
      - EXTRA_PARAMS: --run "TestInstallScriptWithAgentUserOnDC$"
      # installer-package
      - EXTRA_PARAMS: --run "TestInstaller$"
      # TODO: disabling tests during MSI merge, should be covered by regular Agent MSI tests
      # - EXTRA_PARAMS: --run "TestInstallerRollback$"
      # apm-library-dotnet
      - EXTRA_PARAMS: --run "TestDotnetLibraryInstalls$"
      - EXTRA_PARAMS: --run "TestDotnetLibraryInstallsWithoutIIS/TestInstallDotnetLibraryPackageWithoutIIS$"
      - EXTRA_PARAMS: --run "TestDotnetLibraryInstallsWithoutIIS/TestMSIInstallDotnetLibraryFailsWithoutIIS$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestInstallFromMSI$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestMSIThenRemoteUpgrade$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestUpgradeWithMSI$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestMSIRollbackRemovesLibrary$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestMSISkipRollbackIfInstalled$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestUninstallKeepsLibrary$"
      - EXTRA_PARAMS: --run "TestAgentMSIInstallsDotnetLibrary/TestUninstallScript$"
