---
# e2e stage
# Contains jobs which runs e2e tests on our Docker images.

.k8s_e2e_template:
  stage: e2e
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["arch:amd64"]
  dependencies: []
  variables:
    LANG: C.UTF-8
  before_script:
    - export DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_LOGIN_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
    - export DOCKER_REGISTRY_PWD=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_PWD_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
    - export DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.datadog_api_key --with-decryption --query "Parameter.Value" --out text)

k8s-e2e-dev:
  extends: .k8s_e2e_template
  rules: !reference [.on_dev_branch_manual]
  # Note: pupernetes-dev requires the below jobs to work. However,
  # we can't explicitly define the dependencies because a job cannot depend on other manual jobs.
  # Adding the following lines would result in pipelines remaining in a "Running" state forever,
  # as the pupernetes-dev job waits for manual jobs that may never be triggered.
  # needs:
  #   - dev_branch_docker_hub-a6
  #   - dev_branch_docker_hub-a7
  # We still want to make the job available as soon as possible. In this case, since it's manual
  # and requires other manual jobs, it's reasonable make it available from the beginning and let
  # engineers trigger the correct sequence of jobs when needed.
  needs: []
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py2 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=default
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=default

k8s-e2e-main:
  extends: .k8s_e2e_template
  allow_failure: true # temporary while investigating
  rules: !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py2 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=default
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=default

k8s-e2e-tags-6:
  extends: .k8s_e2e_template
  rules: !reference [.on_deploy_stable_or_beta_repo_branch_a6_manual]
  script:
    - AGENT_VERSION=$(inv agent.version --major-version 6)
    - DCA_VERSION=$(inv -e cluster-agent.version)
    - inv -e e2e-tests --agent-image=datadog/agent:${AGENT_VERSION} --dca-image=datadog/cluster-agent:${DCA_VERSION} --argo-workflow=default

k8s-e2e-tags-7:
  extends: .k8s_e2e_template
  rules: !reference [.on_deploy_stable_or_beta_repo_branch_a7_manual]
  script:
    - AGENT_VERSION=$(inv agent.version --major-version 7)
    - DCA_VERSION=$(inv -e cluster-agent.version)
    - inv -e e2e-tests --agent-image=datadog/agent:${AGENT_VERSION} --dca-image=datadog/cluster-agent:${DCA_VERSION} --argo-workflow=default

.k8s-e2e-cws-cspm-init:
  - set +x
  - export DATADOG_AGENT_SITE=datadoghq.com
  - export DATADOG_AGENT_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_api_key --with-decryption --query "Parameter.Value" --out text)
  - export DATADOG_AGENT_APP_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_app_key --with-decryption --query "Parameter.Value" --out text)
  - export DATADOG_AGENT_RC_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_rc_key --with-decryption --query "Parameter.Value" --out text)
  # workaround until CWS is able to support 6.4 kernel correctly
  - export AMI=ami-083a735d0245929cd

k8s-e2e-cws-dev:
  extends: .k8s_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=cws

k8s-e2e-cws-main:
  extends: .k8s_e2e_template
  rules: !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  retry: 1
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=cws

k8s-e2e-cspm-dev:
  extends: .k8s_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=cspm

k8s-e2e-cspm-main:
  extends: .k8s_e2e_template
  rules: !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  retry: 1
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=cspm

k8s-e2e-otlp-dev:
  extends: .k8s_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: [] # See note on k8s-e2e-dev above
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=otlp

k8s-e2e-otlp-main:
  extends: .k8s_e2e_template
  rules: !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=otlp

.new_e2e_template:
  stage: e2e
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/test-infra-definitions/runner:$TEST_INFRA_DEFINITIONS_BUILDIMAGES
  tags: ["arch:amd64"]
  before_script:
    # Setup AWS Credentials
    - mkdir -p ~/.aws
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.agent-qa-profile --with-decryption --query "Parameter.Value" --out text >> ~/.aws/config
    - export AWS_PROFILE=agent-qa-ci
    # Now all `aws` commands target the agent-qa profile
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.ssh_public_key --with-decryption --query "Parameter.Value" --out text > $E2E_PUBLIC_KEY_PATH
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.ssh_key --with-decryption --query "Parameter.Value" --out text > $E2E_PRIVATE_KEY_PATH
    # Use S3 backend
    - pulumi login "s3://dd-pulumi-state?region=us-east-1&awssdk=v2&profile=$AWS_PROFILE"
  variables:
    KUBERNETES_MEMORY_REQUEST: 12Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    E2E_PUBLIC_KEY_PATH: /tmp/agent-qa-ssh-key.pub
    E2E_PRIVATE_KEY_PATH: /tmp/agent-qa-ssh-key
    E2E_KEY_PAIR_NAME: datadog-agent-ci
    E2E_PIPELINE_ID: $CI_PIPELINE_ID
  script:
    - inv -e new-e2e-tests.run --targets $TARGETS -c ddagent:fullImagePath=669783387624.dkr.ecr.us-east-1.amazonaws.com/agent:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA} -c ddagent:clusterAgentFullImagePath=669783387624.dkr.ecr.us-east-1.amazonaws.com/cluster-agent:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA} -c ddagent:imagePullRegistry=669783387624.dkr.ecr.us-east-1.amazonaws.com -c ddagent:imagePullUsername=AWS -c ddagent:imagePullPassword=$(aws ecr get-login-password) --junit-tar "junit-${CI_JOB_NAME}.tgz" ${EXTRA_PARAMS}
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      # This file will be consumed by the `e2e_test_junit_upload` job in next stage to push the report to datadog.
      # If you create a new job from this template, do not forget to update the `dependencies` of the `e2e_test_junit_upload` job.
      - junit-*.tgz
    reports:
      junit: test/new-e2e/junit-*.xml

new-e2e-containers-dev:
  extends: .new_e2e_template
  # TODO once images are deployed to ECR for dev branches, update
  # on_main_and_no_skip_e2e adding on_dev_branch_manual rules
  # and move rules to template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  variables:
    TARGETS: ./tests/containers
    TEAM: container-integrations
  parallel:
    matrix:
      - EXTRA_PARAMS: --run TestKindSuite
      - EXTRA_PARAMS: --run TestEKSSuite
      - EXTRA_PARAMS: --run TestECSSuite
      - EXTRA_PARAMS: --skip "Test(Kind|EKS|ECS)Suite"

new-e2e-containers-main:
  extends: .new_e2e_template
  rules: !reference [.on_main_and_no_skip_e2e]
  needs:
    - qa_main_agent
    - qa_main_dca
    - qa_main_dogstatsd
  variables:
    TARGETS: ./tests/containers
    TEAM: container-integrations
  parallel:
    matrix:
      - EXTRA_PARAMS: --run TestKindSuite
      - EXTRA_PARAMS: --run TestEKSSuite
      - EXTRA_PARAMS: --run TestECSSuite
      - EXTRA_PARAMS: --skip "Test(Kind|EKS|ECS)Suite"
  # Temporary, until we manage to stabilize those tests.
  allow_failure: true

new-e2e-agent-subcommands-dev:
  extends: .new_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  variables:
    TARGETS: ./tests/agent-subcommands
    TEAM: agent-shared-components

new-e2e-agent-subcommands-main:
  extends: .new_e2e_template
  rules: !reference [.on_main_and_no_skip_e2e]
  variables:
    TARGETS: ./tests/agent-subcommands
    TEAM: agent-shared-components
  # Temporary, until we manage to stabilize those tests.
  allow_failure: true

new-e2e-language-detection-dev:
  extends: .new_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  variables:
    TARGETS: ./tests/language-detection
    TEAM: processes

new-e2e-language-detection-main:
  extends: .new_e2e_template
  rules: !reference [.on_main_and_no_skip_e2e]
  variables:
    TARGETS: ./tests/language-detection
    TEAM: processes

new-e2e-npm-dev:
  extends: .new_e2e_template
  rules: !reference [.on_dev_branch_manual]
  needs: []
  variables:
    TARGETS: ./tests/npm

new-e2e-npm-main:
  extends: .new_e2e_template
  rules: !reference [.on_main_and_no_skip_e2e]
  variables:
    TARGETS: ./tests/npm
  # Temporary, until we manage to stabilize those tests.
  allow_failure: true

#   ^    If you create a new job here that extends `.new_e2e_template`,
#  /!\   do not forget to add it in the `dependencies` statement of the
# /___\  `e2e_test_junit_upload` job in the `.gitlab/e2e_test_junit_upload.yml` file
