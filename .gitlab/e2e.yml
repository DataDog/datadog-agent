---
# e2e stage
# Contains jobs which runs e2e tests on our Docker images.

.k8s_e2e_template:
  stage: e2e
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: ["runner:main"]
  dependencies: []
  variables:
    LANG: C.UTF-8
  before_script:
    - export DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_LOGIN_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
    - export DOCKER_REGISTRY_PWD=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.$DOCKER_REGISTRY_PWD_SSM_KEY --with-decryption --query "Parameter.Value" --out text)
    - export DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.datadog_api_key --with-decryption --query "Parameter.Value" --out text)

k8s-e2e-dev:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_dev_branch_manual]
  # Note: pupernetes-dev requires the below jobs to work. However,
  # we can't explicitly define the dependencies because a job cannot depend on other manual jobs.
  # Adding the following lines would result in pipelines remaining in a "Running" state forever,
  # as the pupernetes-dev job waits for manual jobs that may never be triggered.
  # needs:
  #   - dev_branch_docker_hub-a6
  #   - dev_branch_docker_hub-a7
  # We still want to make the job available as soon as possible. In this case, since it's manual
  # and requires other manual jobs, it's reasonable make it available from the beginning and let
  # engineers trigger the correct sequence of jobs when needed.
  needs: []
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py2 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=default
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=default

k8s-e2e-main:
  extends: .k8s_e2e_template
  allow_failure: true # temporary while investigating
  rules:
    !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py2 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=default
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=default

k8s-e2e-tags-6:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_deploy_stable_or_beta_repo_branch_a6_manual]
  script:
    - AGENT_VERSION=$(inv -e agent.version --major-version 6)
    - DCA_VERSION=$(inv -e cluster-agent.version)
    - inv -e e2e-tests --agent-image=datadog/agent:${AGENT_VERSION} --dca-image=datadog/cluster-agent:${DCA_VERSION} --argo-workflow=default

k8s-e2e-tags-7:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_deploy_stable_or_beta_repo_branch_a7_manual]
  script:
    - AGENT_VERSION=$(inv -e agent.version --major-version 7)
    - DCA_VERSION=$(inv -e cluster-agent.version)
    - inv -e e2e-tests --agent-image=datadog/agent:${AGENT_VERSION} --dca-image=datadog/cluster-agent:${DCA_VERSION} --argo-workflow=default

.k8s-e2e-cws-cspm-init:
  - set +x
  - export DATADOG_AGENT_SITE=datadoghq.com
  - export DATADOG_AGENT_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_api_key --with-decryption --query "Parameter.Value" --out text)
  - export DATADOG_AGENT_APP_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_app_key --with-decryption --query "Parameter.Value" --out text)
  - export DATADOG_AGENT_RC_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.e2e_tests_rc_key --with-decryption --query "Parameter.Value" --out text)

k8s-e2e-cws-dev:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_dev_branch_manual]
  needs: []
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=cws

k8s-e2e-cws-main:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  retry: 1
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=cws

k8s-e2e-cspm-dev:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_dev_branch_manual]
  needs: []
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=cspm

k8s-e2e-cspm-main:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  retry: 1
  script:
    - !reference [.k8s-e2e-cws-cspm-init]
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=cspm

k8s-e2e-otlp-dev:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_dev_branch_manual]
  needs: [] # See note on k8s-e2e-dev above
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3 --dca-image=datadog/cluster-agent-dev:${CI_COMMIT_REF_SLUG} --argo-workflow=otlp

k8s-e2e-otlp-main:
  extends: .k8s_e2e_template
  rules:
    !reference [.on_main]
  # needs:
  #   - dev_master-a6
  #   - dev_master-a7
  script:
    - inv -e e2e-tests --agent-image=datadog/agent-dev:master-py3 --dca-image=datadog/cluster-agent-dev:master --argo-workflow=otlp
