---
# deploy containers stage
# Contains jobs which deploy Agent 6 & 7 to staging repositories and to Dockerhub / GCR.

# Notes: this defines a child pipline of the datadog-agent repository. Therefore:
# - Only blocks defined in this file or the included files below can be used.
#   In particular, blocks defined in the main .gitlab-ci.yml are unavailable.
# - Dependencies / needs on jobs not defined in this file or the included files cannot be made.

stages:
  - deploy_containers

include:
  - .gitlab/common/container_publish_job_templates.yml
  - .gitlab/deploy_containers/conditions.yml

#
# Image tagging & manifest publication
#
#
# Agent v7
#
.deploy_containers-a7-base:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - if [[ "$VERSION" == "" ]]; then VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?; fi
    - export IMG_BASE_SRC="${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"
    - export IMG_LINUX_SOURCES="${IMG_BASE_SRC}-7${JMX}-amd64,${IMG_BASE_SRC}-7${JMX}-arm64"
    - export IMG_WINDOWS_SOURCES="${IMG_BASE_SRC}-7${JMX}-win1809${FLAVOR}-amd64,${IMG_BASE_SRC}-7${JMX}-winltsc2022${FLAVOR}-amd64"
    - if [[ "$FLAVOR" == "-linux" ]]; then export IMG_SOURCES="${IMG_LINUX_SOURCES}"; elif [[ "$FLAVOR" == "-servercore" ]]; then export IMG_SOURCES="${IMG_WINDOWS_SOURCES}"; else export IMG_SOURCES="${IMG_LINUX_SOURCES},${IMG_WINDOWS_SOURCES}"; fi
    - export IMG_DESTINATIONS="${AGENT_REPOSITORY}:${VERSION}${FLAVOR}${JMX}"

.deploy_containers-a7_win_only_image:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - OS=$(echo $OS_LTSC_MAPPING | cut -d ':' -f 1)
    - LTSC_VERSION=$(echo $OS_LTSC_MAPPING | cut -d ':' -f 2)
    - if [[ "$VERSION" == "" ]]; then VERSION="$(dda inv agent.version --major-version 7 --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?; fi
    - IMG_BASE_SRC="${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"
    - export IMG_SOURCES="${IMG_BASE_SRC}-7${JMX}-win${OS}${FLAVOR}-amd64"
    - export IMG_DESTINATIONS="${AGENT_REPOSITORY}:${VERSION}${FLAVOR}-ltsc${LTSC_VERSION}${JMX}"

.deploy_containers_latest_base:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?; fi
    - export AGENT_REFERENCE=${AGENT_REPOSITORY}:${VERSION}

.deploy_containers-a7_external:
  extends: .deploy_containers-a7-base
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"
        FLAVOR:
          - ""
          - "-servercore"
          - "-linux"

.deploy_containers-a7_win_only_external:
  extends: .deploy_containers-a7_win_only_image
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"
        OS_LTSC_MAPPING:
          - "ltsc2022:2022"
          - "1809:2019"
        FLAVOR:
          - ""
          - "-servercore"

.deploy_containers-a7-base-ot:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - if [[ "$VERSION" == "" ]]; then VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)-ot-beta" || exit $?; fi
    - export IMG_SOURCES="${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-ot-beta${JMX}-amd64,${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-ot-beta${JMX}-arm64"
    - export IMG_DESTINATIONS="${AGENT_REPOSITORY}:${VERSION}${JMX}"

.deploy_containers-a7-base-fips:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - if [[ "$VERSION" == "" ]]; then VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)-fips" || exit $?; fi
    - export IMG_SOURCES="${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-fips${JMX}-amd64,${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-7-fips${JMX}-arm64"
    - export IMG_DESTINATIONS="${AGENT_REPOSITORY}:${VERSION}${JMX}"

.deploy_containers-a7-full-base:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  dependencies: []
  before_script:
    - if [[ "$VERSION" == "" ]]; then VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?; fi
    - export IMG_BASE_SRC="${SRC_AGENT}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"
    - export IMG_LINUX_SOURCES="${IMG_BASE_SRC}-7-full-amd64,${IMG_BASE_SRC}-7-full-arm64"
    - export IMG_WINDOWS_SOURCES="${IMG_BASE_SRC}-7-jmx-win1809-amd64,${IMG_BASE_SRC}-7-jmx-winltsc2022-amd64"
    - export IMG_SOURCES="${IMG_LINUX_SOURCES},${IMG_WINDOWS_SOURCES}"
    - export IMG_DESTINATIONS="${AGENT_REPOSITORY}:${VERSION}-full"

deploy_containers-a7:
  extends: .deploy_containers-a7_external
  rules:
    !reference [.manual_on_deploy_auto_on_rc]

deploy_containers-a7-win-only:
  extends: .deploy_containers-a7_win_only_external
  rules:
    !reference [.manual_on_deploy_auto_on_rc]

deploy_containers-a7-full:
  extends: .deploy_containers-a7-full-base
  rules:
    !reference [.manual_on_deploy_auto_on_rc]

deploy_containers-a7-ot:
  extends: .deploy_containers-a7-base-ot
  rules:
    !reference [.manual_on_deploy_auto_on_rc]
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"

deploy_containers-a7-fips:
  extends: .deploy_containers-a7-base-fips
  rules:
    !reference [.manual_on_deploy_auto_on_rc]
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"

deploy_containers-a7-rc:
  extends: .deploy_containers-a7_external
  rules:
    !reference [.on_rc]
  variables:
    VERSION: 7-rc

deploy_containers-a7-win-only-rc:
  extends: .deploy_containers-a7_win_only_external
  rules:
    !reference [.on_rc]
  variables:
    VERSION: 7-rc

deploy_containers-a7-ot-rc:
  extends: .deploy_containers-a7-base-ot
  rules:
    !reference [.on_rc]
  variables:
    VERSION: 7-ot-beta-rc
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"

deploy_containers-a7-full-rc:
  extends: .deploy_containers-a7-full-base
  rules:
    !reference [.on_rc]
  variables:
    VERSION: 7-full-rc

deploy_containers-a7-fips-rc:
  extends: .deploy_containers-a7-base-fips
  rules:
    !reference [.on_rc]
  variables:
    VERSION: 7-fips-rc
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"

deploy_containers-dogstatsd:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  rules:
    !reference [.manual_on_deploy_auto_on_rc]
  dependencies: []
  before_script:
    - VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?
    - export IMG_SOURCES="${SRC_DSD}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-amd64,${SRC_DSD}:v${PARENT_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}-arm64"
    - export IMG_DESTINATIONS="${DSD_REPOSITORY}:${VERSION}"

deploy_containers-a7_internal:
  extends: .deploy_containers-a7-base
  rules:
    !reference [.on_internal_final]
  variables:
    JMX: "-jmx"


deploy_containers-a7_internal-rc:
  extends: .deploy_containers-a7-base
  rules:
    !reference [.on_internal_rc]
  variables:
    VERSION: 7-rc


deploy_containers-a7-ot_internal:
  extends: .deploy_containers-a7-base-ot
  rules:
    !reference [.on_internal_final]
  variables:
    JMX: "-jmx"

deploy_containers-a7-ot_internal-rc:
  extends: .deploy_containers-a7-base-ot
  rules:
    !reference [.on_internal_rc]
  variables:
    VERSION: 7-ot-beta-rc
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"


deploy_containers-a7-fips_internal:
  extends: .deploy_containers-a7-base-fips
  rules:
    !reference [.on_internal_final]
  variables:
    JMX: "-jmx"

deploy_containers-a7-fips_internal-rc:
  extends: .deploy_containers-a7-base-fips
  rules:
    !reference [.on_internal_rc]
  variables:
    VERSION: 7-fips-rc
  parallel:
    matrix:
      - JMX:
          - ""
          - "-jmx"
#
# Latest publication
#

deploy_containers_latest_tags-a7:
  extends: .deploy_containers_latest_base
  stage: deploy_containers
  rules:
    !reference [.on_final]
  dependencies: []
  parallel:
    matrix:
      - IMG_NEW_TAG: 7, latest
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}
      - IMG_NEW_TAG: 7-jmx, latest-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-jmx
      - IMG_NEW_TAG: 7-servercore, latest-servercore
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore
      - IMG_NEW_TAG: 7-servercore-jmx, latest-servercore-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore-jmx
      - IMG_NEW_TAG: 7-ltsc2019, latest-ltsc2019
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-ltsc2019
      - IMG_NEW_TAG: 7-ltsc2022, latest-ltsc2022
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-ltsc2022
      - IMG_NEW_TAG: 7-servercore-ltsc2019, latest-servercore-ltsc2019
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore-ltsc2019
      - IMG_NEW_TAG: 7-servercore-ltsc2022, latest-servercore-ltsc2022
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore-ltsc2022
      - IMG_NEW_TAG: 7-servercore-ltsc2019-jmx, latest-servercore-ltsc2019-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore-ltsc2019-jmx
      - IMG_NEW_TAG: 7-servercore-ltsc2022-jmx, latest-servercore-ltsc2022-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-servercore-ltsc2022-jmx
      - IMG_NEW_TAG: 7-full, latest-full
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-full

deploy_containers_latest-a7_internal:
  extends: .deploy_containers_latest_base
  stage: deploy_containers
  rules:
    !reference [.on_internal_final]
  dependencies: []
  parallel:
    matrix:
      - IMG_NEW_TAG: 7-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-jmx
      # Full image: for linux we need 7-full tag, for windows we need 7-jmx
      - IMG_NEW_TAG: 7-full
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-full
      # ot-beta image: linux only for now
      - IMG_NEW_TAG: 7-ot-beta-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-ot-beta-jmx
      # fips image: linux only for now
      - IMG_NEW_TAG: 7-fips-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-fips-jmx

deploy_containers_latest-dogstatsd:
  extends: .docker_publish_job_definition
  stage: deploy_containers
  rules:
    !reference [.on_final]
  dependencies: []
  before_script:
    - VERSION="$(dda inv agent.version --url-safe --pipeline-id $PARENT_PIPELINE_ID)" || exit $?
    - export IMG_TAG_REFERENCE=${DSD_REPOSITORY}:${VERSION}
    - export IMG_NEW_TAG=7,latest

deploy_containers_latest-a7-ot:
  extends: .deploy_containers_latest_base
  stage: deploy_containers
  rules:
    !reference [.on_final]
  dependencies: []
  parallel:
    matrix:
      - IMG_NEW_TAG: 7-ot-beta
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-ot-beta
      - IMG_NEW_TAG: 7-ot-beta-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-ot-beta-jmx

deploy_containers_latest-a7-fips:
  extends: .deploy_containers_latest_base
  stage: deploy_containers
  rules:
    !reference [.on_final]
  dependencies: []
  parallel:
    matrix:
      - IMG_NEW_TAG: 7-fips
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-fips
      - IMG_NEW_TAG: 7-fips-jmx
        IMG_TAG_REFERENCE: ${AGENT_REFERENCE}-fips-jmx
