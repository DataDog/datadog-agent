---
# pkg_metrics stage
# Contains jobs which send metrics (package size) about the Linus Agent packages to our backend.

.add_metric_func:
  script:
    - apt-get install -y jq
    # Build up a JSON body in $post_body.
    # To send metrics accumulated in $post_body by add_metric, use the .send_metrics script
    - 'post_body="{\"series\": []}"'
    - currenttime=$(date +%s)
    - |
        add_metric() {
            local metric="${1}"
            shift
            local value="${1}"
            shift

            local tags=[]
            while [ -n "${1}" ]; do
                tags=$(echo $tags | jq -c ". += [\"${1}\"]")
                shift
            done

            post_body=$(echo $post_body | jq -c ".series += [{\"metric\":\"$metric\", \"points\":[[$currenttime, $value]],\"tags\":$tags}]")
        }

.send_metrics:
  script:
    # Send the metrics accumulated by add_metric
    - DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.datadog_api_key --with-decryption --query "Parameter.Value" --out text)
    - 'curl --fail -X POST -H "Content-type: application/json" -d "$post_body" "https://api.datadoghq.com/api/v1/series?api_key=$DD_API_KEY"'


send_pkg_size-a6:
  allow_failure: true
  rules:
    !reference [.on_deploy_a6]
  stage: pkg_metrics
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main"]
  dependencies:
    - agent_deb-x64-a6
    - agent_rpm-x64-a6
    - agent_suse-x64-a6
    - agent_deb-arm64-a6
    - agent_rpm-arm64-a6
  before_script:
    # FIXME: tmp while we uppdate the base image
    - apt-get install -y wget rpm2cpio cpio
    - ls -l $OMNIBUS_PACKAGE_DIR
    - ls -l $OMNIBUS_PACKAGE_DIR_SUSE
  script:
    - source /root/.bashrc && conda activate ddpy3
    - mkdir -p /tmp/deb/amd64-agent
    - mkdir -p /tmp/deb/arm64-agent
    - mkdir -p /tmp/rpm/amd64-agent
    - mkdir -p /tmp/rpm/arm64-agent
    - mkdir -p /tmp/suse/amd64-agent

    # we silence dpkg and cpio output so we don't exceed gitlab log limit

    # debian
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-agent_6*_amd64.deb /tmp/deb/amd64-agent > /dev/null
    - AMD64_DEB_AGENT_SIZE=$(du -sB1 /tmp/deb/amd64-agent | sed 's/\([0-9]\+\).\+/\1/')
    # debian arm64
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-agent_6*_arm64.deb /tmp/deb/arm64-agent > /dev/null
    - ARM64_DEB_AGENT_SIZE=$(du -sB1 /tmp/deb/arm64-agent | sed 's/\([0-9]\+\).\+/\1/')
    # centos
    - cd /tmp/rpm/amd64-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-agent-6.*.x86_64.rpm | cpio -idm > /dev/null
    - AMD64_RPM_AGENT_SIZE=$(du -sB1 /tmp/rpm/amd64-agent | sed 's/\([0-9]\+\).\+/\1/')
    # centos arm64
    - cd /tmp/rpm/arm64-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-agent-6.*.aarch64.rpm | cpio -idm > /dev/null
    - ARM64_RPM_AGENT_SIZE=$(du -sB1 /tmp/rpm/arm64-agent | sed 's/\([0-9]\+\).\+/\1/')

    # suse
    - cd /tmp/suse/amd64-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR_SUSE/datadog-agent-6.*.x86_64.rpm | cpio -idm > /dev/null
    - AMD64_SUSE_AGENT_SIZE=$(du -sB1 /tmp/suse/amd64-agent | sed 's/\([0-9]\+\).\+/\1/')

    - currenttime=$(date +%s)
    - DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.datadog_api_key --with-decryption --query "Parameter.Value" --out text)
    - |
      curl --fail -X POST -H "Content-type: application/json" \
      -d "{\"series\":[
            {\"metric\":\"datadog.agent.package.size\",\"points\":[[$currenttime, $AMD64_DEB_AGENT_SIZE]], \"tags\":[\"os:debian\", \"package:agent\", \"agent:6\", \"bucket_branch:$BUCKET_BRANCH\", \"arch:amd64\"]},
            {\"metric\":\"datadog.agent.package.size\",\"points\":[[$currenttime, $AMD64_RPM_AGENT_SIZE]], \"tags\":[\"os:centos\", \"package:agent\", \"agent:6\", \"bucket_branch:$BUCKET_BRANCH\", \"arch:amd64\"]},
            {\"metric\":\"datadog.agent.package.size\",\"points\":[[$currenttime, $AMD64_SUSE_AGENT_SIZE]], \"tags\":[\"os:suse\", \"package:agent\", \"agent:6\", \"bucket_branch:$BUCKET_BRANCH\", \"arch:amd64\"]},
            {\"metric\":\"datadog.agent.package.size\",\"points\":[[$currenttime, $ARM64_DEB_AGENT_SIZE]], \"tags\":[\"os:debian\", \"package:agent\", \"agent:6\", \"bucket_branch:$BUCKET_BRANCH\", \"arch:arm64\"]},
            {\"metric\":\"datadog.agent.package.size\",\"points\":[[$currenttime, $ARM64_RPM_AGENT_SIZE]], \"tags\":[\"os:centos\", \"package:agent\", \"agent:6\", \"bucket_branch:$BUCKET_BRANCH\", \"arch:arm64\"]}
          ]}" \
      "https://api.datadoghq.com/api/v1/series?api_key=$DD_API_KEY"

send_pkg_size-a7:
  allow_failure: true
  rules:
    !reference [.on_deploy_a7]
  stage: pkg_metrics
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main"]
  dependencies:
    - agent_deb-x64-a7
    - agent_deb-arm64-a7
    - iot_agent_deb-x64
    - iot_agent_deb-arm64
    - dogstatsd_deb-x64
    - dogstatsd_deb-arm64
    - agent_heroku_deb-x64-a7
    - agent_rpm-arm64-a7
    - agent_rpm-x64-a7
    - iot_agent_rpm-x64
    - iot_agent_rpm-arm64
    - dogstatsd_rpm-x64
    - agent_suse-x64-a7
    - dogstatsd_suse-x64
    - iot_agent_suse-x64
  before_script:
    # FIXME: tmp while we uppdate the base image
    - apt-get install -y wget rpm2cpio cpio
    - ls -l $OMNIBUS_PACKAGE_DIR
    - ls -l $OMNIBUS_PACKAGE_DIR_SUSE
  script:
    - !reference [.add_metric_func, script]

    - source /root/.bashrc && conda activate ddpy3
    - mkdir -p /tmp/amd64-deb/agent /tmp/amd64-deb/dogstatsd /tmp/amd64-deb/iot-agent /tmp/amd64-deb/heroku-agent
    - mkdir -p /tmp/arm64-deb/agent /tmp/arm64-deb/dogstatsd /tmp/arm64-deb/iot-agent
    - mkdir -p /tmp/amd64-rpm/agent /tmp/amd64-rpm/dogstatsd /tmp/amd64-rpm/iot-agent
    - mkdir -p /tmp/arm64-rpm/agent /tmp/arm64-rpm/iot-agent
    - mkdir -p /tmp/amd64-suse/agent /tmp/amd64-suse/dogstatsd /tmp/amd64-suse/iot-agent

    - |
        add_metrics() {
            local base="${1}"
            local os="${2}"
            local arch="${3}"

            # record the total uncompressed size of each package
            add_metric datadog.agent.package.size $(du -sB1 ${base}/agent | sed 's/\([0-9]\+\).\+/\1/') os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            if [[ "$arch" == "amd64" || "$os" == "debian" ]]; then add_metric datadog.agent.package.size $(du -sB1 ${base}/dogstatsd | sed 's/\([0-9]\+\).\+/\1/') os:${os} package:dogstatsd agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}; fi
            add_metric datadog.agent.package.size $(du -sB1 ${base}/iot-agent | sed 's/\([0-9]\+\).\+/\1/') os:${os} package:iot-agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            if [[ "$os" == "debian" && "$arch" == "amd64" ]]; then add_metric datadog.agent.package.size $(du -sB1 ${base}/heroku-agent | sed 's/\([0-9]\+\).\+/\1/') os:${os} package:heroku-agent agent:7 bucket_branch:$BUCKET_BRANCH arch:amd64; fi

            # record the size of each of the important binaries in each package
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/agent/opt/datadog-agent/bin/agent/agent | sed 's/\([0-9]\+\).\+/\1/') bin:agent os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/agent/opt/datadog-agent/embedded/bin/trace-agent | sed 's/\([0-9]\+\).\+/\1/') bin:trace-agent os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/agent/opt/datadog-agent/embedded/bin/security-agent | sed 's/\([0-9]\+\).\+/\1/') bin:security-agent os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/agent/opt/datadog-agent/embedded/bin/process-agent | sed 's/\([0-9]\+\).\+/\1/') bin:process-agent os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/agent/opt/datadog-agent/embedded/bin/system-probe | sed 's/\([0-9]\+\).\+/\1/') bin:system-probe os:${os} package:agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
            if [[ "$arch" == "amd64" || "$os" == "debian" ]]; then add_metric datadog.agent.binary.size $(du -sB1 ${base}/dogstatsd/opt/datadog-dogstatsd/bin/dogstatsd | sed 's/\([0-9]\+\).\+/\1/') bin:dogstatsd os:${os} package:dogstatsd agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}; fi 
            add_metric datadog.agent.binary.size $(du -sB1 ${base}/iot-agent/opt/datadog-agent/bin/agent/agent | sed 's/\([0-9]\+\).\+/\1/') bin:agent os:${os} package:iot-agent agent:7 bucket_branch:$BUCKET_BRANCH arch:${arch}
        }

    # We silence dpkg and cpio output so we don't exceed gitlab log limit

    # debian
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-agent_7*_amd64.deb /tmp/amd64-deb/agent > /dev/null
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-iot-agent_7*_amd64.deb /tmp/amd64-deb/iot-agent > /dev/null
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-dogstatsd_7*_amd64.deb /tmp/amd64-deb/dogstatsd > /dev/null
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-heroku-agent_7*_amd64.deb /tmp/amd64-deb/heroku-agent > /dev/null
    - add_metrics /tmp/amd64-deb debian amd64

    # debian arm64
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-agent_7*_arm64.deb /tmp/arm64-deb/agent > /dev/null
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-iot-agent_7*_arm64.deb /tmp/arm64-deb/iot-agent > /dev/null
    - dpkg -x $OMNIBUS_PACKAGE_DIR/datadog-dogstatsd_7*_arm64.deb /tmp/arm64-deb/dogstatsd > /dev/null
    - add_metrics /tmp/arm64-deb debian arm64

    # centos
    - cd /tmp/amd64-rpm/agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-agent-7.*.x86_64.rpm | cpio -idm > /dev/null
    - cd /tmp/amd64-rpm/dogstatsd && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-dogstatsd-7.*.x86_64.rpm | cpio -idm > /dev/null
    - cd /tmp/amd64-rpm/iot-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-iot-agent-7.*.x86_64.rpm | cpio -idm > /dev/null
    - add_metrics /tmp/amd64-rpm centos amd64

    # centos arm64
    - cd /tmp/arm64-rpm/agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-agent-7.*.aarch64.rpm | cpio -idm > /dev/null
    - cd /tmp/arm64-rpm/iot-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR/datadog-iot-agent-7.*.aarch64.rpm | cpio -idm > /dev/null
    - add_metrics /tmp/arm64-rpm centos arm64

    # suse
    - cd /tmp/amd64-suse/agent && rpm2cpio $OMNIBUS_PACKAGE_DIR_SUSE/datadog-agent-7.*.x86_64.rpm | cpio -idm > /dev/null
    - cd /tmp/amd64-suse/dogstatsd && rpm2cpio $OMNIBUS_PACKAGE_DIR_SUSE/datadog-dogstatsd-7.*.x86_64.rpm | cpio -idm > /dev/null
    - cd /tmp/amd64-suse/iot-agent && rpm2cpio $OMNIBUS_PACKAGE_DIR_SUSE/datadog-iot-agent-7.*.x86_64.rpm | cpio -idm > /dev/null
    - add_metrics /tmp/amd64-suse suse amd64

    # Send package and binary size metrics
    - !reference [.send_metrics, script]

.check_pkg_size:
  stage: pkg_metrics
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:main"]
  script:
    - !reference [.add_metric_func, script]

    - ls -l $OMNIBUS_PACKAGE_DIR
    - if [[ "${ARCH}" == "amd64" ]]; then ls -l $OMNIBUS_PACKAGE_DIR_SUSE; fi
    - source /root/.bashrc && conda activate ddpy3
    - export failures=0
    - export last_stable=$(inv release.get-release-json-value "last_stable::${MAJOR_VERSION}")
    # Get stable packages from S3 buckets, send new package sizes & compare stable and new package sizes
    # The loop assumes that all flavors start with "da", which is currently the case
    # We want to run all package size comparisons before failing, so we set +e while doing the comparisons
    # to get the error codes without exiting the shell.
    - |
        if [[ "${ARCH}" == "amd64" ]]; then ARCH_RPM_EXT="x86_64"; else ARCH_RPM_EXT="aarch64"; fi
        for flavor in ${FLAVORS}; do
            
            if [[ "${ARCH}" == "amd64" && "$flavor" != "datadog-heroku-agent" ]]; then
              mkdir -p "/tmp/stable/${flavor}/suse"
              curl -sSL "https://s3.amazonaws.com/yum.datadoghq.com/suse/stable/${MAJOR_VERSION}/${ARCH_RPM_EXT}/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm" -o "/tmp/stable/${flavor}/suse/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm"
              add_metric datadog.agent.compressed_package.size $(du -sB1 ${OMNIBUS_PACKAGE_DIR_SUSE}/${flavor}-${MAJOR_VERSION}.*.${ARCH_RPM_EXT}.rpm | cut -f -1) os:suse package:${flavor} agent:${MAJOR_VERSION} git_ref:${CI_COMMIT_REF_SLUG} bucket_branch:${BUCKET_BRANCH} arch:${ARCH}
              set +e
              inv package.compare-size --package-type "${flavor} suse rpm" --last-stable "${last_stable}" --threshold "${max_sizes[${flavor}]}" --new-package "$OMNIBUS_PACKAGE_DIR_SUSE/${flavor}-${MAJOR_VERSION}.*.${ARCH_RPM_EXT}.rpm" --stable-package "/tmp/stable/${flavor}/suse/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm"
              failures=$((${failures}+$?))
              set -e
            fi

            mkdir -p "/tmp/stable/${flavor}" 

            curl -sSL "https://s3.amazonaws.com/apt.datadoghq.com/pool/d/da/${flavor}_${last_stable}-1_${ARCH}.deb" -o "/tmp/stable/${flavor}/${flavor}_${last_stable}-1_${ARCH}.deb"

            add_metric datadog.agent.compressed_package.size $(du -sB1 ${OMNIBUS_PACKAGE_DIR}/${flavor}_${MAJOR_VERSION}*_${ARCH}.deb | cut -f -1) os:debian package:${flavor} agent:${MAJOR_VERSION} git_ref:${CI_COMMIT_REF_SLUG} bucket_branch:${BUCKET_BRANCH} arch:${ARCH}

            set +e
            inv package.compare-size --package-type "${flavor} deb" --last-stable "${last_stable}" --threshold "${max_sizes[${flavor}]}" --new-package "$OMNIBUS_PACKAGE_DIR/${flavor}_${MAJOR_VERSION}*_${ARCH}.deb" --stable-package "/tmp/stable/${flavor}/${flavor}_${last_stable}-1_${ARCH}.deb"
            failures=$((${failures}+$?))
            set -e

            if [[ "$flavor" != "datadog-heroku-agent" && ( "${ARCH}" == "amd64" || "$flavor" != "datadog-dogstatsd") ]]; then
              # We don't build RPM packages for the heroku flavor
              curl -sSL "https://s3.amazonaws.com/yum.datadoghq.com/stable/${MAJOR_VERSION}/${ARCH_RPM_EXT}/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm" -o "/tmp/stable/${flavor}/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm"
              add_metric datadog.agent.compressed_package.size $(du -sB1 ${OMNIBUS_PACKAGE_DIR}/${flavor}-${MAJOR_VERSION}.*.${ARCH_RPM_EXT}.rpm | cut -f -1) os:centos package:${flavor} agent:${MAJOR_VERSION} git_ref:${CI_COMMIT_REF_SLUG} bucket_branch:${BUCKET_BRANCH} arch:${ARCH}
              set +e
              inv package.compare-size --package-type "${flavor} rpm" --last-stable "${last_stable}" --threshold "${max_sizes[${flavor}]}" --new-package "$OMNIBUS_PACKAGE_DIR/${flavor}-${MAJOR_VERSION}.*.${ARCH_RPM_EXT}.rpm" --stable-package "/tmp/stable/${flavor}/${flavor}-${last_stable}-1.${ARCH_RPM_EXT}.rpm"
              failures=$((${failures}+$?))
              set -e
            fi
        done

    # Send package size metrics
    - !reference [.send_metrics, script]

    # Make the job fail if at least one package is above threshold
    - if [ "${failures}" -ne "0" ]; then false; fi

check_pkg_size-amd64-a6:
  extends: .check_pkg_size
  rules:
    !reference [.on_a6]
  needs:
    - agent_deb-x64-a6
    - agent_rpm-x64-a6
    - agent_suse-x64-a6
  variables:
    MAJOR_VERSION: 6
    FLAVORS: "datadog-agent"
    ARCH: "amd64"
  before_script:
    # FIXME: ["datadog-agent"]="25000000" should be replaced by "15000000"
    # "25000000" is needed as of now because of a large bump in size in system-probe in 7.35
    - |
        declare -Ar max_sizes=(
            ["datadog-agent"]="50000000"
        )

check_pkg_size-arm64-a6:
  extends: .check_pkg_size
  rules:
    !reference [.on_all_builds_a6]
  needs:
    - agent_deb-arm64-a6
    - agent_rpm-arm64-a6
  variables:
    MAJOR_VERSION: 6
    FLAVORS: "datadog-agent"
    ARCH: "arm64"
  before_script:
    # FIXME: ["datadog-agent"]="25000000" should be replaced by "15000000"
    # "25000000" is needed as of now because of a large bump in size in system-probe in 7.35
    - |
        declare -Ar max_sizes=(
            ["datadog-agent"]="50000000"
        )

check_pkg_size-amd64-a7:
  extends: .check_pkg_size
  rules:
    !reference [.on_a7]
  needs:
    - agent_deb-x64-a7
    - iot_agent_deb-x64
    - dogstatsd_deb-x64
    - agent_heroku_deb-x64-a7
    - agent_rpm-x64-a7
    - iot_agent_rpm-x64
    - dogstatsd_rpm-x64
    - agent_suse-x64-a7
    - dogstatsd_suse-x64
    - iot_agent_suse-x64
  variables:
    MAJOR_VERSION: 7
    FLAVORS: "datadog-agent datadog-iot-agent datadog-dogstatsd datadog-heroku-agent"
    ARCH: "amd64"
  before_script:
    # FIXME: ["datadog-agent"]="25000000" and ["datadog-heroku-agent"]="25000000" should
    # be replaced by "15000000"
    # "25000000" is needed as of now because of a large bump in size in system-probe in 7.35
    # If this happens often we could exclude system-probe from the heroku build, it's not used.
    - |
        declare -Ar max_sizes=(
            ["datadog-agent"]="50000000"
            ["datadog-iot-agent"]="10000000"
            ["datadog-dogstatsd"]="10000000"
            ["datadog-heroku-agent"]="50000000"
        )

check_pkg_size-arm64-a7:
  extends: .check_pkg_size
  rules:
    !reference [.on_all_builds_a7]
  needs:
    - agent_deb-arm64-a7
    - iot_agent_deb-arm64
    - dogstatsd_deb-arm64
    - agent_rpm-arm64-a7
    - iot_agent_rpm-arm64
  variables:
    MAJOR_VERSION: 7
    FLAVORS: "datadog-agent datadog-iot-agent datadog-dogstatsd"
    ARCH: "arm64"
  before_script:
    # FIXME: ["datadog-agent"]="25000000" and ["datadog-heroku-agent"]="25000000" should
    # be replaced by "15000000"
    # "25000000" is needed as of now because of a large bump in size in system-probe in 7.35
    # If this happens often we could exclude system-probe from the heroku build, it's not used.
    - |
        declare -Ar max_sizes=(
            ["datadog-agent"]="50000000"
            ["datadog-iot-agent"]="10000000"
            ["datadog-dogstatsd"]="10000000"
        )
