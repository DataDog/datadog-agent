---
# deps_build stage
# Contains jobs which build various libraries needed for system-probe.

.build_clang_common:
  rules:
    !reference [.manual]
  stage: deps_build
  script:
    # use tmpdir to prevent git remote capture by clang build
    - mkdir /tmp/clangbuild && cd /tmp/clangbuild
    - wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/clang-11.0.1.src.tar.xz -O clang.src.tar.xz
    - wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/llvm-11.0.1.src.tar.xz -O llvm.src.tar.xz
    - mkdir clang && tar xf clang.src.tar.xz --strip-components=1 --no-same-owner -C clang
    - mkdir llvm && tar xf llvm.src.tar.xz --strip-components=1 --no-same-owner -C llvm
    - mkdir build && cd build
    - |
      cmake -DLLVM_ENABLE_PROJECTS=clang \
      -DLLVM_TARGETS_TO_BUILD="BPF" \
      -DCMAKE_INSTALL_PREFIX=$DATADOG_AGENT_EMBEDDED_PATH \
      -G "Ninja" \
      -DCMAKE_BUILD_TYPE=MinSizeRel \
      -DLLVM_BUILD_TOOLS=OFF \
      -DLLVM_ENABLE_TERMINFO=OFF \
      -DLLVM_INCLUDE_EXAMPLES=OFF \
      -DLLVM_INCLUDE_TESTS=OFF \
      -DLLVM_INCLUDE_BENCHMARKS=OFF \
      -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
      -DLLVM_ENABLE_BINDINGS=OFF \
      -DLLVM_PARALLEL_COMPILE_JOBS=4 \
      -DLLVM_PARALLEL_LINK_JOBS=4 \
      ../llvm
    - cmake --build . --target install
    - cd $DATADOG_AGENT_EMBEDDED_PATH
    - rm -rf bin share libexec lib/clang lib/cmake lib/*.so*
    - mkdir -p $CI_PROJECT_DIR/.tmp
    - tar cvaf $CI_PROJECT_DIR/.tmp/clang-$ARCH-11.0.1.tar.xz .
    - $S3_CP_CMD $CI_PROJECT_DIR/.tmp/clang-$ARCH-11.0.1.tar.xz $S3_PERMANENT_ARTIFACTS_URI/clang-$ARCH-11.0.1.tar.xz
  timeout: 2h 00m
  artifacts:
    expire_in: 2 weeks
    paths:
      - $CI_PROJECT_DIR/.tmp/clang-$ARCH-11.0.1.tar.xz

build_clang_x64:
  extends: .build_clang_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["runner:main"]
  variables:
    ARCH: amd64

build_clang_arm64:
  extends: .build_clang_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["runner:docker-arm", "platform:arm64"]
  variables:
    ARCH: arm64

.build_omnibus-nikos_common:
  stage: deps_build
  rules:
    !reference [.manual]
  script:
    - git clone https://github.com/DataDog/omnibus-nikos.git /tmp/omnibus-nikos
    - cd /tmp/omnibus-nikos
    - /bin/bash -l -c "bundle install"
    - /bin/bash -l -c "export NIKOS_INSTALL_DIR=$NIKOS_INSTALL_DIR && bundle exec omnibus build nikos"
    - cd $NIKOS_EMBEDDED_PATH
    - cp lib/glib-2.0/include/glibconfig.h include
    - tar czf nikos.tar.gz *
    - $S3_CP_CMD nikos.tar.gz $S3_PERMANENT_ARTIFACTS_URI/nikos-$ARCH.tar.gz

build_omnibus-nikos_x64:
  extends: .build_omnibus-nikos_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/omnibus-nikos_x64:$DATADOG_AGENT_NIKOS_BUILDIMAGES
  tags: ["runner:main"]
  variables:
    ARCH: amd64
  