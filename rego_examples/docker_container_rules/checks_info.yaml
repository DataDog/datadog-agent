schema:
  version: 1.0.0
name: CIS Docker Generic
framework: cis-docker
version: 1.2.0
rules:
  - id: cis-docker-1.2.0-2.4
    description: '[CIS Docker] Ensure insecure registries are not used'
    scope:
      - docker
    resources:
      - docker:
          kind: info
        condition: docker.template("{{- $.RegistryConfig.InsecureRegistryCIDRs | join \",\" -}}") == ""
  - id: cis-docker-1.2.0.2.4-rego
    description: '[CIS Docker] Ensure insecure registries are not used'
    scope:
      - docker
    inputs:
      - tag: infos
        docker:
          kind: info
    module: |
      package docker_info

      import data.datadog as dd

      findings[f] {
        i := input.infos[_]
        valid_info(i)
        f := dd.passed_finding(
          "docker_daemon",
          dd.docker_daemon_resource_id,
          {}
        )
      }

      findings[f] {
        i := input.infos[_]
        not valid_info(i)
        f := dd.failing_finding(
          "docker_daemon",
          dd.docker_daemon_resource_id,
          {}
        )
      }

      valid_info(i) {
        count(i.inspect.RegistryConfig.InsecureRegistryCIDRs) == 0
      }
    findings: data.docker_info.findings

