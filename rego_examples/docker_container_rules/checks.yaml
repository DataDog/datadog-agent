schema:
  version: 1.0.0
name: CIS Docker Generic
framework: cis-docker
version: 1.2.0
rules:
  - id: cis-docker-1.2.0-5.30
    description: '[CIS Docker] Ensure that the host''s user namespaces are not shared'
    scope:
      - docker
    resources:
      - docker:
          kind: container
        condition: docker.template("{{- $.HostConfig.UsernsMode -}}") != "host"
regos:
  - id: cis-docker-1.2.0-5.30
    description: '[CIS Docker] Ensure that the host''s user namespaces are not shared'
    scope:
      - docker
    inputs:
      - tag: containers
        docker:
          kind: container
    module: |
      package demo

      import data.datadog as dd

      findings[f] {
        c := input.containers[_]
        valid_container[c]
        f := dd.passed_finding(
          "docker_container",
          dd.docker_container_resource_id(c),
          dd.docker_container_data(c)
        )
      }

      findings[f] {
        c := input.containers[_]
        not valid_container[c]
        f := dd.failing_finding(
          "docker_container",
          dd.docker_container_resource_id(c),
          dd.docker_container_data(c)
        )
      }

      valid_container[c] {
        c := input.containers[_]
        c.inspect.HostConfig.UsernsMode != "host"
      }

    findings: data.demo.findings
