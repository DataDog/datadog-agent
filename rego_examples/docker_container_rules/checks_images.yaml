schema:
  version: 1.0.0
name: CIS Docker Generic
framework: cis-docker
version: 1.2.0
rules:
  - id: cis-docker-1.2.0-4.6
    description: '[CIS Docker] Ensure that HEALTHCHECK instructions have been added to container images'
    scope:
      - docker
    resources:
      - docker:
          kind: image
        condition: docker.template("{{- $.Config.Healthcheck.Test -}}") != ""
regos:
  - id: cis-docker-1.2.0-4.6
    description: '[CIS Docker] Ensure that HEALTHCHECK instructions have been added to container images'
    scope:
      - docker
    inputs:
      - tag: images
        docker:
          kind: image
    module: |
      package demo

      import data.datadog as dd

      findings[f] {
        image := input.images[_]
        valid_image[image]
        f := dd.passed_finding(
          "docker_image",
          dd.docker_image_resource_id(image),
          dd.docker_image_data(image)
        )
      }

      findings[f] {
        image := input.images[_]
        not valid_image[image]
        f := dd.failing_finding(
          "docker_image",
          dd.docker_image_resource_id(image),
          dd.docker_image_data(image)
        )
      }

      valid_image[image] {
        image := input.images[_]
        image.inspect.Config.Healthcheck.Test != ""
      }
    findings: data.demo.findings
