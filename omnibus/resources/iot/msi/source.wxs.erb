<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
  <!-- This is how we include wxi files -->
  <?include "parameters.wxi" ?>

  <!--
    Id="*" is to enable upgrading. * means that the product ID will be autogenerated on each build.
    Name is made of localized product name and version number.
  -->
  <?if $(var.Platform) = x64 ?>
    <?define Win64 = "yes" ?>
    <?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
  <?else ?>
    <?define Win64 = "no" ?>
    <?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
  <?endif ?>

  <Product Id="*"
           Name="!(loc.ProductName)"
           Language="1033"
           Version="$(var.VersionNumber)"
           Manufacturer="!(loc.ManufacturerName)"
           UpgradeCode="$(var.UpgradeCode)"
           Codepage="1252">

    <!--
      Define the minimum supported installer version (2.0).
      The install should be done for the whole machine not just the current user
    -->
    <Package Id="*"
             Keywords="Installer"
             Comments="!(loc.InstallerComment)"
             Description="!(loc.ProductName) $(var.DisplayVersionNumber)"
             Manufacturer="!(loc.ManufacturerName)"
             InstallScope="perMachine"
             InstallerVersion="400"
             Languages="1033"
             InstallPrivileges="elevated"
             Compressed="yes" />

    <!-- This removes entirely the previous version -->
    <Upgrade Id="$(var.UpgradeCode)">
        <UpgradeVersion OnlyDetect='no'
                        Property='PREVIOUSFOUND'
                        Minimum='1.0.0' IncludeMinimum='yes'
                        Maximum="$(var.VersionNumber)" IncludeMaximum='yes'/>
    </Upgrade>

    <!-- This allows downgrades, and same-version reinstalls.  Otherwise,
    same version gets installed "side by side" -->
    <MajorUpgrade
      AllowDowngrades="no"
      AllowSameVersionUpgrades="yes"
      DowngradeErrorMessage="Automatic downgrades are not supported.  Uninstall the current version, and then reinstall the desired version."
      Schedule="afterInstallInitialize" />


    <!-- Close application when uninstalling -->
    <util:CloseApplication Id="CloseTrayApp"
                          CloseMessage="yes"
                          EndSessionMessage="yes"
                          Target="ddtray.exe"
                          ElevatedCloseMessage="yes"
                          TerminateProcess="1"
                          Timeout="1"
                          RebootPrompt="no"/>

    <!-- Set property to always log -->
    <Property Id="MsiLogging" Value="iwearucmop!" />

    <!-- No need to restart Windows after the installation -->
    <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" />

    <Property Id="DDAGENTUSER_NAME" />
    <Property Id="DDAGENTUSER_PASSWORD" Hidden="yes" />
    <Property Id="APIKEY" Hidden="yes" />
    <Property Id="SITE" Value="datadoghq.com" />
    <Property Id="FinalizeInstall" Hidden="yes" />
     <PropertyRef Id="WIX_ACCOUNT_ADMINISTRATORS" />
     <PropertyRef Id="WIX_ACCOUNT_LOCALSYSTEM" />
     <PropertyRef Id="WIX_ACCOUNT_USERS" />
    <Media Id="1" Cabinet="agent.cab" EmbedCab="yes" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.PlatformProgramFilesFolder)">
        <Directory Id="APPLICATIONROOTDIRECTORY" Name="Datadog">
          <Directory Id="PROJECTLOCATION" Name="Datadog Agent"/>
        </Directory>
      </Directory>
      <Directory Id="CommonAppDataFolder" SourceName="CommonAppData">
        <Directory Id="APPLICATIONDATADIRECTORY" Name="Datadog">
          <Component Id="conffolder" Guid="1ce4bf53-b985-4718-b278-44a31b9d2792">
            <CreateFolder>
                <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes" ChangePermission="yes"/>
                <Permission User="[WIX_ACCOUNT_LOCALSYSTEM]" GenericAll="yes" ChangePermission="yes"/>
                <Permission User="[WIX_ACCOUNT_USERS]" GenericAll="no" ChangePermission="yes"/>
            </CreateFolder>
          </Component>
        </Directory>
      </Directory>
      <Directory Id="ProgramMenuFolder">
        <Directory Id="ApplicationProgramsFolder" Name="Datadog"/>
      </Directory>
    </Directory>

    <CustomAction
        Id="LaunchApp"
        Directory="AGENT"
        Execute="immediate"
        Return="asyncNoWait"
        ExeCommand="&quot;[AGENT]ddtray.exe&quot; &quot;-launch-gui&quot;" />


    <!-- Delete application when uninstalling -->
    <!--
      RemoveFolderEx requires that we "remember" the path for uninstall.
      Read the path value and set the PROJECTLOCATION property with the value.
    -->
    <Property Id="PROJECTLOCATION" Secure="yes">
      <RegistrySearch Key="SOFTWARE\Datadog\Datadog Agent"
                      Root="HKLM"
                      Type="raw"
                      Id="APPLICATIONROOTDIRECTORY_REGSEARCH"
                      Name="InstallPath" />
    </Property>

    <DirectoryRef Id="PROJECTLOCATION">
      <Component Id="CleanupMainApplicationFolder" Guid="ba87be61-3add-46fc-8bb4-cabdf33498eb">
        <!-- We need to use APPLICATIONROOTDIRECTORY variable here or RemoveFolderEx
             will not remove on "uninstall". -->
        <RegistryValue Root="HKLM"
                       Key="SOFTWARE\Datadog\Datadog Agent"
                       Name="InstallPath"
                       Type="string"
                       Value="[PROJECTLOCATION]"/>
        <RegistryValue Root="HKLM"
                       Key="SOFTWARE\Datadog\Datadog Agent"
                       Name="ConfigRoot"
                       Type="string"
                       Value="[APPLICATIONDATADIRECTORY]"/>
        <util:RemoveFolderEx On="uninstall" Property="PROJECTLOCATION"/>
      </Component>
      <!-- Register variables that will be used by the agent at startup -->
      <Component Id="RegisterConfVariables" Guid="e0c58189-7787-4b29-a1e2-60544e6cf98c">
        <RegistryKey Root="HKLM"
                     Key="SOFTWARE\Datadog\Datadog Agent"
                     >


          <RegistryValue Name="api_key"
                         Type="string"
                         Value="[APIKEY]">
          </RegistryValue>
          <RegistryValue Name="tags"
                         Type="string"
                         Value="[TAGS]" >
          </RegistryValue>
          <RegistryValue Name="hostname"
                         Type="string"
                         Value="[HOSTNAME]" >
                       </RegistryValue>
           <RegistryValue Name="proxy_host"
                         Type="string"
                         Value="[PROXY_HOST]">
                       </RegistryValue>
          <RegistryValue Name="proxy_port"
                         Type="string"
                         Value="[PROXY_PORT]" >
                       </RegistryValue>
          <RegistryValue Name="proxy_user"
                         Type="string"
                         Value="[PROXY_USER]">
                       </RegistryValue>
          <RegistryValue Name="proxy_password"
                         Type="string"
                         Value="[PROXY_PASSWORD]" >
                       </RegistryValue>
          <RegistryValue Name="logs_enabled"
                         Type="string"
                         Value="[LOGS_ENABLED]">
                       </RegistryValue>
          <RegistryValue Name="apm_enabled"
                         Type="string"
                         Value="[APM_ENABLED]" >
                       </RegistryValue>
          <RegistryValue Name="process_enabled"
                         Type="string"
                         Value="[PROCESS_ENABLED]">
                         </RegistryValue>
          <RegistryValue Name="cmd_port"
                         Type="string"
                         Value="[CMD_PORT]" />
          <RegistryValue Name="site"
                         Type="string"
                         Value="[SITE]" />
          <RegistryValue Name="dd_url"
                         Type="string"
                         Value="[DD_URL]" />
          <RegistryValue Name="logs_dd_url"
                         Type="string"
                         Value="[LOGS_DD_URL]" />
          <RegistryValue Name="process_dd_url"
                         Type="string"
                         Value="[PROCESS_DD_URL]" />
          <RegistryValue Name="trace_dd_url"
                         Type="string"
                         Value="[TRACE_DD_URL]" />
          <RegistryValue Name="py_version"
                         Type="string"
                         Value="[PYVER]" />
          <RegistryValue Name="hostname_fqdn"
                         Type="string"
                         Value="[HOSTNAME_FQDN_ENABLED]" />

        </RegistryKey>

      </Component>
    </DirectoryRef>

    <!-- Let's ship our dist folder with the service and gui executables -->
    <DirectoryRef Id="PROJECTLOCATION">
      <!-- put the agent in the embedded folder so that it can find the python DLLS -->
      <Directory Id="BIN" Name="bin">
        <!-- Windows service declaration for Datadog Agent -->
        <Component Id="DATADOGAGENTSERVICE" Guid="3d4b4eed-9b6d-48ef-b6e7-a1b28365642b">
          <File Id="agent.exe"
                Name="agent.exe"
                Vital="yes"
                KeyPath="yes"
                DiskId="1"
                Source="$(var.BinFiles)/agent.exe"/>
          
          
          <!-- The "Name" field must match the argument to eventlog.Open() -->
          <util:EventSource Log="Application" Name="DatadogAgent"
                EventMessageFile="[DIST]agent.exe"
                SupportsErrors="yes"
                SupportsInformationals="yes"
                SupportsWarnings="yes"/>



        </Component>
        
        
        <Directory Id="AGENT" Name="agent">
          <?if $(var.Platform) = x64 ?>
            <!-- Windows service declaration for APM agent -->
            <Component Id="DATADOGAPMSERVICE" Guid="5fd258d2-b982-4163-a4c7-ff3c75e8b9ef">
                <File Id="trace_agent.exe"
                    Name="trace-agent.exe"
                    Vital="yes"
                    KeyPath="yes"
                    DiskId="1"
                    Source="$(var.BinFiles)/trace-agent.exe"/>
                <!-- The "Name" field must match the argument to eventlog.Open() -->
                <util:EventSource Log="Application" Name="datadog-trace-agent"
                        EventMessageFile="[AGENT]trace-agent.exe"
                        SupportsErrors="yes"
                        SupportsInformationals="yes"
                        SupportsWarnings="yes"/>
            </Component>
            <!-- Windows service declaration for Process agent -->
            <Component Id="DATADOGPROCESSSERVICE" Guid="0e137027-dff0-42a3-aa8b-bcf1b06a3f32">
                <File Id="process_agent.exe"
                    Name="process-agent.exe"
                    Vital="yes"
                    KeyPath="yes"
                    DiskId="1"
                    Source="$(var.BinFiles)/process-agent.exe"/>
                <!-- The "Name" field must match the argument to eventlog.Open() -->
                <util:EventSource Log="Application" Name="datadog-process-agent"
                        EventMessageFile="[AGENT]process-agent.exe"
                        SupportsErrors="yes"
                        SupportsInformationals="yes"
                        SupportsWarnings="yes"/>
            </Component>
          <?endif ?>
        </Directory>
      </Directory>
    </DirectoryRef>

    <!-- Datadog Agent specific directory definitions -->
    <DirectoryRef Id="ApplicationProgramsFolder">
      <Component Id="ApplicationShortcut" Guid="fdd3b0b6-9712-4e28-ad39-66d091221e30">
        <Shortcut Id="ApplicationStartMenuShortcut"
                  Name="Datadog Agent Manager"
                  Description="Manage your Datadog Agent"
                  Target="[AGENT]ddtray.exe"
                  Arguments= "&quot;-launch-gui&quot;"
                  WorkingDirectory="AGENT"/>

        <RemoveFolder Id="ApplicationProgramsFolder" On="uninstall"/>
        <RegistryValue Root="HKCU"
                       Key="Software\Microsoft\Datadog"
                       Name="installed"
                       Type="integer"
                       Value="1"
                       KeyPath="yes"/>
      </Component>
    </DirectoryRef>

    <DirectoryRef Id="APPLICATIONDATADIRECTORY">
      <Component Id="datadog.yaml.example"
                 Guid="3e2e773a-18b2-4a63-be64-8faed16bfb2f"
                 NeverOverwrite="yes"
                 Permanent="yes">
        <File Id="datadog.yaml.example"
            Name="datadog.yaml"
            Source="$(var.EtcFiles)\datadog.yaml.example"/>
      </Component>
      

      <Directory Id="checks.d" Name="checks.d">
        <Component Id="checks.d"
                   Guid="e1112a2c-bbf0-4eba-bdda-4ecdf4479a80"
                   Location="either">
          <CreateFolder/>
        </Component>
      </Directory>

      <!-- Directory to store the registry that keep track of tailed file offsets -->
      <Directory Id="REGISTRYDIRECTORY" Name="run">
        <Component Id="REGISTRYDIRECTORY"
                   Guid="ddd710d7-60c3-4d2e-9f9b-6979d9b942cd"
                   Permanent="yes"
                   Location="either"
                   NeverOverwrite="yes">
          <CreateFolder/>
        </Component>
      </Directory>

      <Directory Id="EXAMPLECONFSLOCATION" Name= "conf.d">
        <Component Id="conf.d"
                   Guid="61d0e8c8-1411-41a3-a8e8-4aacff57b43e"
                   Permanent="yes"
                   Location="either"
                   NeverOverwrite="yes">
          <CreateFolder>
              <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes" ChangePermission="yes"/>
              <Permission User="[WIX_ACCOUNT_LOCALSYSTEM]" GenericAll="yes" ChangePermission="yes"/>
              <Permission User="[WIX_ACCOUNT_USERS]" GenericAll="no" ChangePermission="yes"/>
          </CreateFolder>
        </Component>
      </Directory>

      <Directory Id="logs" Name="logs">
        <Component Id="logs"
                   Guid="60bfe65b-aef7-40b9-b129-90e54e2339c3"
                   Permanent="yes"
                   Location="either"
                   NeverOverwrite="yes">
            <CreateFolder>
                <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes" ChangePermission="yes"/>
                <Permission User="[WIX_ACCOUNT_LOCALSYSTEM]" GenericAll="yes" ChangePermission="yes"/>
                <Permission User="[WIX_ACCOUNT_USERS]" GenericAll="no" ChangePermission="yes"/>
            </CreateFolder>
     
        </Component>
      </Directory>
    </DirectoryRef>

    
    <InstallExecuteSequence>
      <Custom Action='WixCloseApplications' Before='RemoveFiles'> </Custom>

      <!-- go ahead and always stop the services; if they're not installed (new install) it won't have any impact -->

      <!-- always stop the services, regardless of what's going on -->
      <Custom Action='StopDDServices' After='StopServices'> </Custom>

      <!-- only run the FinalizeInstall action on INSTALL (for now) Note this
           is from the perspective of the installer being run; on upgrade the 
           installer is called twice; the existing (previously installed) 
           installer is called with _UPGRADE, and then the new installer  
           is called with _INSTALL -->
      <Custom Action='SetFinalizeProperty' Before='FinalizeInstall'> <![CDATA[Installed="" ]]> </Custom>
      <Custom Action='FinalizeInstall' After='InstallServices'>      <![CDATA[Installed="" ]]> </Custom>

      <!-- Same deal here -->
      <Custom Action='StartDDServices' After='FinalizeInstall'>  <![CDATA[REMOVE<>"ALL" ]]></Custom>
      
      <!-- only do the uninstall (which removes the user state and file perms) 
           on a full uninstall -->
      <Custom Action='SetUninstallProperty' Before='DoUninstall'> <![CDATA[REMOVE="ALL" AND UPGRADINGPRODUCTCODE=""]]> </Custom>
      <Custom Action='DoUninstall' Before='RemoveRegistryValues'>      <![CDATA[REMOVE="ALL" AND UPGRADINGPRODUCTCODE=""]]> </Custom>

      <Custom Action='DoRollback' Before='FinalizeInstall'>       <![CDATA[REMOVE<>"ALL" OR UPGRADINGPRODUCTCODE<>""]]> </Custom>
    </InstallExecuteSequence>

    <!-- Set the components defined in our fragment files that will be used for our feature  -->
    <Feature Id="MainApplication" Title="Datadog Agent" Level="1" ConfigurableDirectory="APPLICATIONROOTDIRECTORY">
      <ComponentRef Id="conffolder" />
      <ComponentGroupRef Id="ProjectDir" />
      <ComponentRef Id="datadog.yaml.example" />
      <ComponentRef Id="logs" />
      <ComponentRef Id="conf.d" />
      <ComponentRef Id="checks.d" />
      <ComponentRef Id="REGISTRYDIRECTORY" />
      <ComponentRef Id="ApplicationShortcut" />
      <ComponentRef Id="DATADOGAGENTSERVICE" />
      <?if $(var.Platform) = x64 ?>
        <ComponentRef Id="DATADOGAPMSERVICE" />
        <ComponentRef Id="DATADOGPROCESSSERVICE" />
      <?endif ?>
      <ComponentGroupRef Id="ExtraEXAMPLECONFSLOCATION" />
      <ComponentRef Id="CleanupMainApplicationFolder" />
      <ComponentRef Id="RegisterConfVariables" />
    </Feature>

    <!-- UI Stuff: 100% Omnibus Generated -->
    <Icon Id="project.ico" SourceFile="Resources\assets\project_16x16.ico"/>
    <Property Id="ARPPRODUCTICON" Value="project.ico" />
    <Property Id="ARPHELPLINK" Value="https://datadoghq.com/" />
    <!--
    <Property Id="WIXUI_INSTALLDIR" Value="<%= wix_install_dir %>" /> -->

    <UIRef Id="ProjectUI_InstallDir"/>
    <UI Id="ProjectUI_InstallDir">
      <UIRef Id="WixUI_Common"/>
      <UIRef Id="WixUI_ErrorProgressText" />
      <Property Id="DefaultUIFont">DlgFont8</Property>
      <TextStyle Id="WixUI_Font_Normal_White" FaceName="Tahoma" Size="8" Red="255" Green="255" Blue="255" />
      <TextStyle Id="WixUI_Font_Bigger_White" FaceName="Tahoma" Size="12" Red="255" Green="255" Blue="255" />
      <TextStyle Id="WixUI_Font_Title_White" FaceName="Tahoma" Size="9" Bold="yes" Red="255" Green="255" Blue="255" />

      <TextStyle Id="TahomaHeader" FaceName="Tahoma" Size="18" Bold="yes" />
      <TextStyle Id="TahomaNormal" FaceName="Tahoma" Size="8" />

      <TextStyle Id="DlgFont8" FaceName="Tahoma" Size="8" />
      <TextStyle Id="DlgFontBold8" FaceName="Tahoma" Size="8" Bold="yes" />
      <TextStyle Id="Verdana13Bold" FaceName="Verdana" Size="13" Bold="yes" />

      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />


      <Publish Dialog="ExitDialog"
          Control="Finish"
          Event="DoAction"
          Value="LaunchApp">
          WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
      </Publish>
      <?include Resources\assets\apikeydlg.wxi ?>
      <?include Resources\assets\sitedlg.wxi ?>
      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg" />
      <DialogRef Id="ProgressDlg" />
      <DialogRef Id="ResumeDlg" />
      <DialogRef Id="UserExit" />
      <DialogRef Id="WelcomeDlg" />
      <DialogRef Id="ApiKeyDlg"/>
      <DialogRef Id="SiteDlg"/>
      <DialogRef Id="LicenseAgreementDlg"/>

      <DialogRef Id="MaintenanceWelcomeDlg"/>
      <DialogRef Id="MaintenanceTypeDlg"/>
      <DialogRef Id="ResumeDlg"/>



      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT Installed</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="ApiKeyDlg">NOT PREVIOUSFOUND</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">PREVIOUSFOUND</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">NOT Installed</Publish>

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="3">1</Publish>
      <Publish Dialog="SiteDlg" Control="Back" Event="NewDialog" Value="ApiKeyDlg">NOT PREVIOUSFOUND</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="SiteDlg">NOT PREVIOUSFOUND</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">PREVIOUSFOUND</Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="ApiKeyDlg">NOT APIKEY</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="SiteDlg">APIKEY AND (NOT SITE)</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">APIKEY AND SITE</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

      <AdminUISequence>
        <Show Dialog="FatalError" OnExit="error" />
        <Show Dialog="UserExit" OnExit="cancel" />
        <Show Dialog="ExitDialog" OnExit="success" />
        <Show Dialog="MaintenanceWelcomeDlg" After="CostFinalize" />
        <Show Dialog ="ProgressDlg" After="MaintenanceWelcomeDlg" />
      </AdminUISequence>
      <InstallUISequence>
        <Show Dialog="FatalError" OnExit="error" />
        <Show Dialog="UserExit" OnExit="cancel" />
        <Show Dialog="ExitDialog" OnExit="success" />

        <Show Dialog="WelcomeDlg" After="MigrateFeatureStates"><![CDATA[NOT Installed]]></Show>
        <Show Dialog="MaintenanceWelcomeDlg" Before="ProgressDlg" >Installed AND NOT RESUME AND NOT Preselected AND NOT PATCH</Show>

        <!--
        <Show Dialog="ResumeDlg" After="WelcomeDlg"><![CDATA[Installed AND (RESUME OR Preselected)]]></Show>
        -->
        <!--
        <Show Dialog="MaintenanceWelcomeDlg" After="ResumeDlg"><![CDATA[Installed AND NOT RESUME AND NOT Preselected]]></Show>
        <Show Dialog="ProgressDlg" After="MaintenanceWelcomeDlg" />
        -->
      </InstallUISequence>
    </UI>
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT"
                  Value="!(loc.LaunchAgentManager)" />


    <WixVariable Id="WixUILicenseRtf" Value="Resources\assets\LICENSE.rtf" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources\assets\dialog_background.bmp" />
    <WixVariable Id="WixUIBannerBmp" Value="Resources\assets\banner_background.bmp" />

    <CustomAction Id='SetFinalizeProperty' Return='check' Property='FinalizeInstall' 
        Value='PROJECTLOCATION=[PROJECTLOCATION];APPLICATIONDATADIRECTORY=[APPLICATIONDATADIRECTORY];DDAGENTUSER_NAME=[DDAGENTUSER_NAME];DDAGENTUSER_PASSWORD=[DDAGENTUSER_PASSWORD];' />
    <CustomAction Id='FinalizeInstall' BinaryKey='wixcadll' DllEntry='FinalizeInstall' Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id='StopDDServices' BinaryKey='wixcadll' DllEntry='PreStopServices' Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id='StartDDServices' BinaryKey='wixcadll' DllEntry='PostStartServices' Execute='deferred' Return='check' Impersonate='no'/>

    <CustomAction Id='SetUninstallProperty' Return='check' Property='DoUninstall' 
        Value='PROJECTLOCATION=[PROJECTLOCATION];DDAGENTUSER_NAME=[DDAGENTUSER_NAME];DDAGENTUSER_PASSWORD=[DDAGENTUSER_PASSWORD];' />
    
    <CustomAction Id='DoUninstall' BinaryKey='wixcadll' DllEntry='DoUninstall' Execute='deferred' Return='check' Impersonate='no'/>

    <CustomAction Id='DoRollback' BinaryKey='wixcadll' DllEntry='DoRollback' Execute='rollback' Impersonate='no' />


    <!--
    <CustomAction Id='adddduser' BinaryKey='wixcadll' DllEntry='CreateOrUpdateDDUser' Execute='immediate' Return='check'/>
    <CustomAction Id='adjustrights' BinaryKey='wixcadll' DllEntry='AdjustDDRights' Execute='immediate' Return='check'/>
    <CustomAction Id='deldduser' BinaryKey='wixcadll' DllEntry='RemoveDDUser' Execute='immediate' Return='check'/>
    <CustomAction Id='verifyregperms' BinaryKey='wixcadll' DllEntry='VerifyDatadogRegistryPerms' Execute='immediate' Return='check'/>
    <CustomAction Id='InstallationRollback' BinaryKey='wixcadll' DllEntry='RollbackInstallation' Execute='rollback' />
    -->
    <!-- the following custom action is a testing custom action.  Set WIXFAILWHENDEFERRED=1 on the command line, and it will FirstFailureActionType   
         the install at the end, to allow for testing of rollback -->
    <CustomActionRef Id="WixFailWhenDeferred" />
  
    <Binary Id='wixcadll' SourceFile='$(var.BinFiles)\customaction.dll'/>
    
    <Binary Id="BannerBmp" SourceFile="Resources\assets\banner_background.bmp" />
    <Binary Id="BackgroundBmp" SourceFile="Resources\assets\dialog_background.bmp" />
    <Binary Id="PrepBackgroundBmp" SourceFile="Resources\assets\dialog_background.bmp" />

    <Property Id="ShortCompanyName" Value="!(loc.CompanyNameShort)" />

  </Product>
</Wix>
