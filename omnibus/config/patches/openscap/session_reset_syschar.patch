--- a/src/OVAL/oval_agent.c
+++ b/src/OVAL/oval_agent.c
@@ -254,6 +254,10 @@ int oval_agent_reset_session(oval_agent_session_t * ag_sess) {
 	return 0;
 }
 
+void oval_agent_reset_syschar(oval_agent_session_t * ag_sess) {
+	oval_syschar_model_reset(ag_sess->sys_model);
+}
+
 int oval_agent_abort_session(oval_agent_session_t *ag_sess)
 {
 	if (ag_sess == NULL) {
--- a/src/OVAL/public/oval_agent_api.h
+++ b/src/OVAL/public/oval_agent_api.h
@@ -96,6 +96,11 @@ OSCAP_API struct oval_result_definition * oval_agent_get_result_definition(oval_
  */
 OSCAP_API int oval_agent_reset_session(oval_agent_session_t * ag_sess);
 
+/**
+ * Clean system characteristics that were generated in this agent session
+ */
+OSCAP_API void oval_agent_reset_syschar(oval_agent_session_t * ag_sess);
+
 /**
  * Abort a running probe session
  */
--- a/src/XCCDF/xccdf_session.c
+++ b/src/XCCDF/xccdf_session.c
@@ -362,6 +362,15 @@ void xccdf_session_free(struct xccdf_session *session)
 	free(session);
 }
 
+static void _xccdf_session_reset_oval_agents_syschar(struct xccdf_session *session)
+{
+	if (session->oval.agents != NULL) {
+		for (int i=0; session->oval.agents[i]; i++) {
+			oval_agent_reset_syschar(session->oval.agents[i]);
+		}
+	}
+}
+
 void xccdf_session_result_reset(struct xccdf_session *session)
 {
 	if (session->xccdf.policy_model != NULL) {
@@ -373,6 +382,8 @@ void xccdf_session_result_reset(struct xccdf_session *session)
 	session->rules = oscap_list_new();
 	oscap_list_free(session->skip_rules, (oscap_destruct_func) free);
 	session->skip_rules = oscap_list_new();
+
+	_xccdf_session_reset_oval_agents_syschar(session);
 }
 
 const char *xccdf_session_get_filename(const struct xccdf_session *session)
