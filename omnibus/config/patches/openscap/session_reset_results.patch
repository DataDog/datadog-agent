--- a/src/OVAL/oval_agent.c
+++ b/src/OVAL/oval_agent.c
@@ -259,6 +259,17 @@ void oval_agent_reset_syschar(oval_agent_session_t * ag_sess) {
 	oval_syschar_model_reset(ag_sess->sys_model);
 }
 
+void oval_agent_reset_results(oval_agent_session_t * ag_sess) {
+#if defined(OVAL_PROBES_ENABLED)
+	if (ag_sess != NULL) {
+		oval_results_model_free(ag_sess->res_model);
+		ag_sess->res_model = oval_results_model_new_with_probe_session(
+				ag_sess->def_model, ag_sess->sys_models, ag_sess->psess);
+		oval_probe_session_reinit(ag_sess->psess, ag_sess->sys_model);
+	}
+#endif
+}
+
 int oval_agent_abort_session(oval_agent_session_t *ag_sess)
 {
 	if (ag_sess == NULL) {
--- a/src/OVAL/public/oval_agent_api.h
+++ b/src/OVAL/public/oval_agent_api.h
@@ -101,6 +101,11 @@ OSCAP_API int oval_agent_reset_session(oval_agent_session_t * ag_sess);
  */
 OSCAP_API void oval_agent_reset_syschar(oval_agent_session_t * ag_sess);
 
+/**
+ * Clean results that were generated in this agent session
+ */
+OSCAP_API void oval_agent_reset_results(oval_agent_session_t * ag_sess);
+
 /**
  * Abort a running probe session
  */
--- a/src/XCCDF/xccdf_session.c
+++ b/src/XCCDF/xccdf_session.c
@@ -371,6 +371,15 @@ static void _xccdf_session_reset_oval_agents_syschar(struct xccdf_session *sessi
 	}
 }
 
+static void _xccdf_session_reset_oval_agents_results(struct xccdf_session *session)
+{
+	if (session->oval.agents != NULL) {
+		for (int i=0; session->oval.agents[i]; i++) {
+			oval_agent_reset_results(session->oval.agents[i]);
+		}
+	}
+}
+
 void xccdf_session_result_reset(struct xccdf_session *session)
 {
 	if (session->xccdf.policy_model != NULL) {
@@ -384,6 +393,7 @@ void xccdf_session_result_reset(struct xccdf_session *session)
 	session->skip_rules = oscap_list_new();
 
 	_xccdf_session_reset_oval_agents_syschar(session);
+	_xccdf_session_reset_oval_agents_results(session);
 }
 
 const char *xccdf_session_get_filename(const struct xccdf_session *session)
