#!/bin/sh
#
# Perform necessary datadog-updater setup steps after package is installed.
#
# .deb: STEP 5 of 5

readonly PACKAGES_DIR=/opt/datadog-packages
readonly INSTALL_DIR=/opt/datadog-installer
readonly BOOTSTRAP_INSTALLER=${INSTALL_DIR}/bin/installer/installer
readonly HELPER=${INSTALL_DIR}/bin/installer/helper
readonly LOG_DIR=/var/log/datadog
readonly PACKAGES_LOCK_DIR=/var/run/datadog-packages
readonly CONFIG_DIR=/etc/datadog-agent

add_user_and_group() {
    # Only create group and/or user if they don't already exist
    NAME=$1
    HOME_DIR=$2
    getent group "$NAME" >/dev/null || (echo "Creating $NAME group" && addgroup --system "$NAME" --quiet)
    set +e
    id -u "$NAME" >/dev/null 2>&1
    USER_EXISTS=$?
    set -e
    if [ ! $USER_EXISTS -eq 0 ]; then
        echo "Creating $NAME user"
        adduser --system "$NAME" --disabled-login --shell /usr/sbin/nologin --home "$HOME_DIR" --no-create-home --group --quiet
    elif id -nG "$NAME" | grep --invert-match --word-regexp --quiet "$NAME"; then
        # User exists but is not part of the $NAME group
        echo "Adding $NAME user to $NAME group"
        usermod -g "$NAME" "$NAME"
    fi
}

set -e
case "$1" in
    configure)
        add_user_and_group 'dd-installer' $PACKAGES_DIR
        add_user_and_group 'dd-agent' $PACKAGES_DIR/datadog-agent
        usermod -aG dd-agent dd-installer
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;
    *)
    ;;
esac

# Set proper rights to the dd-agent user
chown -R dd-agent:dd-agent ${CONFIG_DIR}
chmod -R g+rw ${CONFIG_DIR}
chown -R dd-agent:dd-agent ${LOG_DIR}
chmod -R g+rw ${LOG_DIR}
chown -R dd-installer:dd-installer ${PACKAGES_DIR}
chown -R dd-installer:dd-installer ${PACKAGES_LOCK_DIR}
chown -R dd-installer:dd-installer ${INSTALL_DIR}

chmod -R 755 ${PACKAGES_DIR}
# Lock_dir is world read/write/x as any application with a tracer injected
# needs to write PID files
chmod -R 777 ${PACKAGES_LOCK_DIR}

# Make system-probe configs read-only
chmod 0440 ${CONFIG_DIR}/system-probe.yaml.example || true
if [ -f "$CONFIG_DIR/system-probe.yaml" ]; then
    chmod 0440 ${CONFIG_DIR}/system-probe.yaml || true
fi

# Make security-agent config read-only
chmod 0440 ${CONFIG_DIR}/security-agent.yaml.example || true
if [ -f "$CONFIG_DIR/security-agent.yaml" ]; then
    chmod 0440 ${CONFIG_DIR}/security-agent.yaml || true
fi

if [ -d "$CONFIG_DIR/compliance.d" ]; then
    chown -R root:root ${CONFIG_DIR}/compliance.d || true
fi

if [ -d "$CONFIG_DIR/runtime-security.d" ]; then
    chown -R root:root ${CONFIG_DIR}/runtime-security.d || true
fi

# Set helper rights
chmod 750 ${HELPER}
setcap cap_setuid+ep ${HELPER}

$BOOTSTRAP_INSTALLER bootstrap --url "oci://docker.io/datadog/installer-package-dev:latest"

exit 0
