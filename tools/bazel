#!/usr/bin/env bash
set -euo pipefail

# Check `bazelisk` properly bootstraps `bazel` or fail with instructions
if [ -z "${BAZEL_REAL:-}" ] || [ "${BAZELISK_SKIP_WRAPPER:-}" != "true" ]; then
  >&2 cat "$(dirname "$0")/bazelisk.md"
  exit 1
fi

# Restore `bazel`'s executable bit if it was not preserved (observed on macOS after zip extraction)
if [ ! -x "$BAZEL_REAL" ]; then
  >&2 echo "ðŸŸ¡ Make bazel executable again"
  >&2 ls -l "$BAZEL_REAL"
  chmod +x "$BAZEL_REAL"
fi

# Not in CI: simply execute `bazel` - done
if [ -z "${CI_PROJECT_DIR:-}" ]; then
  exec "$BAZEL_REAL" "$@"
  exit 2 # should not reach here
fi

# In CI: externalize `--repo_contents_cache` to the job's sibling temporary directory created alongside $CI_PROJECT_DIR
# - https://github.com/bazelbuild/bazel/issues/26384 for why
# - https://docs.gitlab.com/runner/configuration/advanced-configuration/ for `RUNNER_TEMP_PROJECT_DIR`
# - https://sissource.ethz.ch/sispub/gitlab-ci-euler-image/-/blob/main/entrypoint.sh#L43 for inspiration
ext_repo_contents_cache=$RUNNER_TEMP_PROJECT_DIR/bazel-repo-contents-cache
if [ -e "$BAZEL_REPO_CONTENTS_CACHE" ] && ! ([ "$(uname -s)" = "Linux" ] && [ "$(uname -m)" = "x86_64" ]); then
  rm >&2 -frv "$ext_repo_contents_cache"
  mv "$BAZEL_REPO_CONTENTS_CACHE" "$ext_repo_contents_cache"
fi

# Pass CI-specific options through `.user.bazelrc` so any nested `bazel run` and next `bazel shutdown` also honor them
cat >"$CI_PROJECT_DIR/user.bazelrc" <<EOF
startup --output_user_root=$BAZEL_OUTPUT_USER_ROOT
common --config=cache
common --repo_contents_cache=$ext_repo_contents_cache
build --disk_cache=$BAZEL_DISK_CACHE
EOF

trap '
  # Stop `bazel` (if still running) to close files and proceed with cleanup
  "$BAZEL_REAL" shutdown --ui_event_filters=-info || true
  rm "$CI_PROJECT_DIR/user.bazelrc"

  # Reintegrate `--repo_contents_cache` to original directory
  # Skip on Linux x86_64 to avoid issues with persistent runners
  if [ -e "$ext_repo_contents_cache" ] && ! ([ "$(uname -s)" = "Linux" ] && [ "$(uname -m)" = "x86_64" ]); then
    rm >&2 -frv "$BAZEL_REPO_CONTENTS_CACHE"
    mv "$ext_repo_contents_cache" "$BAZEL_REPO_CONTENTS_CACHE"
  fi
' EXIT

# Payload: execute `bazel` - done
"$BAZEL_REAL" "$@"
