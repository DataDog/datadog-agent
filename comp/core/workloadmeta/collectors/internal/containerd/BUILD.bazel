load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "containerd",
    srcs = [
        "container_builder.go",
        "containerd.go",
        "event_builder.go",
        "image.go",
        "image_sbom_trivy.go",
        "network_linux.go",
        "network_stub.go",
        "stub.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/core/workloadmeta/collectors/internal/containerd",
    visibility = ["//comp/core/workloadmeta/collectors:__subpackages__"],
    deps = [
        "//comp/core/workloadmeta",
        "//comp/core/workloadmeta/collectors/util",
        "//pkg/config",
        "//pkg/errors",
        "//pkg/sbom",
        "//pkg/sbom/collectors",
        "//pkg/sbom/collectors/containerd",
        "//pkg/sbom/scanner",
        "//pkg/status/health",
        "//pkg/util/containerd",
        "//pkg/util/containers",
        "//pkg/util/log",
        "@com_github_containerd_containerd//:containerd",
        "@com_github_containerd_containerd//api/events",
        "@com_github_containerd_containerd//content",
        "@com_github_containerd_containerd//errdefs",
        "@com_github_containerd_containerd//events",
        "@com_github_containerd_containerd//images",
        "@com_github_containerd_containerd//namespaces",
        "@com_github_cyclonedx_cyclonedx_go//:cyclonedx-go",
        "@com_github_opencontainers_image_spec//specs-go/v1:specs-go",
        "@org_golang_google_protobuf//proto",
        "@org_uber_go_fx//:fx",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/util/system",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/util/system",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "containerd_test",
    srcs = [
        "container_builder_test.go",
        "containerd_test.go",
        "event_builder_test.go",
        "image_test.go",
    ],
    embed = [":containerd"],
    deps = [
        "//comp/core/config",
        "//comp/core/log/logimpl",
        "//comp/core/workloadmeta",
        "//pkg/util/containerd/fake",
        "//pkg/util/containers",
        "//pkg/util/fxutil",
        "@com_github_containerd_containerd//:containerd",
        "@com_github_containerd_containerd//api/events",
        "@com_github_containerd_containerd//containers",
        "@com_github_containerd_containerd//events",
        "@com_github_containerd_containerd//oci",
        "@com_github_gogo_protobuf//types",
        "@com_github_opencontainers_go_digest//:go-digest",
        "@com_github_opencontainers_image_spec//specs-go/v1:specs-go",
        "@com_github_opencontainers_runtime_spec//specs-go",
        "@com_github_stretchr_testify//assert",
        "@org_golang_google_protobuf//proto",
        "@org_uber_go_fx//:fx",
    ],
)
