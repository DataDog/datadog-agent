load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "providers",
    srcs = [
        "cloudfoundry_nop.go",
        "clusterchecks.go",
        "common.go",
        "config_reader.go",
        "consul_nop.go",
        "container.go",
        "endpointschecks_nop.go",
        "etcd_nop.go",
        "file.go",
        "kube_endpoints_file_nop.go",
        "kube_endpoints_nop.go",
        "kube_services_file_nop.go",
        "kube_services_nop.go",
        "prometheus_common.go",
        "prometheus_pods_nop.go",
        "prometheus_services_nop.go",
        "providers.go",
        "remote_config.go",
        "utils.go",
        "zookeeper_nop.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/core/autodiscovery/providers",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/common/types",
        "//comp/core/autodiscovery/common/utils",
        "//comp/core/autodiscovery/configresolver",
        "//comp/core/autodiscovery/integration",
        "//comp/core/autodiscovery/providers/names",
        "//comp/core/autodiscovery/telemetry",
        "//comp/core/workloadmeta",
        "//pkg/clusteragent/clusterchecks/types",
        "//pkg/config",
        "//pkg/config/utils",
        "//pkg/errors",
        "//pkg/remoteconfig/state",
        "//pkg/util/clusteragent",
        "//pkg/util/containers",
        "//pkg/util/fargate",
        "//pkg/util/hostname",
        "//pkg/util/log",
        "@com_github_patrickmn_go_cache//:go_default_library",
        "@in_gopkg_yaml_v2//:go_default_library",
    ],
)

go_test(
    name = "providers_test",
    srcs = [
        "config_reader_test.go",
        "container_test.go",
        "file_test.go",
        "prometheus_common_test.go",
        "utils_test.go",
    ],
    embed = [":providers"],
    deps = [
        "//comp/core/autodiscovery/common/types",
        "//comp/core/autodiscovery/integration",
        "//comp/core/config",
        "//comp/core/log/logimpl",
        "//comp/core/workloadmeta",
        "//comp/core/workloadmeta/collectors",
        "//pkg/config",
        "//pkg/util/fxutil",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_uber_go_fx//:go_default_library",
    ],
)
