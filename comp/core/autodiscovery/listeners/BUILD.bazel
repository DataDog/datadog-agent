load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "listeners",
    srcs = [
        "cloudfoundry_nop.go",
        "common.go",
        "container.go",
        "dbm_aurora_nop.go",
        "environment.go",
        "kube_endpoints_nop.go",
        "kube_services_nop.go",
        "kubelet.go",
        "listeners.go",
        "service.go",
        "snmp.go",
        "staticconfig.go",
        "types.go",
        "workloadmeta.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/core/autodiscovery/listeners",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/common/types",
        "//comp/core/autodiscovery/common/utils",
        "//comp/core/autodiscovery/integration",
        "//comp/core/autodiscovery/providers/names",
        "//comp/core/autodiscovery/telemetry",
        "//comp/core/tagger",
        "//comp/core/workloadmeta",
        "//pkg/config",
        "//pkg/persistentcache",
        "//pkg/snmp",
        "//pkg/status/health",
        "//pkg/util/containers",
        "//pkg/util/docker",
        "//pkg/util/kubernetes",
        "//pkg/util/kubernetes/kubelet",
        "//pkg/util/log",
        "//pkg/util/optional",
    ],
)

go_test(
    name = "listeners_test",
    srcs = [
        "common_test.go",
        "container_test.go",
        "kubelet_test.go",
        "service_test.go",
        "snmp_test.go",
        "workloadmeta_test.go",
    ],
    embed = [":listeners"],
    deps = [
        "//comp/core/autodiscovery/common/types",
        "//comp/core/autodiscovery/integration",
        "//comp/core/autodiscovery/providers/names",
        "//comp/core/config",
        "//comp/core/log/logimpl",
        "//comp/core/workloadmeta",
        "//pkg/config",
        "//pkg/snmp",
        "//pkg/snmp/snmpintegration",
        "//pkg/util/containers",
        "//pkg/util/fxutil",
        "@com_github_stretchr_testify//assert",
        "@org_uber_go_fx//:fx",
    ],
)
