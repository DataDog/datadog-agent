// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: comp/core/filter/def/proto/filter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// Types that are valid to be assigned to Owner:
	//
	//	*FilterContainer_Pod
	//	*FilterContainer_EcsTask
	Owner         isFilterContainer_Owner `protobuf_oneof:"owner"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterContainer) Reset() {
	*x = FilterContainer{}
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterContainer) ProtoMessage() {}

func (x *FilterContainer) ProtoReflect() protoreflect.Message {
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterContainer.ProtoReflect.Descriptor instead.
func (*FilterContainer) Descriptor() ([]byte, []int) {
	return file_comp_core_filter_def_proto_filter_proto_rawDescGZIP(), []int{0}
}

func (x *FilterContainer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterContainer) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *FilterContainer) GetOwner() isFilterContainer_Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *FilterContainer) GetPod() *FilterPod {
	if x != nil {
		if x, ok := x.Owner.(*FilterContainer_Pod); ok {
			return x.Pod
		}
	}
	return nil
}

func (x *FilterContainer) GetEcsTask() *FilterECSTask {
	if x != nil {
		if x, ok := x.Owner.(*FilterContainer_EcsTask); ok {
			return x.EcsTask
		}
	}
	return nil
}

type isFilterContainer_Owner interface {
	isFilterContainer_Owner()
}

type FilterContainer_Pod struct {
	Pod *FilterPod `protobuf:"bytes,4,opt,name=pod,proto3,oneof"`
}

type FilterContainer_EcsTask struct {
	EcsTask *FilterECSTask `protobuf:"bytes,5,opt,name=ecs_task,json=ecsTask,proto3,oneof"`
}

func (*FilterContainer_Pod) isFilterContainer_Owner() {}

func (*FilterContainer_EcsTask) isFilterContainer_Owner() {}

type FilterPod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterPod) Reset() {
	*x = FilterPod{}
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterPod) ProtoMessage() {}

func (x *FilterPod) ProtoReflect() protoreflect.Message {
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterPod.ProtoReflect.Descriptor instead.
func (*FilterPod) Descriptor() ([]byte, []int) {
	return file_comp_core_filter_def_proto_filter_proto_rawDescGZIP(), []int{1}
}

func (x *FilterPod) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterPod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterPod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FilterPod) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type FilterECSTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Arn           string                 `protobuf:"bytes,2,opt,name=arn,proto3" json:"arn,omitempty"` // Add other ECS task fields here
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterECSTask) Reset() {
	*x = FilterECSTask{}
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterECSTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterECSTask) ProtoMessage() {}

func (x *FilterECSTask) ProtoReflect() protoreflect.Message {
	mi := &file_comp_core_filter_def_proto_filter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterECSTask.ProtoReflect.Descriptor instead.
func (*FilterECSTask) Descriptor() ([]byte, []int) {
	return file_comp_core_filter_def_proto_filter_proto_rawDescGZIP(), []int{2}
}

func (x *FilterECSTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterECSTask) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

var File_comp_core_filter_def_proto_filter_proto protoreflect.FileDescriptor

const file_comp_core_filter_def_proto_filter_proto_rawDesc = "" +
	"\n" +
	"'comp/core/filter/def/proto/filter.proto\x12\x0edatadog.filter\"\xbf\x01\n" +
	"\x0fFilterContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12-\n" +
	"\x03pod\x18\x04 \x01(\v2\x19.datadog.filter.FilterPodH\x00R\x03pod\x12:\n" +
	"\becs_task\x18\x05 \x01(\v2\x1d.datadog.filter.FilterECSTaskH\x00R\aecsTaskB\a\n" +
	"\x05owner\"\xdb\x01\n" +
	"\tFilterPod\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12L\n" +
	"\vannotations\x18\x04 \x03(\v2*.datadog.filter.FilterPod.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"1\n" +
	"\rFilterECSTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03arn\x18\x02 \x01(\tR\x03arnB\x1cZ\x1acomp/core/filter/def/protob\x06proto3"

var (
	file_comp_core_filter_def_proto_filter_proto_rawDescOnce sync.Once
	file_comp_core_filter_def_proto_filter_proto_rawDescData []byte
)

func file_comp_core_filter_def_proto_filter_proto_rawDescGZIP() []byte {
	file_comp_core_filter_def_proto_filter_proto_rawDescOnce.Do(func() {
		file_comp_core_filter_def_proto_filter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comp_core_filter_def_proto_filter_proto_rawDesc), len(file_comp_core_filter_def_proto_filter_proto_rawDesc)))
	})
	return file_comp_core_filter_def_proto_filter_proto_rawDescData
}

var file_comp_core_filter_def_proto_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_comp_core_filter_def_proto_filter_proto_goTypes = []any{
	(*FilterContainer)(nil), // 0: datadog.filter.FilterContainer
	(*FilterPod)(nil),       // 1: datadog.filter.FilterPod
	(*FilterECSTask)(nil),   // 2: datadog.filter.FilterECSTask
	nil,                     // 3: datadog.filter.FilterPod.AnnotationsEntry
}
var file_comp_core_filter_def_proto_filter_proto_depIdxs = []int32{
	1, // 0: datadog.filter.FilterContainer.pod:type_name -> datadog.filter.FilterPod
	2, // 1: datadog.filter.FilterContainer.ecs_task:type_name -> datadog.filter.FilterECSTask
	3, // 2: datadog.filter.FilterPod.annotations:type_name -> datadog.filter.FilterPod.AnnotationsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_comp_core_filter_def_proto_filter_proto_init() }
func file_comp_core_filter_def_proto_filter_proto_init() {
	if File_comp_core_filter_def_proto_filter_proto != nil {
		return
	}
	file_comp_core_filter_def_proto_filter_proto_msgTypes[0].OneofWrappers = []any{
		(*FilterContainer_Pod)(nil),
		(*FilterContainer_EcsTask)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comp_core_filter_def_proto_filter_proto_rawDesc), len(file_comp_core_filter_def_proto_filter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comp_core_filter_def_proto_filter_proto_goTypes,
		DependencyIndexes: file_comp_core_filter_def_proto_filter_proto_depIdxs,
		MessageInfos:      file_comp_core_filter_def_proto_filter_proto_msgTypes,
	}.Build()
	File_comp_core_filter_def_proto_filter_proto = out.File
	file_comp_core_filter_def_proto_filter_proto_goTypes = nil
	file_comp_core_filter_def_proto_filter_proto_depIdxs = nil
}
