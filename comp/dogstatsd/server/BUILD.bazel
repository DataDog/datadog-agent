load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "server",
    srcs = [
        "batch.go",
        "blocklist.go",
        "component.go",
        "enrich.go",
        "float64_list_pool.go",
        "intern.go",
        "intern_telemetry.go",
        "params.go",
        "parse.go",
        "parse_events.go",
        "parse_metrics.go",
        "parse_service_checks.go",
        "server.go",
        "server_mock.go",
        "server_worker.go",
        "serverless.go",
        "stats_endpoint.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/dogstatsd/server",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/api/api/def",
        "//comp/core/config",
        "//comp/core/log/def",
        "//comp/core/log/impl",
        "//comp/core/tagger/origindetection",
        "//comp/core/telemetry",
        "//comp/core/telemetry/noopsimpl",
        "//comp/core/workloadmeta/def",
        "//comp/dogstatsd/constants",
        "//comp/dogstatsd/listeners",
        "//comp/dogstatsd/mapper",
        "//comp/dogstatsd/packets",
        "//comp/dogstatsd/pidmap",
        "//comp/dogstatsd/pidmap/pidmapimpl",
        "//comp/dogstatsd/replay/def",
        "//comp/dogstatsd/replay/impl-noop",
        "//comp/dogstatsd/serverDebug",
        "//comp/dogstatsd/serverDebug/serverdebugimpl",
        "//pkg/aggregator",
        "//pkg/aggregator/ckey",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/config/structure",
        "//pkg/config/utils",
        "//pkg/metrics",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/status/health",
        "//pkg/tagger/types",
        "//pkg/tagset",
        "//pkg/util/containers/metrics/provider",
        "//pkg/util/fxutil",
        "//pkg/util/hostname",
        "//pkg/util/http",
        "//pkg/util/log",
        "//pkg/util/option",
        "//pkg/util/sort",
        "//pkg/util/stat",
        "//pkg/util/tags",
        "@com_github_twmb_murmur3//:murmur3",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "server_test",
    srcs = [
        "blocklist_test.go",
        "convert_bench_test.go",
        "enrich_bench_test.go",
        "enrich_test.go",
        "intern_test.go",
        "parse_events_test.go",
        "parse_metrics_test.go",
        "parse_service_checks_test.go",
        "parse_test.go",
        "server_bench_test.go",
        "server_integration_test.go",
        "server_test.go",
        "server_util_test.go",
        "server_worker_test.go",
    ],
    embed = [":server"],
    deps = [
        "//comp/aggregator/demultiplexer",
        "//comp/aggregator/demultiplexer/demultiplexerimpl",
        "//comp/core",
        "//comp/core/config",
        "//comp/core/hostname/hostnameimpl",
        "//comp/core/log/def",
        "//comp/core/log/mock",
        "//comp/core/tagger/origindetection",
        "//comp/core/tagger/types",
        "//comp/core/telemetry",
        "//comp/core/telemetry/telemetryimpl",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/fx-mock",
        "//comp/dogstatsd/listeners",
        "//comp/dogstatsd/mapper",
        "//comp/dogstatsd/packets",
        "//comp/dogstatsd/pidmap",
        "//comp/dogstatsd/pidmap/pidmapimpl",
        "//comp/dogstatsd/replay/def",
        "//comp/dogstatsd/replay/fx-mock",
        "//comp/dogstatsd/serverDebug",
        "//comp/dogstatsd/serverDebug/serverdebugimpl",
        "//comp/serializer/logscompression/fx-mock",
        "//comp/serializer/metricscompression/fx-mock",
        "//pkg/config/env",
        "//pkg/config/mock",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/metrics",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/tagger/types",
        "//pkg/util/fxutil",
        "//pkg/util/log/setup",
        "//pkg/util/option",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_fx//:fx",
    ],
)
