load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "processcheckimpl",
    srcs = [
        "check.go",
        "mock.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/process/processcheck/processcheckimpl",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/config",
        "//comp/core/ipc/def",
        "//comp/core/sysprobeconfig",
        "//comp/core/workloadmeta/def",
        "//comp/process/gpusubscriber/def",
        "//comp/process/processcheck",
        "//comp/process/types",
        "//pkg/process/checks",
        "//pkg/process/checks/mocks",
        "//pkg/util/fxutil",
        "@com_github_datadog_datadog_go_v5//statsd",
        "@com_github_stretchr_testify//mock",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "processcheckimpl_test",
    srcs = [
        "check_linux_test.go",
        "check_test.go",
    ],
    embed = [":processcheckimpl"],
    deps = [
        "//comp/core",
        "//comp/core/config",
        "//comp/core/ipc/def",
        "//comp/core/ipc/mock",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/fx-mock",
        "//comp/process/gpusubscriber/fx-mock",
        "//comp/process/processcheck",
        "//pkg/util/fxutil",
        "@com_github_datadog_datadog_go_v5//statsd",
        "@com_github_stretchr_testify//assert",
        "@org_uber_go_fx//:fx",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/util/flavor",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/util/flavor",
        ],
        "//conditions:default": [],
    }),
)
