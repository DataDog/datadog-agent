load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "tagenrichmentprocessor",
    srcs = [
        "config.go",
        "doc.go",
        "factory.go",
        "logs.go",
        "metadata.go",
        "metrics.go",
        "traces.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/otelcol/otlp/components/processor/tagenrichmentprocessor",
    visibility = ["//visibility:public"],
    deps = [
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_consumer//:consumer",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@io_opentelemetry_go_collector_pdata//ptrace",
        "@io_opentelemetry_go_collector_processor//:processor",
        "@io_opentelemetry_go_collector_processor//processorhelper",
        "@io_opentelemetry_go_otel_metric//:metric",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "tagenrichmentprocessor_test",
    srcs = [
        "config_test.go",
        "factory_test.go",
        "logs_test.go",
        "metrics_test.go",
        "package_test.go",
        "traces_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":tagenrichmentprocessor"],
    deps = [
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_component//componenttest",
        "@io_opentelemetry_go_collector_confmap//confmaptest",
        "@io_opentelemetry_go_collector_consumer//consumertest",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@io_opentelemetry_go_collector_pdata//ptrace",
        "@io_opentelemetry_go_collector_processor//processortest",
        "@org_uber_go_goleak//:goleak",
    ],
)

go_library(
    name = "infraattributesprocessor",
    srcs = [
        "common.go",
        "config.go",
        "doc.go",
        "factory.go",
        "helperclients.go",
        "logs.go",
        "metadata.go",
        "metrics.go",
        "telemetry_not_serverless.go",
        "traces.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/otelcol/otlp/components/processor/infraattributesprocessor",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/config",
        "//comp/core/log/def",
        "//comp/core/log/fx",
        "//comp/core/tagger/def",
        "//comp/core/tagger/fx-remote",
        "//comp/core/tagger/tags",
        "//comp/core/tagger/types",
        "//comp/core/telemetry/telemetryimpl",
        "//pkg/api/security",
        "//pkg/config/setup",
        "//pkg/util/fxutil",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_consumer//:consumer",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@io_opentelemetry_go_collector_pdata//ptrace",
        "@io_opentelemetry_go_collector_processor//:processor",
        "@io_opentelemetry_go_collector_processor//processorhelper",
        "@io_opentelemetry_go_collector_semconv//v1.21.0:v1_21_0",
        "@io_opentelemetry_go_collector_semconv//v1.22.0:v1_22_0",
        "@io_opentelemetry_go_otel_metric//:metric",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_uber_go_fx//:fx",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "infraattributesprocessor_test",
    srcs = [
        "config_test.go",
        "factory_test.go",
        "helperclients_test.go",
        "logs_test.go",
        "metrics_test.go",
        "traces_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":infraattributesprocessor"],
    deps = [
        "//comp/core/tagger/types",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_component_componenttest//:componenttest",
        "@io_opentelemetry_go_collector_confmap//confmaptest",
        "@io_opentelemetry_go_collector_confmap_xconfmap//:xconfmap",
        "@io_opentelemetry_go_collector_consumer_consumertest//:consumertest",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@io_opentelemetry_go_collector_pdata//ptrace",
        "@io_opentelemetry_go_collector_processor_processortest//:processortest",
        "@io_opentelemetry_go_collector_semconv//v1.21.0:v1_21_0",
        "@io_opentelemetry_go_collector_semconv//v1.22.0:v1_22_0",
    ],
)
