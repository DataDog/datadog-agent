load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "otlp",
    srcs = [
        "collector.go",
        "collector_test_config.go",
        "config.go",
        "map_provider.go",
        "map_provider_config_not_serverless.go",
        "otlp.go",
        "pipeline_validator.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/otelcol/otlp",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/config",
        "//comp/core/tagger/def",
        "//comp/core/tagger/types",
        "//comp/core/workloadmeta/collectors/util",
        "//comp/otelcol/otlp/components/exporter/logsagentexporter",
        "//comp/otelcol/otlp/components/exporter/serializerexporter",
        "//comp/otelcol/otlp/components/processor/infraattributesprocessor",
        "//comp/otelcol/otlp/configcheck",
        "//comp/otelcol/otlp/datatype",
        "//comp/otelcol/otlp/internal/configutils",
        "//comp/otelcol/otlp/testutil",
        "//pkg/config/setup",
        "//pkg/logs/message",
        "//pkg/serializer",
        "//pkg/util/flavor",
        "//pkg/util/hostname",
        "//pkg/util/log",
        "//pkg/util/log/zap",
        "//pkg/util/tags",
        "//pkg/version",
        "@com_github_datadog_opentelemetry_mapping_go_pkg_otlp_metrics//:metrics",
        "@com_github_go_viper_mapstructure_v2//:mapstructure",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_config_configtelemetry//:configtelemetry",
        "@io_opentelemetry_go_collector_confmap//:confmap",
        "@io_opentelemetry_go_collector_exporter//:exporter",
        "@io_opentelemetry_go_collector_exporter_debugexporter//:debugexporter",
        "@io_opentelemetry_go_collector_exporter_otlpexporter//:otlpexporter",
        "@io_opentelemetry_go_collector_extension//:extension",
        "@io_opentelemetry_go_collector_otelcol//:otelcol",
        "@io_opentelemetry_go_collector_processor//:processor",
        "@io_opentelemetry_go_collector_processor_batchprocessor//:batchprocessor",
        "@io_opentelemetry_go_collector_receiver//:receiver",
        "@io_opentelemetry_go_collector_receiver_otlpreceiver//:otlpreceiver",
        "@org_uber_go_atomic//:atomic",
        "@org_uber_go_multierr//:multierr",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
    ],
)

go_test(
    name = "otlp_test",
    srcs = [
        "collector_test.go",
        "config_test.go",
        "map_provider_not_serverless_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":otlp"],
    deps = [
        "//comp/core/tagger/mock",
        "//comp/otelcol/otlp/configcheck",
        "//comp/otelcol/otlp/internal/configutils",
        "//comp/otelcol/otlp/testutil",
        "//pkg/config/setup",
        "//pkg/logs/message",
        "//pkg/serializer/mocks",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_collector_confmap//:confmap",
        "@io_opentelemetry_go_collector_otelcol//:otelcol",
    ],
)
