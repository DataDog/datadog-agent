load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "impl",
    srcs = ["collector.go"],
    importpath = "github.com/DataDog/datadog-agent/comp/otelcol/collector/impl",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/config",
        "//comp/core/log/def",
        "//comp/core/tagger/def",
        "//comp/def",
        "//comp/otelcol/collector-contrib/def",
        "//comp/otelcol/collector/def",
        "//comp/otelcol/ddflareextension/impl",
        "//comp/otelcol/ddprofilingextension/impl",
        "//comp/otelcol/logsagentpipeline",
        "//comp/otelcol/otlp/components/exporter/datadogexporter",
        "//comp/otelcol/otlp/components/exporter/serializerexporter",
        "//comp/otelcol/otlp/components/metricsclient",
        "//comp/otelcol/otlp/components/processor/infraattributesprocessor",
        "//comp/otelcol/otlp/datatype",
        "//comp/trace/agent/def",
        "//pkg/serializer",
        "//pkg/util/log/zap",
        "//pkg/util/option",
        "@com_github_open_telemetry_opentelemetry_collector_contrib_connector_datadogconnector//:datadogconnector",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_confmap//:confmap",
        "@io_opentelemetry_go_collector_confmap_provider_envprovider//:envprovider",
        "@io_opentelemetry_go_collector_confmap_provider_fileprovider//:fileprovider",
        "@io_opentelemetry_go_collector_confmap_provider_httpprovider//:httpprovider",
        "@io_opentelemetry_go_collector_confmap_provider_httpsprovider//:httpsprovider",
        "@io_opentelemetry_go_collector_confmap_provider_yamlprovider//:yamlprovider",
        "@io_opentelemetry_go_collector_otelcol//:otelcol",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
    ],
)
