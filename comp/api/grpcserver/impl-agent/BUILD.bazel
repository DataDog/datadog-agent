load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "impl-agent",
    srcs = [
        "grpc.go",
        "server.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/api/grpcserver/impl-agent",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/api/grpcserver/def",
        "//comp/collector/collector",
        "//comp/core/autodiscovery",
        "//comp/core/autodiscovery/stream",
        "//comp/core/config",
        "//comp/core/hostname/hostnameinterface",
        "//comp/core/ipc/def",
        "//comp/core/remoteagentregistry/def",
        "//comp/core/remoteagentregistry/proto",
        "//comp/core/secrets",
        "//comp/core/tagger/def",
        "//comp/core/tagger/impl",
        "//comp/core/tagger/proto",
        "//comp/core/tagger/server",
        "//comp/core/tagger/types",
        "//comp/core/telemetry",
        "//comp/core/telemetry/noopsimpl",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/server",
        "//comp/def",
        "//comp/dogstatsd/pidmap",
        "//comp/dogstatsd/replay/def",
        "//comp/dogstatsd/server",
        "//comp/metadata/host/hostimpl/hosttags",
        "//comp/remote-config/rcservice",
        "//comp/remote-config/rcservicemrf",
        "//pkg/proto/pbgo/core",
        "//pkg/util/grpc",
        "//pkg/util/log",
        "//pkg/util/option",
        "@com_github_grpc_ecosystem_go_grpc_middleware//auth",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//grpclog",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)
