load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "agent",
    srcs = [
        "agent.go",
        "agent_jmx.go",
        "python_status.go",
        "python_status_nopython.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/api/api/apiimpl/internal/agent",
    visibility = ["//comp/api/api/apiimpl:__subpackages__"],
    deps = [
        "//cmd/agent/common",
        "//cmd/agent/common/signals",
        "//comp/aggregator/demultiplexer",
        "//comp/api/api",
        "//comp/api/api/utils",
        "//comp/collector/collector",
        "//comp/core/autodiscovery",
        "//comp/core/autodiscovery/integration",
        "//comp/core/gui",
        "//comp/core/secrets",
        "//comp/core/settings",
        "//comp/core/status",
        "//comp/core/workloadmeta",
        "//comp/dogstatsd/server",
        "//comp/dogstatsd/serverDebug",
        "//comp/forwarder/eventplatformreceiver",
        "//comp/logs/agent",
        "//comp/metadata/host",
        "//comp/metadata/inventoryagent",
        "//comp/metadata/inventorychecks",
        "//comp/metadata/inventoryhost",
        "//comp/metadata/packagesigning",
        "//pkg/aggregator/sender",
        "//pkg/config",
        "//pkg/diagnose",
        "//pkg/diagnose/diagnosis",
        "//pkg/gohai",
        "//pkg/jmxfetch",
        "//pkg/logs/diagnostic",
        "//pkg/status/health",
        "//pkg/status/jmx",
        "//pkg/util",
        "//pkg/util/hostname",
        "//pkg/util/log",
        "//pkg/util/optional",
        "//pkg/util/scrubber",
        "@com_github_datadog_zstd//:zstd",
        "@com_github_gorilla_mux//:mux",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ] + select({
        "@rules_go//go/platform:aix": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:android": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:darwin": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:freebsd": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:illumos": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:ios": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:js": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:netbsd": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:openbsd": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:plan9": [
            "//pkg/collector/python",
        ],
        "@rules_go//go/platform:solaris": [
            "//pkg/collector/python",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "agent_test",
    srcs = ["agent_test.go"],
    embed = [":agent"],
    deps = [
        "//comp/aggregator/demultiplexer",
        "//comp/aggregator/demultiplexer/demultiplexerimpl",
        "//comp/api/api",
        "//comp/collector/collector",
        "//comp/core/autodiscovery",
        "//comp/core/autodiscovery/autodiscoveryimpl",
        "//comp/core/flare/flareimpl",
        "//comp/core/gui",
        "//comp/core/hostname/hostnameinterface",
        "//comp/core/secrets",
        "//comp/core/secrets/secretsimpl",
        "//comp/core/settings",
        "//comp/core/settings/settingsimpl",
        "//comp/core/status",
        "//comp/core/status/statusimpl",
        "//comp/core/tagger",
        "//comp/core/tagger/taggerimpl",
        "//comp/core/workloadmeta",
        "//comp/dogstatsd/server",
        "//comp/dogstatsd/serverDebug",
        "//comp/dogstatsd/serverDebug/serverdebugimpl",
        "//comp/forwarder/eventplatformreceiver",
        "//comp/forwarder/eventplatformreceiver/eventplatformreceiverimpl",
        "//comp/logs/agent",
        "//comp/metadata/host",
        "//comp/metadata/host/hostimpl",
        "//comp/metadata/inventoryagent",
        "//comp/metadata/inventoryagent/inventoryagentimpl",
        "//comp/metadata/inventorychecks",
        "//comp/metadata/inventorychecks/inventorychecksimpl",
        "//comp/metadata/inventoryhost",
        "//comp/metadata/inventoryhost/inventoryhostimpl",
        "//comp/metadata/packagesigning",
        "//comp/metadata/packagesigning/packagesigningimpl",
        "//pkg/aggregator",
        "//pkg/util/fxutil",
        "//pkg/util/optional",
        "@com_github_gorilla_mux//:mux",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_fx//:fx",
    ],
)
