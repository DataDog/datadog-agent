load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "collectorimpl",
    srcs = [
        "agent_check_metadata.go",
        "collector.go",
        "collector_mock.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/comp/collector/collector/collectorimpl",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/agent/common",
        "//comp/collector/collector",
        "//comp/collector/collector/collectorimpl/internal/middleware",
        "//comp/core/autodiscovery/autodiscoveryimpl",
        "//comp/core/config",
        "//comp/core/log",
        "//comp/core/status",
        "//comp/metadata/host/hostimpl/utils",
        "//comp/metadata/runner/runnerimpl",
        "//pkg/aggregator/sender",
        "//pkg/collector",
        "//pkg/collector/check",
        "//pkg/collector/check/id",
        "//pkg/collector/externalhost",
        "//pkg/collector/runner",
        "//pkg/collector/runner/expvars",
        "//pkg/collector/scheduler",
        "//pkg/serializer",
        "//pkg/serializer/marshaler",
        "//pkg/status/collector",
        "//pkg/status/jmx",
        "//pkg/util/fxutil",
        "//pkg/util/hostname",
        "//pkg/util/log",
        "//pkg/util/optional",
        "@org_uber_go_atomic//:atomic",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "collectorimpl_test",
    srcs = [
        "agent_check_metadata_test.go",
        "collector_demux_test.go",
        "collector_test.go",
    ],
    embed = [":collectorimpl"],
    deps = [
        "//comp/aggregator/demultiplexer",
        "//comp/aggregator/demultiplexer/demultiplexerimpl",
        "//comp/collector/collector/collectorimpl/internal/middleware",
        "//comp/core",
        "//comp/core/config",
        "//comp/core/hostname/hostnameimpl",
        "//comp/core/log/logimpl",
        "//comp/serializer/compression/compressionimpl",
        "//pkg/aggregator",
        "//pkg/aggregator/sender",
        "//pkg/collector/check",
        "//pkg/collector/check/id",
        "//pkg/collector/check/stub",
        "//pkg/collector/externalhost",
        "//pkg/metrics",
        "//pkg/serializer",
        "//pkg/util/fxutil",
        "//pkg/util/optional",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@com_github_stretchr_testify//suite",
        "@org_uber_go_fx//:fx",
    ],
)
