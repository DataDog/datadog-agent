default_language_version:
  python: python3
default_install_hook_types:
  - pre-commit
  - pre-push
default_stages:
  - pre-commit

repos:
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: 0ccbb5b7942d83fbcf7cb5e0fd99633efd2351d7 # v0.3.5
  hooks:
    - id: ruff
      args: [ --fix ]
    - id: ruff-format
- repo: https://github.com/jendrikseipp/vulture
  rev: 44aed44e226ec0e5660851462f764ec5d5da957c # v2.3
  hooks:
    - id: vulture
      args: ["--ignore-decorators", "@task", "--ignore-names", "test_*,Test*", "tasks"]
- repo: https://github.com/jumanjihouse/pre-commit-hooks
  rev: 7cc5848088fd8412905ab79feea6c8edc3ac76c6 # 2.1.5
  hooks:
    - id: shellcheck
      args: ["--severity=info", "-e", "SC2059", "-e", "SC2028"]
- repo: https://github.com/tekwizely/pre-commit-golang
  rev: bd69b816c43306f28bad4d7b303d981b0ecd2fd5 # v1.0.0-beta.5
  hooks:
    - id: go-fmt
      args: [ "-w", "-s" ]
- repo: local
  hooks:
    - id: protected-branches
      name: protected-branches
      description: checks that the commit isn't created on a protected branch
      entry: 'inv git.check-protected-branch'
      language: system
      pass_filenames: false
    - id: govet
      name: govet
      description: go vet
      entry: 'python3 -m tasks.git-hooks.govet'
      language: system
      require_serial: true
      files: \.go$
    - id: copyright
      name: copyright
      description: copyright headers
      entry: 'inv linter.copyrights --only-staged-files'
      language: system
      require_serial: true
      files: \.go$
      pass_filenames: false
    - id: win-clang-format
      name: win-clang-format
      description: clang-format
      entry: './tasks/git-hooks/wincpplang.py'
      language: system
      types_or: [c, c++, c#]
    - id: clang-format
      name: clang-format
      description: clang-format
      entry: 'python3 -m tasks.git-hooks.clang-format'
      language: system
      require_serial: true
      files: '^pkg/(ebpf|network|security)/.*\.(c|h)$'
      exclude: '^pkg/ebpf/(c/bpf_endian|c/bpf_helpers|compiler/clang-stdarg).h$'
    - id: go-mod-tidy
      name: go-mod-tidy
      description: check that all go.mod files are tidy
      entry: 'inv tidy'
      language: system
      require_serial: true
      files: (\.go|^go\.mod|^go\.sum)$
      pass_filenames: false
      stages: [pre-push]
    - id: go-test
      name: go-test
      description: run go test on modified packages
      entry: 'inv test --only-modified-packages'
      language: system
      require_serial: true
      always_run: true
      pass_filenames: false
      stages: [pre-push]
    - id: go-linter
      name: go-linter
      description: run go linter on modified packages
      entry: 'inv linter.go --only-modified-packages'
      language: system
      require_serial: true
      always_run: true
      pass_filenames: false
      stages: [ pre-push ]
    - id: shell-check-no-set-x
      name: shell-check-no-set-x
      description: check that no `set -x` is set within github / gitlab workflows
      entry: 'inv pre-commit.check-set-x'
      language: system
      require_serial: true
      files: (\.yaml|\.yml|\.sh|Dockerfile)$
      pass_filenames: false
    - id: gitlab-configuration
      name: gitlab-configuration
      description: test the gitlab configuration on main
      entry: 'inv linter.gitlab-ci -t main'
      language: system
      require_serial: true
      files: .*gitlab.*\.yml$
      pass_filenames: false
      stages: [pre-push]
    - id: update-go
      name: update-go
      description: test formatting of files will allow go update
      entry: 'inv linter.update-go'
      language: system
      pass_filenames: false
