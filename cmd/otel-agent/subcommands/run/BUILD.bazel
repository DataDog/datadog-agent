load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "run",
    srcs = [
        "command.go",
        "doc.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/cmd/otel-agent/subcommands/run",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/otel-agent/config",
        "//cmd/otel-agent/subcommands",
        "//comp/api/authtoken/fetchonlyimpl",
        "//comp/core/config",
        "//comp/core/hostname",
        "//comp/core/hostname/hostnameimpl",
        "//comp/core/log",
        "//comp/core/log/logimpl",
        "//comp/core/secrets",
        "//comp/core/sysprobeconfig",
        "//comp/core/workloadmeta",
        "//comp/forwarder",
        "//comp/forwarder/defaultforwarder",
        "//comp/forwarder/orchestrator/orchestratorinterface",
        "//comp/metadata/inventoryagent/inventoryagentimpl",
        "//comp/otelcol/collector-contrib/fx",
        "//comp/otelcol/collector/def",
        "//comp/otelcol/collector/fx",
        "//comp/otelcol/logsagentpipeline",
        "//comp/otelcol/logsagentpipeline/logsagentpipelineimpl",
        "//comp/otelcol/otlp/components/pipeline/provider",
        "//comp/serializer/compression",
        "//comp/serializer/compression/compressionimpl/strategy",
        "//pkg/config/env",
        "//pkg/serializer",
        "//pkg/util/fxutil",
        "//pkg/util/optional",
        "@com_github_spf13_cobra//:cobra",
        "@io_opentelemetry_go_collector_otelcol//:otelcol",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "run_test",
    srcs = ["command_test.go"],
    embed = [":run"],
    deps = [
        "//cmd/otel-agent/subcommands",
        "//pkg/util/fxutil",
    ],
)
