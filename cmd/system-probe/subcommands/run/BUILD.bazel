load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "run",
    srcs = ["command.go"],
    importpath = "github.com/DataDog/datadog-agent/cmd/system-probe/subcommands/run",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/agent/common/signals",
        "//cmd/system-probe/api",
        "//cmd/system-probe/api/module",
        "//cmd/system-probe/command",
        "//cmd/system-probe/common",
        "//cmd/system-probe/config",
        "//cmd/system-probe/utils",
        "//comp/agent/autoexit",
        "//comp/agent/autoexit/autoexitimpl",
        "//comp/core/config",
        "//comp/core/healthprobe/def",
        "//comp/core/healthprobe/fx",
        "//comp/core/log",
        "//comp/core/log/logimpl",
        "//comp/core/pid",
        "//comp/core/pid/pidimpl",
        "//comp/core/secrets",
        "//comp/core/settings",
        "//comp/core/settings/settingsimpl",
        "//comp/core/sysprobeconfig",
        "//comp/core/sysprobeconfig/sysprobeconfigimpl",
        "//comp/core/telemetry",
        "//comp/core/telemetry/telemetryimpl",
        "//comp/core/workloadmeta",
        "//comp/dogstatsd/statsd",
        "//comp/remote-config/rcclient",
        "//comp/remote-config/rcclient/rcclientimpl",
        "//pkg/config",
        "//pkg/config/model",
        "//pkg/config/settings",
        "//pkg/ebpf/telemetry",
        "//pkg/process/statsd",
        "//pkg/runtime",
        "//pkg/util",
        "//pkg/util/fxutil",
        "//pkg/util/log",
        "//pkg/util/optional",
        "//pkg/util/profiling",
        "//pkg/version",
        "@com_github_spf13_cobra//:cobra",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "run_test",
    srcs = ["command_test.go"],
    embed = [":run"],
    deps = [
        "//cmd/system-probe/command",
        "//pkg/util/fxutil",
    ],
)
