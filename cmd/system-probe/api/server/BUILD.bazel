load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "server",
    srcs = [
        "listener.go",
        "listener_others.go",
        "listener_unix.go",
        "listener_windows.go",
        "listener_windows_testutil.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/cmd/system-probe/api/server",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:android": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:darwin": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:freebsd": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:illumos": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:ios": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:netbsd": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:openbsd": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:solaris": [
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:windows": [
            "//pkg/util/log",
            "//pkg/util/winutil",
            "@com_github_microsoft_go_winio//:go-winio",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "server_test",
    srcs = ["listener_unix_test.go"],
    embed = [":server"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:darwin": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:dragonfly": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:freebsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:illumos": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:ios": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:netbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:openbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:solaris": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
