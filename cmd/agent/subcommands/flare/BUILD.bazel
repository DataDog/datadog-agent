load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "flare",
    srcs = ["command.go"],
    importpath = "github.com/DataDog/datadog-agent/cmd/agent/subcommands/flare",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/agent/command",
        "//cmd/agent/common",
        "//cmd/agent/subcommands/streamlogs",
        "//comp/aggregator/diagnosesendermanager/diagnosesendermanagerimpl",
        "//comp/api/authtoken/fetchonlyimpl",
        "//comp/collector/collector",
        "//comp/core",
        "//comp/core/autodiscovery/autodiscoveryimpl",
        "//comp/core/config",
        "//comp/core/flare",
        "//comp/core/flare/helpers",
        "//comp/core/flare/types",
        "//comp/core/log/def",
        "//comp/core/profiler/def",
        "//comp/core/profiler/fx",
        "//comp/core/secrets",
        "//comp/core/settings",
        "//comp/core/settings/settingsimpl",
        "//comp/core/sysprobeconfig",
        "//comp/core/sysprobeconfig/sysprobeconfigimpl",
        "//comp/core/tagger/def",
        "//comp/core/tagger/fx",
        "//comp/core/workloadmeta/collectors/catalog",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/fx",
        "//comp/haagent/fx",
        "//comp/metadata/haagent/fx",
        "//comp/metadata/host/hostimpl",
        "//comp/metadata/inventoryagent/inventoryagentimpl",
        "//comp/metadata/inventoryhost/inventoryhostimpl",
        "//comp/metadata/inventoryotel/inventoryotelimpl",
        "//comp/metadata/resources/resourcesimpl",
        "//comp/serializer/logscompression/fx",
        "//comp/serializer/metricscompression/fx",
        "//pkg/api/util",
        "//pkg/config/settings",
        "//pkg/config/setup",
        "//pkg/serializer",
        "//pkg/util/defaultpaths",
        "//pkg/util/fxutil",
        "//pkg/util/input",
        "//pkg/util/option",
        "@com_github_fatih_color//:color",
        "@com_github_spf13_cobra//:cobra",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "flare_test",
    srcs = [
        "command_darwin_test.go",
        "command_other_test.go",
        "command_test.go",
        "command_windows_test.go",
    ],
    embed = [":flare"],
    deps = [
        "//cmd/agent/command",
        "//comp/core",
        "//comp/core/config",
        "//comp/core/flare/types",
        "//comp/core/profiler/def",
        "//comp/core/profiler/fx",
        "//comp/core/profiler/mock",
        "//comp/core/secrets",
        "//comp/core/settings/settingsimpl",
        "//comp/core/sysprobeconfig/sysprobeconfigimpl",
        "//pkg/config/mock",
        "//pkg/config/model",
        "//pkg/util/fxutil",
        "@com_github_stretchr_testify//require",
        "@com_github_stretchr_testify//suite",
        "@org_uber_go_fx//:fx",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//cmd/system-probe/api/server",
        ],
        "//conditions:default": [],
    }),
)
