AWSTemplateFormatVersion: '2010-09-09'
Description: Create an EC2 instance in an isolated VPC for Datadog AgentlessScanner

Parameters:
  DatadogScannerOwner:
    Type: String

  DatadogSecurityGroup:
    Type: String

  DatadogSubnetId:
    Type: String

  DatadogPublicKeyMaterial:
    Type: String

  DatadogAgentlessScannerAMIId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id'

  DatadogAgentlessScannerInstanceType:
    Type: String
    Default: 't4g.medium'

  DatadogSite:
    Type: String
    Description: The Datadog site to use for the Datadog Agentless Scanner
    Default: datad0g.com
    AllowedValues:
      - datad0g.com
      - datadoghq.com
      - datadoghq.eu
      - us3.datadoghq.com
      - us5.datadoghq.com
      - ap1.datadoghq.com
      - ddog-gov.com

  DatadogAPIKey:
    Type: String
    Description: API key for the Datadog account (find at https://app.datadoghq.com/organization-settings/api-keys)
    NoEcho: true

Resources:
  DatadogAgentlessScannerKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub DatadogAgentlessScanner${DatadogScannerOwner}SSHKeyPair
      PublicKeyMaterial: !Ref DatadogPublicKeyMaterial

  DatadogAgentlessScannerAgentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /
      PolicyDocument: !Sub '{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Resource":"arn:aws:iam::${AWS::AccountId}:role/DatadogAgentlessScannerDelegateRole","Sid":"AssumeCrossAccountScanningRole"}],"Version":"2012-10-17"}'

  DatadogAgentlessScannerDelegateRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /
      PolicyDocument: !Sub '{"Statement":[{"Action":"ec2:CreateTags","Condition":{"StringEquals":{"ec2:CreateAction":["CreateSnapshot","CreateVolume"]}},"Effect":"Allow","Resource":["arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:snapshot/*"],"Sid":"DatadogAgentlessScannerResourceTagging"},{"Action":"ec2:CreateSnapshot","Condition":{"StringNotEquals":{"aws:ResourceTag/DatadogAgentlessScanner":"false"}},"Effect":"Allow","Resource":"arn:aws:ec2:*:*:volume/*","Sid":"DatadogAgentlessScannerVolumeSnapshotCreation"},{"Action":"ec2:CreateSnapshot","Condition":{"ForAllValues:StringLike":{"aws:TagKeys":"DatadogAgentlessScanner*"},"StringEquals":{"aws:RequestTag/DatadogAgentlessScanner":"true"}},"Effect":"Allow","Resource":"arn:aws:ec2:*:*:snapshot/*","Sid":"DatadogAgentlessScannerSnapshotCreation"},{"Action":["ec2:DescribeSnapshotAttribute","ec2:DeleteSnapshot","ebs:ListSnapshotBlocks","ebs:ListChangedBlocks","ebs:GetSnapshotBlock"],"Condition":{"StringEquals":{"aws:ResourceTag/DatadogAgentlessScanner":"true"}},"Effect":"Allow","Resource":"arn:aws:ec2:*:*:snapshot/*","Sid":"DatadogAgentlessScannerSnapshotAccessAndCleanup"},{"Action":"ec2:DescribeSnapshots","Effect":"Allow","Resource":"*","Sid":"DatadogAgentlessScannerDescribeSnapshots"},{"Action":"ec2:DescribeVolumes","Effect":"Allow","Resource":"*","Sid":"DatadogAgentlessScannerDescribeVolumes"},{"Action":"lambda:GetFunction","Effect":"Allow","Resource":"arn:aws:lambda:*:*:function:*","Sid":"GetLambdaDetails"}],"Version":"2012-10-17"}'

  DatadogAgentlessScannerDelegateRolePolicyOffline:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ec2:CreateVolume
          Condition:
            ForAllValues:StringLike:
              aws:TagKeys: DatadogAgentlessScanner*
            StringEquals:
              aws:RequestTag/DatadogAgentlessScanner: 'true'
          Effect: Allow
          Resource: arn:aws:ec2:*:*:volume/*
          Sid: DatadogAgentlessScannerVolumeCreation
        - Action:
          - ec2:DetachVolume
          - ec2:AttachVolume
          Condition:
            StringEquals:
              aws:ResourceTag/DatadogAgentlessScanner: 'true'
          Effect: Allow
          Resource: arn:aws:ec2:*:*:instance/*
          Sid: DatadogAgentlessScannerVolumeAttachToInstance
        - Action:
          - ec2:DetachVolume
          - ec2:DeleteVolume
          - ec2:AttachVolume
          Condition:
            StringEquals:
              aws:ResourceTag/DatadogAgentlessScanner: 'true'
          Effect: Allow
          Resource: arn:aws:ec2:*:*:volume/*
          Sid: DatadogAgentlessScannerVolumeAttachAndDelete
        - Action: lambda:ListFunctions
          Effect: Allow
          Resource: '*'
          Sid: ListLambdas
        - Action: ec2:DescribeInstances
          Effect: Allow
          Resource: '*'
          Sid: DatadogAgentlessScannerOfflineModeLambdas
        - Action: ec2:DescribeRegions
          Effect: Allow
          Resource: '*'
          Sid: DatadogAgentlessScannerOfflineModeRegions
        - Action: ec2:DescribeVolumes
          Effect: Allow
          Resource: '*'
          Sid: DatadogAgentlessScannerDescribeVolumes
        - Action: ec2:DescribeImages
          Effect: Allow
          Resource: '*'
          Sid: DatadogAgentlessScannerDescribeImages
        - Action: ec2:CopySnapshot
          Effect: Allow
          Condition:
            ForAllValues:StringLike:
              aws:TagKeys: DatadogAgentlessScanner*
            StringEquals:
              aws:RequestTag/DatadogAgentlessScanner: 'true'
          Resource: arn:aws:ec2:*:*:snapshot/*
          Sid: DatadogAgentlessScannerCopySnapshot

  DatadogAgentlessInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: !Sub '{"Version":"2012-10-17","Statement":[{"Sid":"EC2AssumeRole","Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}'
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - !Ref 'DatadogAgentlessScannerAgentPolicy'
      Description: Role used by the Datadog agentless scanner instance
      Tags:
        - Key: Datadog
          Value: 'true'
        - Key: DatadogAgentlessScanner
          Value: 'true'

  DatadogAgentlessScannerDelegateRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub 'DatadogAgentlessScanner${DatadogScannerOwner}DelegateRole'
      AssumeRolePolicyDocument: !Sub
        - '{"Version":"2012-10-17","Statement":[{"Sid":"EC2AssumeRole","Effect":"Allow","Principal":{"AWS":"${InstanceRoleArn}"},"Action":"sts:AssumeRole"}]}'
        - InstanceRoleArn: !GetAtt DatadogAgentlessInstanceRole.Arn
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - !Ref 'DatadogAgentlessScannerDelegateRolePolicy'
        - !Ref 'DatadogAgentlessScannerDelegateRolePolicyOffline'
      Description: Role assumed by the Datadog Agentless scanner agent to perform scans
      Tags:
        - Key: DatadogAgentlessScanner
          Value: 'true'
        - Key: Datadog
          Value: 'true'
    DependsOn:
      - DatadogAgentlessInstanceRole

  DatadogAgentlessScannerAgentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref DatadogAgentlessInstanceRole

  DatadogAgentlessScannerAgentInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref DatadogAgentlessScannerInstanceType
      KeyName: !Ref DatadogAgentlessScannerKeyPair
      IamInstanceProfile: !Ref DatadogAgentlessScannerAgentInstanceProfile
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          DeleteOnTermination: true
          Encrypted: true
          VolumeSize: 30
          VolumeType: gp2
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              set +x
              set -u
              set -e
              set -o pipefail

              echo "agentless-scanning-${DatadogScannerOwner}-${AWS::Region}" > /etc/hostname
              DD_API_KEY="${DatadogAPIKey}"

              # Install requirements
              apt update
              apt install -y nbd-client

              # Install the agent
              DD_API_KEY=$DD_API_KEY \
                DD_SITE="${DatadogSite}" \
                DD_HOSTNAME="agentless-scanning-${DatadogScannerOwner}-${AWS::Region}" \
                DD_AGENT_MINOR_VERSION="50.3" \
                bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

              # Patch agent configuration
              sed -i '/.*logs_enabled:.*/a logs_enabled: true'           /etc/datadog-agent/datadog.yaml
              sed -i '/.*ec2_prefer_imdsv2:.*/a ec2_prefer_imdsv2: true' /etc/datadog-agent/datadog.yaml

              # Adding automatic reboot on kernel updates
              cat << EOF >> /etc/apt/apt.conf.d/50unattended-upgrades
              Unattended-Upgrade::Automatic-Reboot "true";
              Unattended-Upgrade::Automatic-Reboot-WithUsers "true";
              Unattended-Upgrade::Automatic-Reboot-Time "now";
              EOF

              # Activate agentless scanner logging
              mkdir -p /etc/datadog-agent/conf.d/agentless-scanner.d
              cat <<EOF > /etc/datadog-agent/conf.d/agentless-scanner.d/conf.yaml
              logs:
                - type: file
                  path: "/var/log/datadog/agentless-scanner.log"
                  service: "agentless-scanner"
                  source: "datadog-agent"
              EOF

              chown -R dd-agent: /etc/datadog-agent/conf.d/agentless-scanner.d

              # Restart the agent
              service datadog-agent restart

              cat << EOF >> /etc/datadog-agent/datadog.yaml
              agentless_scanner:
                default_roles:
                - "${DelegateRoleArn}"
              EOF
            - DelegateRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/DatadogAgentlessScanner${DatadogScannerOwner}DelegateRole'
      SecurityGroupIds:
        - !Ref DatadogSecurityGroup
      SubnetId: !Ref DatadogSubnetId
      ImageId: !Ref DatadogAgentlessScannerAMIId
      Tags:
        - Key: Name
          Value: !Sub DatadogAgentlessScanner${DatadogScannerOwner}RootInstance
        - Key: DatadogAgentlessScanner
          Value: "true"
        - Key: please_keep_my_resource
          Value: "true"
