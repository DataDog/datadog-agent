# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/daemonset.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog
  labels: {}
spec:
  selector:
    matchLabels:
      app: datadog
  template:
    metadata:
      labels:
        app: datadog
      name: datadog
      annotations:
        container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
        container.seccomp.security.alpha.kubernetes.io/system-probe: localhost/system-probe
    spec:
      hostPID: true
      containers:
      - name: agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["agent", "run"]
        resources: {}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: datadog-cluster-agent
              key: token
        - name: DD_APM_ENABLED
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "false"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "true"
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_EXTRA_CONFIG_PROVIDERS
          value: "clusterchecks endpointschecks"
        volumeMounts:
        - name: installinfo
          subPath: install_info
          mountPath: /etc/datadog-agent/install_info
          readOnly: true
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: config
          mountPath: /etc/datadog-agent
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        - name: pointerdir
          mountPath: /opt/datadog-agent/run
          mountPropagation: None
        - name: logpodpath
          mountPath: /var/log/pods
          mountPropagation: None
          readOnly: true
        - name: logdockercontainerpath
          mountPath: /var/lib/docker/containers
          mountPropagation: None
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      - name: trace-agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["trace-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources: {}
        ports:
        - containerPort: 8126
          hostPort: 8126
          name: traceport
          protocol: TCP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: datadog-cluster-agent
              key: token
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_APM_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_APM_RECEIVER_PORT
          value: "8126"
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          tcpSocket:
            port: 8126
          timeoutSeconds: 5
      - name: process-agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["process-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources: {}
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: datadog-cluster-agent
              key: token
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "true"
        - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
          value: "true"
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "true"
        - name: DD_ORCHESTRATOR_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: datadog-cluster-id
              key: id
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        - name: passwd
          mountPath: /etc/passwd
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: sysprobe-socket-dir
          mountPath: /var/run/sysprobe
          readOnly: true
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
      - name: system-probe
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_PTRACE
            - NET_ADMIN
            - NET_BROADCAST
            - NET_RAW
            - IPC_LOCK
          privileged: false
        command: ["/opt/datadog-agent/embedded/bin/system-probe", "--config=/etc/datadog-agent/system-probe.yaml"]
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        resources: {}
        volumeMounts:
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: debugfs
          mountPath: /sys/kernel/debug
          mountPropagation: None
        - name: config
          mountPath: /etc/datadog-agent
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
        - name: sysprobe-socket-dir
          mountPath: /var/run/sysprobe
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
      - name: security-agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add: ["AUDIT_CONTROL", "AUDIT_READ"]
        command: ["security-agent", "start", "-c=/etc/datadog-agent/datadog.yaml"]
        resources: {}
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_COMPLIANCE_CONFIG_ENABLED
          value: "true"
        - name: DD_COMPLIANCE_CONFIG_CHECK_INTERVAL
          value: "20m"
        - name: HOST_ROOT
          value: /host/root
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: datadog-cluster-agent
              key: token
        - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
          value: "true"
        - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
          value: "/etc/datadog-agent/runtime-security.d"
        - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
          value: /var/run/sysprobe/runtime-security.sock
        - name: DD_RUNTIME_SECURITY_CONFIG_SYSCALL_MONITOR_ENABLED
          value: "false"
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: runtimesocketdir
          mountPath: /host/var/run
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          readOnly: true
        - name: passwd
          mountPath: /etc/passwd
          readOnly: true
        - name: group
          mountPath: /etc/group
          readOnly: true
        - name: hostroot
          mountPath: /host/root
          readOnly: true
        - name: runtimesocketdir
          mountPath: /host/root/var/run
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          readOnly: true
        - name: sysprobe-socket-dir
          mountPath: /var/run/sysprobe
          readOnly: true
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
      initContainers:
      - name: init-volume
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - cp -r /etc/datadog-agent /opt
        volumeMounts:
        - name: config
          mountPath: /opt/datadog-agent
        resources: {}
      - name: init-config
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        resources: {}
      - name: seccomp-setup
        image: "gcr.io/datadoghq/agent:7.26.0"
        command:
        - cp
        - /etc/config/system-probe-seccomp.json
        - /host/var/lib/kubelet/seccomp/system-probe
        volumeMounts:
        - name: datadog-agent-security
          mountPath: /etc/config
        - name: seccomp-root
          mountPath: /host/var/lib/kubelet/seccomp
          mountPropagation: None
        resources: {}
      volumes:
      - name: installinfo
        configMap:
          name: datadog-installinfo
      - name: config
        emptyDir: {}
      - hostPath:
          path: /var/run
        name: runtimesocketdir
      - name: tmpdir
        emptyDir: {}
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - name: s6-run
        emptyDir: {}
      - name: sysprobe-config
        configMap:
          name: datadog-system-probe-config
      - name: datadog-agent-security
        configMap:
          name: datadog-security
      - hostPath:
          path: /var/lib/kubelet/seccomp
        name: seccomp-root
      - hostPath:
          path: /sys/kernel/debug
        name: debugfs
      - name: sysprobe-socket-dir
        emptyDir: {}
      - hostPath:
          path: /etc/passwd
        name: passwd
      - hostPath:
          path: /etc/group
        name: group
      - hostPath:
          path: /
        name: hostroot
      - hostPath:
          path: /var/lib/datadog-agent/logs
        name: pointerdir
      - hostPath:
          path: /var/log/pods
        name: logpodpath
      - hostPath:
          path: /var/lib/docker/containers
        name: logdockercontainerpath
      tolerations:
      affinity: {}
      serviceAccountName: datadog
      nodeSelector:
        kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
