name: test devcontainer

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: "${{ steps.check-changes.outcome == 'success' }}"

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Check for build images changes
      id: check-changes
      env:
        GH_TOKEN: "${{ github.token }}"
      run: >-
        gh pr diff "${{ github.event.pull_request.number }}" | grep -E "^[-+] +CI_IMAGE_[^:]+: v"
      continue-on-error: true

  test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.changes == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
        fetch-depth: 1000
        fetch-tags: true

    - name: Setup Node.js
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0

    - name: Install dda
      uses: ./.github/actions/install-dda
      with:
        features: legacy-tasks

    - name: Free disk space
      run: |
        df -h
        echo "::group::Android"
        sudo rm -rf /usr/local/lib/android
        echo "::endgroup::"
        echo "::group::.NET"
        sudo rm -rf /usr/share/dotnet
        echo "::endgroup::"
        echo "::group::Haskell"
        sudo rm -rf /opt/ghc
        echo "::endgroup::"
        echo "::group::CodeQL"
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        echo "::endgroup::"
        df -h

    - name: Build image
      run: |
        git clone https://github.com/DataDog/datadog-agent-buildimages.git
        cd datadog-agent-buildimages
        dda run build devcontainer legacy-devenv

    - name: Create Dev Container config
      run: dda inv -- devcontainer.setup --image legacy-devenv

    - name: Ensure mount paths exist
      run: |
        mkdir -p ~/.ssh

    - name: Install Dev Container CLI
      run: npm install -g @devcontainers/cli

    - name: Start Dev Container
      run: devcontainer up --workspace-folder .

    - name: Grant the datadog user access to host Docker socket
      run: |
        docker exec -u root datadog_agent_devcontainer sh -lc '
          set -e
          sock=/var/run/docker.sock
          gid=$(stat -c %g "$sock")
          getent group "$gid" >/dev/null || groupadd -g "$gid" dockersock
          gname=$(getent group "$gid" | cut -d: -f1)
          id -nG datadog | tr " " "\n" | grep -qx "$gname" || usermod -aG "$gname" datadog
        '

    - name: Test Agent build
      run: devcontainer exec --workspace-folder . dda inv agent.hacky-dev-image-build --target-image=agent
