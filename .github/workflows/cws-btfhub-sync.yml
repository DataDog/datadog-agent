name: "CWS BTFHub constants sync"

on: push

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout datadog-agent repository
        uses: actions/checkout@v3

      - name: Checkout btfhub-archive repository
        uses: actions/checkout@v3
        with:
          repository: aquasecurity/btfhub-archive
          path: dev/dist/archive

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.10'
          cache: 'pip'

      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17.11'

      - name: Install python requirements
        run: pip install -r requirements.txt

      - name: Cache go dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install go deps
        run: inv -e deps

      - name: Sync constants
        run: inv -e security-agent.generate-btfhub-constants --archive-path=./dev/dist/archive

      - name: Debug
        run:
          echo "HELLO" >> pkg/security/api/README.md

      - name: Check if git is dirty
        id: git-dirty-check
        run: |
          set +e
          git diff --no-ext-diff --quiet --exit-code
          echo "::set-output name=IS_DIRTY::$?"

      - name: Create Pull Request
        uses: actions/github-script@v6
        if: steps.random-color-generator.outputs != 0
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'CWS: sync btfhub constants',
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'main',
              body: [
                'This PR syncs the BTFHub constants used by CWS',
                'autogenerated test'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['changelog/no-changelog', 'qa/skip-qa', 'team/agent-security']
            });
