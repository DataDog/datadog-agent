// Code generated by "stringer -output cubin_string.go -type=nvInfoAttr,nvInfoFormat -linecomment"; DO NOT EDIT.

package cuda

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[nviAttrError-0]
	_ = x[nviAttrPad-1]
	_ = x[nviAttrImageSlot-2]
	_ = x[nviAttrJumptableRelocs-3]
	_ = x[nviAttrCtaidzUsed-4]
	_ = x[nviAttrMaxThreads-5]
	_ = x[nviAttrImageOffset-6]
	_ = x[nviAttrImageSize-7]
	_ = x[nviAttrTextureNormalized-8]
	_ = x[nviAttrSamplerInit-9]
	_ = x[nviAttrParamCbank-10]
	_ = x[nviAttrSmemParamOffsets-11]
	_ = x[nviAttrCbankParamOffsets-12]
	_ = x[nviAttrSyncStack-13]
	_ = x[nviAttrTexidSampidMap-14]
	_ = x[nviAttrExterns-15]
	_ = x[nviAttrReqntid-16]
	_ = x[nviAttrFrameSize-17]
	_ = x[nviAttrMinStackSize-18]
	_ = x[nviAttrSamplerForceUnnormalized-19]
	_ = x[nviAttrBindlessImageOffsets-20]
	_ = x[nviAttrBindlessTextureBank-21]
	_ = x[nviAttrBindlessSurfaceBank-22]
	_ = x[nviAttrKparamInfo-23]
	_ = x[nviAttrSmemParamSize-24]
	_ = x[nviAttrCbankParamSize-25]
	_ = x[nviAttrQueryNumattrib-26]
	_ = x[nviAttrMaxregCount-27]
	_ = x[nviAttrExitInstrOffsets-28]
	_ = x[nviAttrS2rctaidInstrOffsets-29]
	_ = x[nviAttrCrsStackSize-30]
	_ = x[nviAttrNeedCnpWrapper-31]
	_ = x[nviAttrNeedCnpPatch-32]
	_ = x[nviAttrExplicitCaching-33]
	_ = x[nviAttrIstypepUsed-34]
	_ = x[nviAttrMaxStackSize-35]
	_ = x[nviAttrSuqUsed-36]
	_ = x[nviAttrLdCachemodInstrOffsets-37]
	_ = x[nviAttrLoadCacheRequest-38]
	_ = x[nviAttrAtomSysInstrOffsets-39]
	_ = x[nviAttrCoopGroupInstrOffsets-40]
	_ = x[nviAttrCoopGroupMaxRegids-41]
	_ = x[nviAttrSw1850030War-42]
	_ = x[nviAttrWmmaUsed-43]
	_ = x[nviAttrHasPreV10Object-44]
	_ = x[nviAttrAtomf16EmulInstrOffsets-45]
	_ = x[nviAttrAtom16EmulInstrRegMap-46]
	_ = x[nviAttrRegcount-47]
	_ = x[nviAttrSw2393858War-48]
	_ = x[nviAttrIntWarpWideInstrOffsets-49]
	_ = x[nviAttrSharedScratch-50]
	_ = x[nviAttrStatistics-51]
	_ = x[nviAttrIndirectBranchTargets-52]
	_ = x[nviAttrSw2861232War-53]
	_ = x[nviAttrSwWar-54]
	_ = x[nviAttrCudaAPIVersion-55]
	_ = x[nviAttrNumMbarriers-56]
	_ = x[nviAttrMbarrierInstrOffsets-57]
	_ = x[nviAttrCoroutineResumeIDOffsets-58]
	_ = x[nviAttrSamRegionStackSize-59]
	_ = x[nviAttrPerRegTargetPerfStats-60]
	_ = x[nviAttrCtaPerCluster-61]
	_ = x[nviAttrExplicitCluster-62]
	_ = x[nviAttrMaxClusterRank-63]
	_ = x[nviAttrInstrRegMap-64]
}

const _nvInfoAttr_name = "nviAttrErrornviAttrPadnviAttrImageSlotnviAttrJumptableRelocsnviAttrCtaidzUsednviAttrMaxThreadsnviAttrImageOffsetnviAttrImageSizenviAttrTextureNormalizednviAttrSamplerInitnviAttrParamCbanknviAttrSmemParamOffsetsnviAttrCbankParamOffsetsnviAttrSyncStacknviAttrTexidSampidMapnviAttrExternsnviAttrReqntidnviAttrFrameSizenviAttrMinStackSizenviAttrSamplerForceUnnormalizednviAttrBindlessImageOffsetsnviAttrBindlessTextureBanknviAttrBindlessSurfaceBanknviAttrKparamInfonviAttrSmemParamSizenviAttrCbankParamSizenviAttrQueryNumattribnviAttrMaxregCountnviAttrExitInstrOffsetsnviAttrS2rctaidInstrOffsetsnviAttrCrsStackSizenviAttrNeedCnpWrappernviAttrNeedCnpPatchnviAttrExplicitCachingnviAttrIstypepUsednviAttrMaxStackSizenviAttrSuqUsednviAttrLdCachemodInstrOffsetsnviAttrLoadCacheRequestnviAttrAtomSysInstrOffsetsnviAttrCoopGroupInstrOffsetsnviAttrCoopGroupMaxRegidsnviAttrSw1850030WarnviAttrWmmaUsednviAttrHasPreV10ObjectnviAttrAtomf16EmulInstrOffsetsnviAttrAtom16EmulInstrRegMapnviAttrRegcountnviAttrSw2393858WarnviAttrIntWarpWideInstrOffsetsnviAttrSharedScratchnviAttrStatisticsnviAttrIndirectBranchTargetsnviAttrSw2861232WarnviAttrSwWarnviAttrCudaAPIVersionnviAttrNumMbarriersnviAttrMbarrierInstrOffsetsnviAttrCoroutineResumeIDOffsetsnviAttrSamRegionStackSizenviAttrPerRegTargetPerfStatsnviAttrCtaPerClusternviAttrExplicitClusternviAttrMaxClusterRanknviAttrInstrRegMap"

var _nvInfoAttr_index = [...]uint16{0, 12, 22, 38, 60, 77, 94, 112, 128, 152, 170, 187, 210, 234, 250, 271, 285, 299, 315, 334, 365, 392, 418, 444, 461, 481, 502, 523, 541, 564, 591, 610, 631, 650, 672, 690, 709, 723, 752, 775, 801, 829, 854, 873, 888, 910, 940, 968, 983, 1002, 1032, 1052, 1069, 1097, 1116, 1128, 1149, 1168, 1195, 1226, 1251, 1279, 1299, 1321, 1342, 1360}

func (i nvInfoAttr) String() string {
	if i >= nvInfoAttr(len(_nvInfoAttr_index)-1) {
		return "nvInfoAttr(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _nvInfoAttr_name[_nvInfoAttr_index[i]:_nvInfoAttr_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[nviFmtNone-1]
	_ = x[nviFmtBval-2]
	_ = x[nviFmtHval-3]
	_ = x[nviFmtSval-4]
}

const _nvInfoFormat_name = "nviFmtNonenviFmtBvalnviFmtHvalnviFmtSval"

var _nvInfoFormat_index = [...]uint8{0, 10, 20, 30, 40}

func (i nvInfoFormat) String() string {
	i -= 1
	if i >= nvInfoFormat(len(_nvInfoFormat_index)-1) {
		return "nvInfoFormat(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _nvInfoFormat_name[_nvInfoFormat_index[i]:_nvInfoFormat_index[i+1]]
}
