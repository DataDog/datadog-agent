load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "controllers",
    srcs = [
        "controller_util.go",
        "controllers.go",
        "hpa_controller.go",
        "metadata_controller.go",
        "names.go",
        "store.go",
        "wpa_controller.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/util/kubernetes/apiserver/controllers",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/autoscaling/datadogclient/def",
        "//comp/core/workloadmeta/def",
        "//pkg/clusteragent/autoscaling/custommetrics",
        "//pkg/config/setup",
        "//pkg/errors",
        "//pkg/util/cache",
        "//pkg/util/kubernetes/apiserver",
        "//pkg/util/kubernetes/apiserver/common",
        "//pkg/util/kubernetes/autoscalers",
        "//pkg/util/log",
        "//pkg/util/option",
        "@com_github_cenkalti_backoff//:backoff",
        "@com_github_datadog_watermarkpodautoscaler_apis//datadoghq/v1alpha1",
        "@com_github_patrickmn_go_cache//:go-cache",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//discovery/v1:discovery",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/util/errors",
        "@io_k8s_apimachinery//pkg/util/sets",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//listers/core/v1:core",
        "@io_k8s_client_go//listers/discovery/v1:discovery",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_client_go//util/workqueue",
    ],
)

go_test(
    name = "controllers_test",
    srcs = [
        "hpa_controller_test.go",
        "metadata_controller_test.go",
        "wpa_controller_test.go",
    ],
    embed = [":controllers"],
    deps = [
        "//comp/autoscaling/datadogclient/mock",
        "//comp/core/config",
        "//comp/core/log/def",
        "//comp/core/log/mock",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/fx-mock",
        "//comp/core/workloadmeta/mock",
        "//pkg/clusteragent/api/v1:api",
        "//pkg/clusteragent/autoscaling/custommetrics",
        "//pkg/config/mock",
        "//pkg/errors",
        "//pkg/util/fxutil",
        "//pkg/util/kubernetes/apiserver",
        "//pkg/util/kubernetes/autoscalers",
        "//pkg/util/log",
        "//pkg/util/pointer",
        "//pkg/util/testutil",
        "@com_github_cenkalti_backoff//:backoff",
        "@com_github_datadog_watermarkpodautoscaler_apis//datadoghq/v1alpha1",
        "@com_github_patrickmn_go_cache//:go-cache",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@in_gopkg_zorkian_go_datadog_api_v2//:go-datadog-api_v2",
        "@io_k8s_api//autoscaling/v2beta1",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//discovery/v1:discovery",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/sets",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//dynamic/fake",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/fake",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_client_go//util/retry",
        "@org_uber_go_fx//:fx",
    ],
)
