load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "kubelet",
    srcs = [
        "diagnosis.go",
        "doc.go",
        "json.go",
        "kubelet.go",
        "kubelet_client.go",
        "kubelet_common.go",
        "kubelet_hosts.go",
        "kubelet_interface.go",  # keep
        "kubelet_orchestrator.go",
        "metadata.go",
        "pod.go",
        "podwatcher.go",
        "telemetry.go",
        "types_kubelet.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/util/kubernetes/kubelet",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/config",
        "//pkg/diagnose/diagnosis",
        "//pkg/errors",
        "//pkg/telemetry",
        "//pkg/util/cache",
        "//pkg/util/containers",
        "//pkg/util/docker",
        "//pkg/util/filesystem",
        "//pkg/util/kubernetes",
        "//pkg/util/log",
        "//pkg/util/retry",
        "@com_github_json_iterator_go//:go",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//transport",
        "@io_k8s_kubelet//pkg/apis/stats/v1alpha1",
    ],
)

go_test(
    name = "kubelet_test",
    srcs = [
        "kubelet_common_test.go",
        "kubelet_hosts_test.go",
        "kubelet_orchestrator_test.go",
        "kubelet_test.go",
        "pod_test.go",
        "podwatcher_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":kubelet"],
    deps = [
        "//pkg/config",
        "//pkg/errors",
        "//pkg/util/log",
        "@com_github_json_iterator_go//:go",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@com_github_stretchr_testify//suite",
    ],
)
