load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "cri",
    srcs = [
        "common.go",
        "conversion.go",
        "diagnosis.go",
        "metadata.go",
        "util.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/util/containers/cri",
    visibility = ["//visibility:public"],
    deps = [
        "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/util",
        "//pkg/config",
        "//pkg/diagnose/diagnosis",
        "//pkg/util/log",
        "//pkg/util/retry",
        "@io_k8s_cri_api//pkg/apis/runtime/v1:runtime",
        "@io_k8s_cri_api//pkg/apis/runtime/v1alpha2",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "cri_test",
    srcs = ["util_test.go"],
    embed = [":cri"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:darwin": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:freebsd": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:illumos": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:ios": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:js": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:netbsd": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:openbsd": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:plan9": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:solaris": [
            "//internal/third_party/kubernetes/pkg/kubelet/cri/remote/fake",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
