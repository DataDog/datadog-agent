load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "containerd",
    srcs = [
        "collector.go",
        "collector_cgroupv1.go",
        "collector_cgroupv2.go",
        "collector_linux.go",
        "collector_windows.go",
        "doc.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/util/containers/metrics/containerd",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//comp/core/workloadmeta",
            "//pkg/config",
            "//pkg/util/cgroups",
            "//pkg/util/containerd",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/log",
            "//pkg/util/optional",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_cgroups_v3//cgroup1/stats",
            "@com_github_containerd_cgroups_v3//cgroup2/stats",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_opencontainers_runtime_spec//specs-go",
            "@org_golang_google_protobuf//types/known/anypb",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/workloadmeta",
            "//pkg/config",
            "//pkg/util/cgroups",
            "//pkg/util/containerd",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/log",
            "//pkg/util/optional",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_cgroups_v3//cgroup1/stats",
            "@com_github_containerd_cgroups_v3//cgroup2/stats",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_opencontainers_runtime_spec//specs-go",
            "@org_golang_google_protobuf//types/known/anypb",
        ],
        "@rules_go//go/platform:windows": [
            "//comp/core/workloadmeta",
            "//pkg/config",
            "//pkg/util/containerd",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/log",
            "//pkg/util/optional",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_microsoft_hcsshim//cmd/containerd-shim-runhcs-v1/stats",
            "@org_golang_google_protobuf//types/known/anypb",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "containerd_test",
    srcs = [
        "collector_linux_test.go",
        "collector_test.go",
        "collector_windows_test.go",
    ],
    embed = [":containerd"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//comp/core/config",
            "//comp/core/log/logimpl",
            "//comp/core/workloadmeta",
            "//pkg/util/containerd/fake",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/fxutil",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_cgroups_v3//cgroup1/stats",
            "@com_github_containerd_cgroups_v3//cgroup2/stats",
            "@com_github_containerd_containerd//:containerd",
            "@com_github_containerd_containerd//api/types",
            "@com_github_containerd_containerd//containers",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_google_go_cmp//cmp",
            "@com_github_opencontainers_runtime_spec//specs-go",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
            "@org_golang_google_protobuf//types/known/anypb",
            "@org_uber_go_fx//:fx",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/config",
            "//comp/core/log/logimpl",
            "//comp/core/workloadmeta",
            "//pkg/util/containerd/fake",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/fxutil",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_cgroups_v3//cgroup1/stats",
            "@com_github_containerd_cgroups_v3//cgroup2/stats",
            "@com_github_containerd_containerd//:containerd",
            "@com_github_containerd_containerd//api/types",
            "@com_github_containerd_containerd//containers",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_google_go_cmp//cmp",
            "@com_github_opencontainers_runtime_spec//specs-go",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
            "@org_golang_google_protobuf//types/known/anypb",
            "@org_uber_go_fx//:fx",
        ],
        "@rules_go//go/platform:windows": [
            "//comp/core/config",
            "//comp/core/log/logimpl",
            "//comp/core/workloadmeta",
            "//pkg/util/containerd/fake",
            "//pkg/util/containers/metrics/provider",
            "//pkg/util/fxutil",
            "//pkg/util/pointer",
            "//pkg/util/system",
            "@com_github_containerd_containerd//:containerd",
            "@com_github_containerd_containerd//api/types",
            "@com_github_containerd_containerd//containers",
            "@com_github_containerd_containerd//oci",
            "@com_github_containerd_typeurl_v2//:typeurl",
            "@com_github_google_go_cmp//cmp",
            "@com_github_microsoft_hcsshim//cmd/containerd-shim-runhcs-v1/stats",
            "@com_github_opencontainers_runtime_spec//specs-go",
            "@com_github_stretchr_testify//assert",
            "@org_golang_google_protobuf//types/known/anypb",
            "@org_golang_google_protobuf//types/known/timestamppb",
            "@org_uber_go_fx//:fx",
        ],
        "//conditions:default": [],
    }),
)
