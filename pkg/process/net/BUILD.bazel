load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "net",
    srcs = [
        "check.go",
        "check_windows.go",
        "common.go",
        "common_all.go",
        "common_linux.go",
        "common_unsupported.go",
        "common_windows.go",
        "shared.go",
        "uds.go",
        "windows_pipe.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/process/net",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_datadog_agent_payload_v5//process",
    ] + select({
        "@rules_go//go/platform:aix": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:android": [
            "//cmd/system-probe/config",
            "//cmd/system-probe/config/types",
            "//pkg/collector/corechecks/ebpf/probe/ebpfcheck/model",
            "//pkg/collector/corechecks/ebpf/probe/oomkill/model",
            "//pkg/collector/corechecks/ebpf/probe/tcpqueuelength/model",
            "//pkg/languagedetection/languagemodels",
            "//pkg/network/encoding/unmarshal",
            "//pkg/process/encoding",
            "//pkg/process/encoding/request",
            "//pkg/proto/pbgo/languagedetection",
            "//pkg/proto/pbgo/process",
            "//pkg/util/filesystem",
            "//pkg/util/log",
            "//pkg/util/retry",
            "@org_golang_google_protobuf//proto",
        ],
        "@rules_go//go/platform:darwin": [
            "//pkg/languagedetection/languagemodels",
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:freebsd": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:illumos": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:ios": [
            "//pkg/languagedetection/languagemodels",
            "//pkg/util/filesystem",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:js": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:linux": [
            "//cmd/system-probe/config",
            "//cmd/system-probe/config/types",
            "//pkg/collector/corechecks/ebpf/probe/ebpfcheck/model",
            "//pkg/collector/corechecks/ebpf/probe/oomkill/model",
            "//pkg/collector/corechecks/ebpf/probe/tcpqueuelength/model",
            "//pkg/languagedetection/languagemodels",
            "//pkg/network/encoding/unmarshal",
            "//pkg/process/encoding",
            "//pkg/process/encoding/request",
            "//pkg/proto/pbgo/languagedetection",
            "//pkg/proto/pbgo/process",
            "//pkg/util/filesystem",
            "//pkg/util/log",
            "//pkg/util/retry",
            "@org_golang_google_protobuf//proto",
        ],
        "@rules_go//go/platform:netbsd": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:openbsd": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:plan9": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:solaris": [
            "//pkg/languagedetection/languagemodels",
        ],
        "@rules_go//go/platform:windows": [
            "//cmd/system-probe/config",
            "//cmd/system-probe/config/types",
            "//pkg/collector/corechecks/system/wincrashdetect/probe",
            "//pkg/languagedetection/languagemodels",
            "//pkg/network/encoding/unmarshal",
            "//pkg/process/encoding",
            "//pkg/process/encoding/request",
            "//pkg/proto/pbgo/languagedetection",
            "//pkg/proto/pbgo/process",
            "//pkg/util/log",
            "//pkg/util/retry",
            "@org_golang_google_protobuf//proto",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "net_test",
    srcs = ["uds_test.go"],
    embed = [":net"],
    deps = select({
        "@rules_go//go/platform:android": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
