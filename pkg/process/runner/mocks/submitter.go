// Code generated by mockery v2.32.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"

	types "github.com/DataDog/datadog-agent/comp/process/types"
)

// Submitter is an autogenerated mock type for the Submitter type
type Submitter struct {
	mock.Mock
}

// Start provides a mock function with given fields:
func (_m *Submitter) Start() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *Submitter) Stop() {
	_m.Called()
}

// Submit provides a mock function with given fields: start, name, messages
func (_m *Submitter) Submit(start time.Time, name string, messages *types.Payload) {
	_m.Called(start, name, messages)
}

// NewSubmitter creates a new instance of Submitter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSubmitter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Submitter {
	mock := &Submitter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
