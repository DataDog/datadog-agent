// Code generated by mockery v2.49.2. DO NOT EDIT.

package mocks

import (
	api "github.com/DataDog/datadog-agent/pkg/security/proto/api"
	empty "github.com/golang/protobuf/ptypes/empty"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)

// SecurityModuleEventServer is an autogenerated mock type for the SecurityModuleEventServer type
type SecurityModuleEventServer struct {
	mock.Mock
}

type SecurityModuleEventServer_Expecter struct {
	mock *mock.Mock
}

func (_m *SecurityModuleEventServer) EXPECT() *SecurityModuleEventServer_Expecter {
	return &SecurityModuleEventServer_Expecter{mock: &_m.Mock}
}

// GetActivityDumpStream provides a mock function with given fields: _a0, _a1
func (_m *SecurityModuleEventServer) GetActivityDumpStream(_a0 *empty.Empty, _a1 grpc.ServerStreamingServer[api.ActivityDumpStreamMessage]) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetActivityDumpStream")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*empty.Empty, grpc.ServerStreamingServer[api.ActivityDumpStreamMessage]) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecurityModuleEventServer_GetActivityDumpStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetActivityDumpStream'
type SecurityModuleEventServer_GetActivityDumpStream_Call struct {
	*mock.Call
}

// GetActivityDumpStream is a helper method to define mock.On call
//   - _a0 *empty.Empty
//   - _a1 grpc.ServerStreamingServer[api.ActivityDumpStreamMessage]
func (_e *SecurityModuleEventServer_Expecter) GetActivityDumpStream(_a0 interface{}, _a1 interface{}) *SecurityModuleEventServer_GetActivityDumpStream_Call {
	return &SecurityModuleEventServer_GetActivityDumpStream_Call{Call: _e.mock.On("GetActivityDumpStream", _a0, _a1)}
}

func (_c *SecurityModuleEventServer_GetActivityDumpStream_Call) Run(run func(_a0 *empty.Empty, _a1 grpc.ServerStreamingServer[api.ActivityDumpStreamMessage])) *SecurityModuleEventServer_GetActivityDumpStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*empty.Empty), args[1].(grpc.ServerStreamingServer[api.ActivityDumpStreamMessage]))
	})
	return _c
}

func (_c *SecurityModuleEventServer_GetActivityDumpStream_Call) Return(_a0 error) *SecurityModuleEventServer_GetActivityDumpStream_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SecurityModuleEventServer_GetActivityDumpStream_Call) RunAndReturn(run func(*empty.Empty, grpc.ServerStreamingServer[api.ActivityDumpStreamMessage]) error) *SecurityModuleEventServer_GetActivityDumpStream_Call {
	_c.Call.Return(run)
	return _c
}

// GetEventStream provides a mock function with given fields: _a0, _a1
func (_m *SecurityModuleEventServer) GetEventStream(_a0 *empty.Empty, _a1 grpc.ServerStreamingServer[api.SecurityEventMessage]) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetEventStream")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*empty.Empty, grpc.ServerStreamingServer[api.SecurityEventMessage]) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecurityModuleEventServer_GetEventStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEventStream'
type SecurityModuleEventServer_GetEventStream_Call struct {
	*mock.Call
}

// GetEventStream is a helper method to define mock.On call
//   - _a0 *empty.Empty
//   - _a1 grpc.ServerStreamingServer[api.SecurityEventMessage]
func (_e *SecurityModuleEventServer_Expecter) GetEventStream(_a0 interface{}, _a1 interface{}) *SecurityModuleEventServer_GetEventStream_Call {
	return &SecurityModuleEventServer_GetEventStream_Call{Call: _e.mock.On("GetEventStream", _a0, _a1)}
}

func (_c *SecurityModuleEventServer_GetEventStream_Call) Run(run func(_a0 *empty.Empty, _a1 grpc.ServerStreamingServer[api.SecurityEventMessage])) *SecurityModuleEventServer_GetEventStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*empty.Empty), args[1].(grpc.ServerStreamingServer[api.SecurityEventMessage]))
	})
	return _c
}

func (_c *SecurityModuleEventServer_GetEventStream_Call) Return(_a0 error) *SecurityModuleEventServer_GetEventStream_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SecurityModuleEventServer_GetEventStream_Call) RunAndReturn(run func(*empty.Empty, grpc.ServerStreamingServer[api.SecurityEventMessage]) error) *SecurityModuleEventServer_GetEventStream_Call {
	_c.Call.Return(run)
	return _c
}

// mustEmbedUnimplementedSecurityModuleEventServer provides a mock function with no fields
func (_m *SecurityModuleEventServer) mustEmbedUnimplementedSecurityModuleEventServer() {
	_m.Called()
}

// SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedSecurityModuleEventServer'
type SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedSecurityModuleEventServer is a helper method to define mock.On call
func (_e *SecurityModuleEventServer_Expecter) mustEmbedUnimplementedSecurityModuleEventServer() *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call {
	return &SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call{Call: _e.mock.On("mustEmbedUnimplementedSecurityModuleEventServer")}
}

func (_c *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call) Run(run func()) *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call) Return() *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call) RunAndReturn(run func()) *SecurityModuleEventServer_mustEmbedUnimplementedSecurityModuleEventServer_Call {
	_c.Run(run)
	return _c
}

// NewSecurityModuleEventServer creates a new instance of SecurityModuleEventServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSecurityModuleEventServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *SecurityModuleEventServer {
	mock := &SecurityModuleEventServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
