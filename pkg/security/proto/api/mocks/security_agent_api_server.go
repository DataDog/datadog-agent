// Code generated by mockery v2.49.2. DO NOT EDIT.

package mocks

import (
	api "github.com/DataDog/datadog-agent/pkg/security/proto/api"
	empty "github.com/golang/protobuf/ptypes/empty"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)

// SecurityAgentAPIServer is an autogenerated mock type for the SecurityAgentAPIServer type
type SecurityAgentAPIServer struct {
	mock.Mock
}

type SecurityAgentAPIServer_Expecter struct {
	mock *mock.Mock
}

func (_m *SecurityAgentAPIServer) EXPECT() *SecurityAgentAPIServer_Expecter {
	return &SecurityAgentAPIServer_Expecter{mock: &_m.Mock}
}

// SendActivityDumpStream provides a mock function with given fields: _a0
func (_m *SecurityAgentAPIServer) SendActivityDumpStream(_a0 grpc.ClientStreamingServer[api.ActivityDumpStreamMessage, empty.Empty]) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SendActivityDumpStream")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(grpc.ClientStreamingServer[api.ActivityDumpStreamMessage, empty.Empty]) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecurityAgentAPIServer_SendActivityDumpStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendActivityDumpStream'
type SecurityAgentAPIServer_SendActivityDumpStream_Call struct {
	*mock.Call
}

// SendActivityDumpStream is a helper method to define mock.On call
//   - _a0 grpc.ClientStreamingServer[api.ActivityDumpStreamMessage,empty.Empty]
func (_e *SecurityAgentAPIServer_Expecter) SendActivityDumpStream(_a0 interface{}) *SecurityAgentAPIServer_SendActivityDumpStream_Call {
	return &SecurityAgentAPIServer_SendActivityDumpStream_Call{Call: _e.mock.On("SendActivityDumpStream", _a0)}
}

func (_c *SecurityAgentAPIServer_SendActivityDumpStream_Call) Run(run func(_a0 grpc.ClientStreamingServer[api.ActivityDumpStreamMessage, empty.Empty])) *SecurityAgentAPIServer_SendActivityDumpStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(grpc.ClientStreamingServer[api.ActivityDumpStreamMessage, empty.Empty]))
	})
	return _c
}

func (_c *SecurityAgentAPIServer_SendActivityDumpStream_Call) Return(_a0 error) *SecurityAgentAPIServer_SendActivityDumpStream_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SecurityAgentAPIServer_SendActivityDumpStream_Call) RunAndReturn(run func(grpc.ClientStreamingServer[api.ActivityDumpStreamMessage, empty.Empty]) error) *SecurityAgentAPIServer_SendActivityDumpStream_Call {
	_c.Call.Return(run)
	return _c
}

// SendEvent provides a mock function with given fields: _a0
func (_m *SecurityAgentAPIServer) SendEvent(_a0 grpc.ClientStreamingServer[api.SecurityEventMessage, empty.Empty]) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SendEvent")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(grpc.ClientStreamingServer[api.SecurityEventMessage, empty.Empty]) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecurityAgentAPIServer_SendEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendEvent'
type SecurityAgentAPIServer_SendEvent_Call struct {
	*mock.Call
}

// SendEvent is a helper method to define mock.On call
//   - _a0 grpc.ClientStreamingServer[api.SecurityEventMessage,empty.Empty]
func (_e *SecurityAgentAPIServer_Expecter) SendEvent(_a0 interface{}) *SecurityAgentAPIServer_SendEvent_Call {
	return &SecurityAgentAPIServer_SendEvent_Call{Call: _e.mock.On("SendEvent", _a0)}
}

func (_c *SecurityAgentAPIServer_SendEvent_Call) Run(run func(_a0 grpc.ClientStreamingServer[api.SecurityEventMessage, empty.Empty])) *SecurityAgentAPIServer_SendEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(grpc.ClientStreamingServer[api.SecurityEventMessage, empty.Empty]))
	})
	return _c
}

func (_c *SecurityAgentAPIServer_SendEvent_Call) Return(_a0 error) *SecurityAgentAPIServer_SendEvent_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SecurityAgentAPIServer_SendEvent_Call) RunAndReturn(run func(grpc.ClientStreamingServer[api.SecurityEventMessage, empty.Empty]) error) *SecurityAgentAPIServer_SendEvent_Call {
	_c.Call.Return(run)
	return _c
}

// mustEmbedUnimplementedSecurityAgentAPIServer provides a mock function with no fields
func (_m *SecurityAgentAPIServer) mustEmbedUnimplementedSecurityAgentAPIServer() {
	_m.Called()
}

// SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedSecurityAgentAPIServer'
type SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedSecurityAgentAPIServer is a helper method to define mock.On call
func (_e *SecurityAgentAPIServer_Expecter) mustEmbedUnimplementedSecurityAgentAPIServer() *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call {
	return &SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call{Call: _e.mock.On("mustEmbedUnimplementedSecurityAgentAPIServer")}
}

func (_c *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call) Run(run func()) *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call) Return() *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call) RunAndReturn(run func()) *SecurityAgentAPIServer_mustEmbedUnimplementedSecurityAgentAPIServer_Call {
	_c.Run(run)
	return _c
}

// NewSecurityAgentAPIServer creates a new instance of SecurityAgentAPIServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSecurityAgentAPIServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *SecurityAgentAPIServer {
	mock := &SecurityAgentAPIServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
