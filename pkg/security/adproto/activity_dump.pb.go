// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: pkg/security/adproto/activity_dump.proto

package adproto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityDump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string                 `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Service string                 `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Source  string                 `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`
	Tags    []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Tree    []*ProcessActivityNode `protobuf:"bytes,5,rep,name=Tree,proto3" json:"Tree,omitempty"`
}

func (x *ActivityDump) Reset() {
	*x = ActivityDump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDump) ProtoMessage() {}

func (x *ActivityDump) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDump.ProtoReflect.Descriptor instead.
func (*ActivityDump) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityDump) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ActivityDump) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ActivityDump) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ActivityDump) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ActivityDump) GetTree() []*ProcessActivityNode {
	if x != nil {
		return x.Tree
	}
	return nil
}

type ProcessActivityNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process        *ProcessInfo           `protobuf:"bytes,1,opt,name=Process,proto3" json:"Process,omitempty"`
	GenerationType string                 `protobuf:"bytes,2,opt,name=GenerationType,proto3" json:"GenerationType,omitempty"`
	Files          []*FileActivityNode    `protobuf:"bytes,3,rep,name=Files,proto3" json:"Files,omitempty"`
	DNSNames       []*DNSNode             `protobuf:"bytes,4,rep,name=DNSNames,proto3" json:"DNSNames,omitempty"`
	Children       []*ProcessActivityNode `protobuf:"bytes,5,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *ProcessActivityNode) Reset() {
	*x = ProcessActivityNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessActivityNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessActivityNode) ProtoMessage() {}

func (x *ProcessActivityNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessActivityNode.ProtoReflect.Descriptor instead.
func (*ProcessActivityNode) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessActivityNode) GetProcess() *ProcessInfo {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *ProcessActivityNode) GetGenerationType() string {
	if x != nil {
		return x.GenerationType
	}
	return ""
}

func (x *ProcessActivityNode) GetFiles() []*FileActivityNode {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ProcessActivityNode) GetDNSNames() []*DNSNode {
	if x != nil {
		return x.DNSNames
	}
	return nil
}

func (x *ProcessActivityNode) GetChildren() []*ProcessActivityNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type ProcessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid           uint32               `protobuf:"varint,1,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Tid           uint32               `protobuf:"varint,2,opt,name=Tid,proto3" json:"Tid,omitempty"`
	Ppid          uint32               `protobuf:"varint,3,opt,name=Ppid,proto3" json:"Ppid,omitempty"`
	Cookie        uint32               `protobuf:"varint,4,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	IsThread      bool                 `protobuf:"varint,5,opt,name=IsThread,proto3" json:"IsThread,omitempty"`
	File          *FileInfo            `protobuf:"bytes,6,opt,name=File,proto3" json:"File,omitempty"`
	ContainerID   string               `protobuf:"bytes,7,opt,name=ContainerID,proto3" json:"ContainerID,omitempty"`
	SpanID        uint64               `protobuf:"varint,8,opt,name=SpanID,proto3" json:"SpanID,omitempty"`
	TraceID       uint64               `protobuf:"varint,9,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	TTY           string               `protobuf:"bytes,10,opt,name=TTY,proto3" json:"TTY,omitempty"`
	Comm          string               `protobuf:"bytes,11,opt,name=Comm,proto3" json:"Comm,omitempty"`
	ForkTime      *timestamp.Timestamp `protobuf:"bytes,12,opt,name=ForkTime,proto3" json:"ForkTime,omitempty"`
	ExitTime      *timestamp.Timestamp `protobuf:"bytes,13,opt,name=ExitTime,proto3" json:"ExitTime,omitempty"`
	ExecTime      *timestamp.Timestamp `protobuf:"bytes,14,opt,name=ExecTime,proto3" json:"ExecTime,omitempty"`
	Credentials   *Credentials         `protobuf:"bytes,15,opt,name=Credentials,proto3" json:"Credentials,omitempty"`
	Args          []string             `protobuf:"bytes,16,rep,name=Args,proto3" json:"Args,omitempty"`
	Argv0         string               `protobuf:"bytes,17,opt,name=Argv0,proto3" json:"Argv0,omitempty"`
	ArgsTruncated bool                 `protobuf:"varint,18,opt,name=ArgsTruncated,proto3" json:"ArgsTruncated,omitempty"`
	Envs          []string             `protobuf:"bytes,19,rep,name=Envs,proto3" json:"Envs,omitempty"`
	EnvsTruncated bool                 `protobuf:"varint,20,opt,name=EnvsTruncated,proto3" json:"EnvsTruncated,omitempty"`
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessInfo) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetTid() uint32 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *ProcessInfo) GetPpid() uint32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessInfo) GetCookie() uint32 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *ProcessInfo) GetIsThread() bool {
	if x != nil {
		return x.IsThread
	}
	return false
}

func (x *ProcessInfo) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ProcessInfo) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ProcessInfo) GetSpanID() uint64 {
	if x != nil {
		return x.SpanID
	}
	return 0
}

func (x *ProcessInfo) GetTraceID() uint64 {
	if x != nil {
		return x.TraceID
	}
	return 0
}

func (x *ProcessInfo) GetTTY() string {
	if x != nil {
		return x.TTY
	}
	return ""
}

func (x *ProcessInfo) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *ProcessInfo) GetForkTime() *timestamp.Timestamp {
	if x != nil {
		return x.ForkTime
	}
	return nil
}

func (x *ProcessInfo) GetExitTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExitTime
	}
	return nil
}

func (x *ProcessInfo) GetExecTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExecTime
	}
	return nil
}

func (x *ProcessInfo) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *ProcessInfo) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ProcessInfo) GetArgv0() string {
	if x != nil {
		return x.Argv0
	}
	return ""
}

func (x *ProcessInfo) GetArgsTruncated() bool {
	if x != nil {
		return x.ArgsTruncated
	}
	return false
}

func (x *ProcessInfo) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *ProcessInfo) GetEnvsTruncated() bool {
	if x != nil {
		return x.EnvsTruncated
	}
	return false
}

type FileActivityNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	File           *FileInfo            `protobuf:"bytes,2,opt,name=File,proto3" json:"File,omitempty"`
	GenerationType string               `protobuf:"bytes,3,opt,name=GenerationType,proto3" json:"GenerationType,omitempty"`
	FirstSeen      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=FirstSeen,proto3" json:"FirstSeen,omitempty"`
	Open           *OpenNode            `protobuf:"bytes,5,opt,name=Open,proto3" json:"Open,omitempty"`
	Children       []*FileActivityNode  `protobuf:"bytes,6,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *FileActivityNode) Reset() {
	*x = FileActivityNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileActivityNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivityNode) ProtoMessage() {}

func (x *FileActivityNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivityNode.ProtoReflect.Descriptor instead.
func (*FileActivityNode) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{3}
}

func (x *FileActivityNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileActivityNode) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileActivityNode) GetGenerationType() string {
	if x != nil {
		return x.GenerationType
	}
	return ""
}

func (x *FileActivityNode) GetFirstSeen() *timestamp.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *FileActivityNode) GetOpen() *OpenNode {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *FileActivityNode) GetChildren() []*FileActivityNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type OpenNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retval int64  `protobuf:"zigzag64,1,opt,name=Retval,proto3" json:"Retval,omitempty"`
	Flags  uint32 `protobuf:"varint,2,opt,name=Flags,proto3" json:"Flags,omitempty"`
	Mode   uint32 `protobuf:"varint,3,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *OpenNode) Reset() {
	*x = OpenNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenNode) ProtoMessage() {}

func (x *OpenNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenNode.ProtoReflect.Descriptor instead.
func (*OpenNode) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{4}
}

func (x *OpenNode) GetRetval() int64 {
	if x != nil {
		return x.Retval
	}
	return 0
}

func (x *OpenNode) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *OpenNode) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type DNSNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*DNSInfo `protobuf:"bytes,1,rep,name=Requests,proto3" json:"Requests,omitempty"`
}

func (x *DNSNode) Reset() {
	*x = DNSNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSNode) ProtoMessage() {}

func (x *DNSNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSNode.ProtoReflect.Descriptor instead.
func (*DNSNode) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{5}
}

func (x *DNSNode) GetRequests() []*DNSInfo {
	if x != nil {
		return x.Requests
	}
	return nil
}

type DNSInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type  uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Class uint32 `protobuf:"varint,3,opt,name=Class,proto3" json:"Class,omitempty"`
	Size  uint32 `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	Count uint32 `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *DNSInfo) Reset() {
	*x = DNSInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSInfo) ProtoMessage() {}

func (x *DNSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSInfo.ProtoReflect.Descriptor instead.
func (*DNSInfo) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{6}
}

func (x *DNSInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DNSInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DNSInfo) GetClass() uint32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *DNSInfo) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DNSInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID          uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	User         string `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	GID          uint32 `protobuf:"varint,3,opt,name=GID,proto3" json:"GID,omitempty"`
	Group        string `protobuf:"bytes,4,opt,name=Group,proto3" json:"Group,omitempty"`
	Mode         uint32 `protobuf:"varint,5,opt,name=Mode,proto3" json:"Mode,omitempty"` // TODO: check conversion with uint16
	CTime        uint32 `protobuf:"varint,6,opt,name=CTime,proto3" json:"CTime,omitempty"`
	MTime        uint32 `protobuf:"varint,7,opt,name=MTime,proto3" json:"MTime,omitempty"`
	MountID      uint32 `protobuf:"varint,8,opt,name=MountID,proto3" json:"MountID,omitempty"`
	INode        uint64 `protobuf:"varint,9,opt,name=INode,proto3" json:"INode,omitempty"`
	InUpperLayer bool   `protobuf:"varint,10,opt,name=InUpperLayer,proto3" json:"InUpperLayer,omitempty"`
	Path         string `protobuf:"bytes,11,opt,name=Path,proto3" json:"Path,omitempty"`
	Basename     string `protobuf:"bytes,12,opt,name=Basename,proto3" json:"Basename,omitempty"`
	FileSystem   string `protobuf:"bytes,13,opt,name=FileSystem,proto3" json:"FileSystem,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{7}
}

func (x *FileInfo) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *FileInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *FileInfo) GetGID() uint32 {
	if x != nil {
		return x.GID
	}
	return 0
}

func (x *FileInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FileInfo) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileInfo) GetCTime() uint32 {
	if x != nil {
		return x.CTime
	}
	return 0
}

func (x *FileInfo) GetMTime() uint32 {
	if x != nil {
		return x.MTime
	}
	return 0
}

func (x *FileInfo) GetMountID() uint32 {
	if x != nil {
		return x.MountID
	}
	return 0
}

func (x *FileInfo) GetINode() uint64 {
	if x != nil {
		return x.INode
	}
	return 0
}

func (x *FileInfo) GetInUpperLayer() bool {
	if x != nil {
		return x.InUpperLayer
	}
	return false
}

func (x *FileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileInfo) GetBasename() string {
	if x != nil {
		return x.Basename
	}
	return ""
}

func (x *FileInfo) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID            uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	GID            uint32 `protobuf:"varint,2,opt,name=GID,proto3" json:"GID,omitempty"`
	User           string `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	Group          string `protobuf:"bytes,4,opt,name=Group,proto3" json:"Group,omitempty"`
	EffectiveUID   uint32 `protobuf:"varint,5,opt,name=EffectiveUID,proto3" json:"EffectiveUID,omitempty"`
	EffectiveGID   uint32 `protobuf:"varint,6,opt,name=EffectiveGID,proto3" json:"EffectiveGID,omitempty"`
	EffectiveUser  string `protobuf:"bytes,7,opt,name=EffectiveUser,proto3" json:"EffectiveUser,omitempty"`
	EffectiveGroup string `protobuf:"bytes,8,opt,name=EffectiveGroup,proto3" json:"EffectiveGroup,omitempty"`
	FSUID          uint32 `protobuf:"varint,9,opt,name=FSUID,proto3" json:"FSUID,omitempty"`
	FSGID          uint32 `protobuf:"varint,10,opt,name=FSGID,proto3" json:"FSGID,omitempty"`
	FSUser         string `protobuf:"bytes,11,opt,name=FSUser,proto3" json:"FSUser,omitempty"`
	FSGroup        string `protobuf:"bytes,12,opt,name=FSGroup,proto3" json:"FSGroup,omitempty"`
	CapEffective   uint64 `protobuf:"varint,13,opt,name=CapEffective,proto3" json:"CapEffective,omitempty"`
	CapPermitted   uint64 `protobuf:"varint,14,opt,name=CapPermitted,proto3" json:"CapPermitted,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_security_adproto_activity_dump_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_pkg_security_adproto_activity_dump_proto_rawDescGZIP(), []int{8}
}

func (x *Credentials) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *Credentials) GetGID() uint32 {
	if x != nil {
		return x.GID
	}
	return 0
}

func (x *Credentials) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Credentials) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Credentials) GetEffectiveUID() uint32 {
	if x != nil {
		return x.EffectiveUID
	}
	return 0
}

func (x *Credentials) GetEffectiveGID() uint32 {
	if x != nil {
		return x.EffectiveGID
	}
	return 0
}

func (x *Credentials) GetEffectiveUser() string {
	if x != nil {
		return x.EffectiveUser
	}
	return ""
}

func (x *Credentials) GetEffectiveGroup() string {
	if x != nil {
		return x.EffectiveGroup
	}
	return ""
}

func (x *Credentials) GetFSUID() uint32 {
	if x != nil {
		return x.FSUID
	}
	return 0
}

func (x *Credentials) GetFSGID() uint32 {
	if x != nil {
		return x.FSGID
	}
	return 0
}

func (x *Credentials) GetFSUser() string {
	if x != nil {
		return x.FSUser
	}
	return ""
}

func (x *Credentials) GetFSGroup() string {
	if x != nil {
		return x.FSGroup
	}
	return ""
}

func (x *Credentials) GetCapEffective() uint64 {
	if x != nil {
		return x.CapEffective
	}
	return 0
}

func (x *Credentials) GetCapPermitted() uint64 {
	if x != nil {
		return x.CapPermitted
	}
	return 0
}

var File_pkg_security_adproto_activity_dump_proto protoreflect.FileDescriptor

var file_pkg_security_adproto_activity_dump_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x61,
	0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x75, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x64, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x54, 0x72, 0x65,
	0x65, 0x22, 0x86, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x4e, 0x53, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x84, 0x05, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x54, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x70,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x59, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x54, 0x54, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x6d, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x36, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x46, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x45,
	0x78, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x72, 0x67, 0x76, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x72, 0x67, 0x76,
	0x30, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x72, 0x67, 0x73, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x41, 0x72, 0x67, 0x73, 0x54, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x6e, 0x76, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x45,
	0x6e, 0x76, 0x73, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x45, 0x6e, 0x76, 0x73, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53,
	0x65, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x4c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x52,
	0x65, 0x74, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0x37, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x4e, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x47, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x55, 0x70, 0x70, 0x65,
	0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x6e,
	0x55, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x97, 0x03, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x47, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x47, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x53, 0x55, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x46,
	0x53, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x53, 0x47, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x46, 0x53, 0x47, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x53, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x61, 0x70, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x43, 0x61, 0x70, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x43, 0x61, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_security_adproto_activity_dump_proto_rawDescOnce sync.Once
	file_pkg_security_adproto_activity_dump_proto_rawDescData = file_pkg_security_adproto_activity_dump_proto_rawDesc
)

func file_pkg_security_adproto_activity_dump_proto_rawDescGZIP() []byte {
	file_pkg_security_adproto_activity_dump_proto_rawDescOnce.Do(func() {
		file_pkg_security_adproto_activity_dump_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_security_adproto_activity_dump_proto_rawDescData)
	})
	return file_pkg_security_adproto_activity_dump_proto_rawDescData
}

var file_pkg_security_adproto_activity_dump_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_security_adproto_activity_dump_proto_goTypes = []interface{}{
	(*ActivityDump)(nil),        // 0: adproto.ActivityDump
	(*ProcessActivityNode)(nil), // 1: adproto.ProcessActivityNode
	(*ProcessInfo)(nil),         // 2: adproto.ProcessInfo
	(*FileActivityNode)(nil),    // 3: adproto.FileActivityNode
	(*OpenNode)(nil),            // 4: adproto.OpenNode
	(*DNSNode)(nil),             // 5: adproto.DNSNode
	(*DNSInfo)(nil),             // 6: adproto.DNSInfo
	(*FileInfo)(nil),            // 7: adproto.FileInfo
	(*Credentials)(nil),         // 8: adproto.Credentials
	(*timestamp.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_pkg_security_adproto_activity_dump_proto_depIdxs = []int32{
	1,  // 0: adproto.ActivityDump.Tree:type_name -> adproto.ProcessActivityNode
	2,  // 1: adproto.ProcessActivityNode.Process:type_name -> adproto.ProcessInfo
	3,  // 2: adproto.ProcessActivityNode.Files:type_name -> adproto.FileActivityNode
	5,  // 3: adproto.ProcessActivityNode.DNSNames:type_name -> adproto.DNSNode
	1,  // 4: adproto.ProcessActivityNode.Children:type_name -> adproto.ProcessActivityNode
	7,  // 5: adproto.ProcessInfo.File:type_name -> adproto.FileInfo
	9,  // 6: adproto.ProcessInfo.ForkTime:type_name -> google.protobuf.Timestamp
	9,  // 7: adproto.ProcessInfo.ExitTime:type_name -> google.protobuf.Timestamp
	9,  // 8: adproto.ProcessInfo.ExecTime:type_name -> google.protobuf.Timestamp
	8,  // 9: adproto.ProcessInfo.Credentials:type_name -> adproto.Credentials
	7,  // 10: adproto.FileActivityNode.File:type_name -> adproto.FileInfo
	9,  // 11: adproto.FileActivityNode.FirstSeen:type_name -> google.protobuf.Timestamp
	4,  // 12: adproto.FileActivityNode.Open:type_name -> adproto.OpenNode
	3,  // 13: adproto.FileActivityNode.Children:type_name -> adproto.FileActivityNode
	6,  // 14: adproto.DNSNode.Requests:type_name -> adproto.DNSInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pkg_security_adproto_activity_dump_proto_init() }
func file_pkg_security_adproto_activity_dump_proto_init() {
	if File_pkg_security_adproto_activity_dump_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_security_adproto_activity_dump_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessActivityNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileActivityNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_security_adproto_activity_dump_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_security_adproto_activity_dump_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_security_adproto_activity_dump_proto_goTypes,
		DependencyIndexes: file_pkg_security_adproto_activity_dump_proto_depIdxs,
		MessageInfos:      file_pkg_security_adproto_activity_dump_proto_msgTypes,
	}.Build()
	File_pkg_security_adproto_activity_dump_proto = out.File
	file_pkg_security_adproto_activity_dump_proto_rawDesc = nil
	file_pkg_security_adproto_activity_dump_proto_goTypes = nil
	file_pkg_security_adproto_activity_dump_proto_depIdxs = nil
}
