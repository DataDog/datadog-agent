// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2016-present Datadog, Inc.

//go:build linux && functionaltests

// Package tests holds tests related files
package tests

import (
	"fmt"
	"syscall"
	"testing"
	"unsafe"

	"github.com/DataDog/datadog-agent/pkg/security/secl/model"
	"github.com/DataDog/datadog-agent/pkg/security/secl/rules"
)

func TestSetSockOpt(t *testing.T) {
	SkipIfNotAvailable(t)

	ruleDefs := []*rules.RuleDefinition{
		{
			ID: "test_rule_setsockopt",
			Expression: `setsockopt.level == SOL_SOCKET 
			&& setsockopt.optname == SO_ATTACH_FILTER 
			&& setsockopt.socket_type == SOCK_RAW 
			&& setsockopt.socket_protocol == IPPROTO_TCP
			&& setsockopt.socket_family == AF_INET 
			&& setsockopt.filter_hash == "627019f67a3853590209488302dd51282834c4f9f9c1cc43274f45c4bfd9869f"
			&& setsockopt.is_filter_truncated == false`,
		},
		{
			ID: "test_rule_setsockopt_udp",
			Expression: `setsockopt.level == SOL_SOCKET 
			&& setsockopt.optname == SO_ATTACH_FILTER 
			&& setsockopt.socket_type == SOCK_DGRAM 
			&& setsockopt.socket_protocol == IPPROTO_UDP
			&& setsockopt.socket_family == AF_INET 
			&& setsockopt.filter_hash == "627019f67a3853590209488302dd51282834c4f9f9c1cc43274f45c4bfd9869f"
			&& setsockopt.is_filter_truncated == false`,
		},
		{
			ID: "test_rule_setsockopt_tcp",
			Expression: `setsockopt.level == SOL_SOCKET 
			&& setsockopt.optname == SO_ATTACH_FILTER 
			&& setsockopt.socket_type == SOCK_STREAM 
			&& setsockopt.socket_protocol == IPPROTO_TCP
			&& setsockopt.socket_family == AF_INET 
			&& setsockopt.filter_hash == "627019f67a3853590209488302dd51282834c4f9f9c1cc43274f45c4bfd9869f"
			&& setsockopt.is_filter_truncated == false`,
		},
		{
			ID: "test_rule_setsockopt_truncated_filter",
			Expression: `setsockopt.level == SOL_SOCKET 
			&& setsockopt.optname == SO_ATTACH_FILTER 
			&& setsockopt.socket_type == SOCK_DGRAM 
			&& setsockopt.socket_protocol == IPPROTO_UDP 
			&& setsockopt.socket_family == AF_INET 
			&& setsockopt.is_filter_truncated == true`,
		},
	}

	test, err := newTestModule(t, nil, ruleDefs)
	if err != nil {
		t.Fatal(err)
	}
	defer test.Close()

	t.Run("setsockopt", func(t *testing.T) {
		var fd int

		test.WaitSignal(t, func() error {
			var err error
			fd, err = syscall.Socket(syscall.AF_INET, syscall.SOCK_RAW, syscall.IPPROTO_TCP)
			if err != nil {
				return err
			}
			defer syscall.Close(fd)

			// BPF Filter
			program := []syscall.SockFilter{
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x0000000c},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x000086dd},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 17, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000036},
				{Code: 0x15, Jt: 14, Jf: 0, K: 0x00000016},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000038},
				{Code: 0x15, Jt: 12, Jf: 13, K: 0x00000016},
				{Code: 0x15, Jt: 0, Jf: 12, K: 0x00000800},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000017},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x45, Jt: 6, Jf: 0, K: 0x00001fff},
				{Code: 0xb1, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000016},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x00000010},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000016},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x0000ffff},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x00000000},
			}

			// Create structure
			filter := syscall.SockFprog{
				Len:    uint16(len(program)),
				Filter: &program[0],
			}
			_, _, errno := syscall.Syscall6(
				syscall.SYS_SETSOCKOPT,
				uintptr(fd),
				uintptr(syscall.SOL_SOCKET),
				uintptr(syscall.SO_ATTACH_FILTER),
				uintptr(unsafe.Pointer(&filter)),
				uintptr(unsafe.Sizeof(filter)),
				0,
			)

			if errno != 0 {
				return fmt.Errorf("setsockopt failed: %v", errno)
			}

			return nil
		}, func(_ *model.Event, rule *rules.Rule) {
			assertTriggeredRule(t, rule, "test_rule_setsockopt")
		})
	})

	t.Run("setsockopt-DGRAM-socket", func(t *testing.T) {
		var fd int

		defer func() {}()

		test.WaitSignal(t, func() error {
			var err error
			fd, err = syscall.Socket(syscall.AF_INET, syscall.SOCK_DGRAM, 0)
			if err != nil {
				return err
			}
			defer syscall.Close(fd)

			// BPF Filter
			program := []syscall.SockFilter{
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x0000000c},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x000086dd},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 17, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000036},
				{Code: 0x15, Jt: 14, Jf: 0, K: 0x00000016},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000038},
				{Code: 0x15, Jt: 12, Jf: 13, K: 0x00000016},
				{Code: 0x15, Jt: 0, Jf: 12, K: 0x00000800},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000017},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x45, Jt: 6, Jf: 0, K: 0x00001fff},
				{Code: 0xb1, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000016},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x00000010},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000016},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x0000ffff},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x00000000},
			}

			// Create structure
			filter := syscall.SockFprog{
				Len:    uint16(len(program)),
				Filter: &program[0],
			}
			_, _, errno := syscall.Syscall6(
				syscall.SYS_SETSOCKOPT,
				uintptr(fd),
				uintptr(syscall.SOL_SOCKET),
				uintptr(syscall.SO_ATTACH_FILTER),
				uintptr(unsafe.Pointer(&filter)),
				uintptr(unsafe.Sizeof(filter)),
				0,
			)

			if errno != 0 {
				return fmt.Errorf("setsockopt failed: %v", errno)
			}

			return nil
		}, func(_ *model.Event, rule *rules.Rule) {
			assertTriggeredRule(t, rule, "test_rule_setsockopt_udp")
		})
	})

	t.Run("setsockopt-STREAM-socket", func(t *testing.T) {
		var fd int

		defer func() {}()

		test.WaitSignal(t, func() error {
			var err error
			fd, err = syscall.Socket(syscall.AF_INET, syscall.SOCK_STREAM, 0)
			if err != nil {
				return err
			}
			defer syscall.Close(fd)

			// BPF Filter
			program := []syscall.SockFilter{
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x0000000c},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x000086dd},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 17, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000036},
				{Code: 0x15, Jt: 14, Jf: 0, K: 0x00000016},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000038},
				{Code: 0x15, Jt: 12, Jf: 13, K: 0x00000016},
				{Code: 0x15, Jt: 0, Jf: 12, K: 0x00000800},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000017},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 0, Jf: 8, K: 0x00000011},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x45, Jt: 6, Jf: 0, K: 0x00001fff},
				{Code: 0xb1, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x00000016},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x00000010},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000016},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x0000ffff},
				{Code: 0x06, Jt: 0, Jf: 0, K: 0x00000000},
			}

			// Create structure
			filter := syscall.SockFprog{
				Len:    uint16(len(program)),
				Filter: &program[0],
			}
			_, _, errno := syscall.Syscall6(
				syscall.SYS_SETSOCKOPT,
				uintptr(fd),
				uintptr(syscall.SOL_SOCKET),
				uintptr(syscall.SO_ATTACH_FILTER),
				uintptr(unsafe.Pointer(&filter)),
				uintptr(unsafe.Sizeof(filter)),
				0,
			)

			if errno != 0 {
				return fmt.Errorf("setsockopt failed: %v", errno)
			}

			return nil
		}, func(_ *model.Event, rule *rules.Rule) {
			assertTriggeredRule(t, rule, "test_rule_setsockopt_tcp")
		})
	})
	t.Run("setsockopt-TruncatedFilter", func(t *testing.T) {
		var fd int

		defer func() {}()

		test.WaitSignal(t, func() error {
			var err error
			fd, err = syscall.Socket(syscall.AF_INET, syscall.SOCK_DGRAM, 0)
			if err != nil {
				return err
			}
			defer syscall.Close(fd)

			// BPF Filter
			program := []syscall.SockFilter{
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x0000000c},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000800},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000019c},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000017},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000011},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003c2},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x45, Jt: 0, Jf: 1, K: 0x00001fff},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003bf},
				{Code: 0xb1, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x0000000e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000001},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003ba},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000002},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003b8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000003},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003b6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000004},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003b4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000005},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003b2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000006},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003b0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000007},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003ae},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000008},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003ac},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000009},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003aa},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003a8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003a6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003a4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003a2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000003a0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000039e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000010},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000039c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000011},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000039a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000012},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000398},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000013},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000396},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000014},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000394},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000015},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000392},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000016},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000390},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000017},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000038e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000018},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000038c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000019},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000038a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000388},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000386},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000384},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000382},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000380},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000037e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000020},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000037c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000021},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000037a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000022},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000378},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000023},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000376},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000024},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000374},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000025},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000372},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000026},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000370},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000027},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000036e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000028},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000036c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000029},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000036a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000368},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000366},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000364},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000362},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000360},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000035e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000030},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000035c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000031},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000035a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000032},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000358},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000033},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000356},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000034},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000354},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000035},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000352},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000036},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000350},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000037},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000034e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000038},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000034c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000039},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000034a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000348},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000346},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000344},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000342},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000340},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000033e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000040},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000033c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000041},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000033a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000042},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000338},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000043},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000336},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000044},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000334},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000045},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000332},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000046},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000330},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000047},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000032e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000048},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000032c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000049},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000032a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000328},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000326},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000324},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000322},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000320},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000031e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000050},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000031c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000051},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000031a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000052},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000318},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000053},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000316},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000054},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000314},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000055},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000312},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000056},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000310},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000057},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000030e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000058},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000030c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000059},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000030a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000308},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000306},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000304},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000302},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000300},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002fe},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000060},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002fc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000061},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002fa},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000062},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002f8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000063},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002f6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000064},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002f4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000065},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002f2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000066},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002f0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000067},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ee},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000068},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ec},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000069},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ea},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002e8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002e6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002e4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002e2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002e0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002de},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000070},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002dc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000071},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002da},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000072},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002d8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000073},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002d6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000074},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002d4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000075},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002d2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000076},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002d0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000077},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ce},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000078},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002cc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000079},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ca},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002c8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002c6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002c4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002c2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002c0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002be},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000080},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002bc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000081},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ba},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000082},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002b8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000083},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002b6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000084},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002b4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000085},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002b2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000086},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002b0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000087},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ae},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000088},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002ac},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000089},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002aa},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002a8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002a6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002a4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002a2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000002a0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000029e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000090},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000029c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000091},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000029a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000092},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000298},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000093},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000296},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000094},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000294},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000095},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000292},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000096},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000290},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000097},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000028e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000098},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000028c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000099},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000028a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000288},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000286},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000284},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000282},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000280},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000009f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000027e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a0},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000027c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a1},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000027a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a2},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000278},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a3},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000276},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a4},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000274},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a5},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000272},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a6},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000270},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a7},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000026e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a8},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000026c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000a9},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000026a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000aa},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000268},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000ab},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000266},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000ac},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000264},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000ad},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000262},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000ae},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000260},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000af},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000025e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b0},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000025c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b1},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000025a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b2},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000258},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b3},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000256},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b4},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000254},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b5},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000252},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b6},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000250},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b7},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000024e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b8},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000024c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000b9},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000024a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000ba},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000248},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000bb},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000246},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000bc},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000244},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000bd},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000242},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000be},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000240},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000bf},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000023e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c0},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000023c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c1},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000023a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c2},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000238},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c3},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000236},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c4},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000234},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c5},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000232},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c6},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000230},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c7},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000022e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c8},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000022c},
				{Code: 0x48, Jt: 0, Jf: 0, K: 0x00000010},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000001},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000229},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000161},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x000086dd},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000227},
				{Code: 0x30, Jt: 0, Jf: 0, K: 0x00000014},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x00000011},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000224},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000036},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000001},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000220},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000002},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000021e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000003},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000021c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000004},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000021a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000005},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000218},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000006},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000216},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000007},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000214},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000008},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000212},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000009},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000210},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000020e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000020c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000020a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000208},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000206},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000000f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000204},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000010},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000202},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000011},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000200},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000012},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001fe},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000013},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001fc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000014},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001fa},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000015},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001f8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000016},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001f6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000017},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001f4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000018},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001f2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000019},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001f0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ee},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ec},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ea},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001e8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001e6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000001f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001e4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000020},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001e2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000021},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001e0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000022},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001de},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000023},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001dc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000024},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001da},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000025},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001d8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000026},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001d6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000027},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001d4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000028},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001d2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000029},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001d0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ce},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001cc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ca},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001c8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001c6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000002f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001c4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000030},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001c2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000031},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001c0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000032},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001be},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000033},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001bc},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000034},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ba},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000035},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001b8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000036},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001b6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000037},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001b4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000038},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001b2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000039},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001b0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ae},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001ac},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001aa},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001a8},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001a6},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000003f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001a4},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000040},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001a2},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000041},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x000001a0},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000042},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000019e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000043},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000019c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000044},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000019a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000045},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000198},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000046},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000196},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000047},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000194},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000048},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000192},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000049},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000190},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000018e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000018c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000018a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000188},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000186},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000004f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000184},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000050},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000182},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000051},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000180},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000052},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000017e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000053},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000017c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000054},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000017a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000055},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000178},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000056},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000176},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000057},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000174},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000058},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000172},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000059},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000170},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000016e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000016c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000016a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000168},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000166},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000005f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000164},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000060},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000162},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000061},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000160},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000062},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000015e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000063},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000015c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000064},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000015a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000065},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000158},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000066},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000156},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000067},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000154},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000068},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000152},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000069},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000150},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000014e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000014c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000014a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000148},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000146},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000006f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000144},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000070},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000142},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000071},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000140},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000072},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000013e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000073},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000013c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000074},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000013a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000075},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000138},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000076},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000136},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000077},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000134},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000078},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000132},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000079},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000130},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000012e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000012c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000012a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000128},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000126},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000007f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000124},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000080},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000122},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000081},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000120},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000082},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000011e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000083},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000011c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000084},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000011a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000085},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000118},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000086},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000116},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000087},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000114},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000088},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000112},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000089},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000110},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008a},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000010e},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008b},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000010c},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008c},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x0000010a},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008d},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000108},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008e},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000106},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x0000008f},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000104},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000090},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000102},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x00000091},
				{Code: 0x5, Jt: 0, Jf: 0, K: 0x00000100},
				{Code: 0x15, Jt: 255, Jf: 0, K: 0x00000092},
				{Code: 0x15, Jt: 254, Jf: 0, K: 0x00000093},
				{Code: 0x15, Jt: 253, Jf: 0, K: 0x00000094},
				{Code: 0x15, Jt: 252, Jf: 0, K: 0x00000095},
				{Code: 0x15, Jt: 251, Jf: 0, K: 0x00000096},
				{Code: 0x15, Jt: 250, Jf: 0, K: 0x00000097},
				{Code: 0x15, Jt: 249, Jf: 0, K: 0x00000098},
				{Code: 0x15, Jt: 248, Jf: 0, K: 0x00000099},
				{Code: 0x15, Jt: 247, Jf: 0, K: 0x0000009a},
				{Code: 0x15, Jt: 246, Jf: 0, K: 0x0000009b},
				{Code: 0x15, Jt: 245, Jf: 0, K: 0x0000009c},
				{Code: 0x15, Jt: 244, Jf: 0, K: 0x0000009d},
				{Code: 0x15, Jt: 243, Jf: 0, K: 0x0000009e},
				{Code: 0x15, Jt: 242, Jf: 0, K: 0x0000009f},
				{Code: 0x15, Jt: 241, Jf: 0, K: 0x000000a0},
				{Code: 0x15, Jt: 240, Jf: 0, K: 0x000000a1},
				{Code: 0x15, Jt: 239, Jf: 0, K: 0x000000a2},
				{Code: 0x15, Jt: 238, Jf: 0, K: 0x000000a3},
				{Code: 0x15, Jt: 237, Jf: 0, K: 0x000000a4},
				{Code: 0x15, Jt: 236, Jf: 0, K: 0x000000a5},
				{Code: 0x15, Jt: 235, Jf: 0, K: 0x000000a6},
				{Code: 0x15, Jt: 234, Jf: 0, K: 0x000000a7},
				{Code: 0x15, Jt: 233, Jf: 0, K: 0x000000a8},
				{Code: 0x15, Jt: 232, Jf: 0, K: 0x000000a9},
				{Code: 0x15, Jt: 231, Jf: 0, K: 0x000000aa},
				{Code: 0x15, Jt: 230, Jf: 0, K: 0x000000ab},
				{Code: 0x15, Jt: 229, Jf: 0, K: 0x000000ac},
				{Code: 0x15, Jt: 228, Jf: 0, K: 0x000000ad},
				{Code: 0x15, Jt: 227, Jf: 0, K: 0x000000ae},
				{Code: 0x15, Jt: 226, Jf: 0, K: 0x000000af},
				{Code: 0x15, Jt: 225, Jf: 0, K: 0x000000b0},
				{Code: 0x15, Jt: 224, Jf: 0, K: 0x000000b1},
				{Code: 0x15, Jt: 223, Jf: 0, K: 0x000000b2},
				{Code: 0x15, Jt: 222, Jf: 0, K: 0x000000b3},
				{Code: 0x15, Jt: 221, Jf: 0, K: 0x000000b4},
				{Code: 0x15, Jt: 220, Jf: 0, K: 0x000000b5},
				{Code: 0x15, Jt: 219, Jf: 0, K: 0x000000b6},
				{Code: 0x15, Jt: 218, Jf: 0, K: 0x000000b7},
				{Code: 0x15, Jt: 217, Jf: 0, K: 0x000000b8},
				{Code: 0x15, Jt: 216, Jf: 0, K: 0x000000b9},
				{Code: 0x15, Jt: 215, Jf: 0, K: 0x000000ba},
				{Code: 0x15, Jt: 214, Jf: 0, K: 0x000000bb},
				{Code: 0x15, Jt: 213, Jf: 0, K: 0x000000bc},
				{Code: 0x15, Jt: 212, Jf: 0, K: 0x000000bd},
				{Code: 0x15, Jt: 211, Jf: 0, K: 0x000000be},
				{Code: 0x15, Jt: 210, Jf: 0, K: 0x000000bf},
				{Code: 0x15, Jt: 209, Jf: 0, K: 0x000000c0},
				{Code: 0x15, Jt: 208, Jf: 0, K: 0x000000c1},
				{Code: 0x15, Jt: 207, Jf: 0, K: 0x000000c2},
				{Code: 0x15, Jt: 206, Jf: 0, K: 0x000000c3},
				{Code: 0x15, Jt: 205, Jf: 0, K: 0x000000c4},
				{Code: 0x15, Jt: 204, Jf: 0, K: 0x000000c5},
				{Code: 0x15, Jt: 203, Jf: 0, K: 0x000000c6},
				{Code: 0x15, Jt: 202, Jf: 0, K: 0x000000c7},
				{Code: 0x15, Jt: 201, Jf: 0, K: 0x000000c8},
				{Code: 0x28, Jt: 0, Jf: 0, K: 0x00000038},
				{Code: 0x15, Jt: 199, Jf: 0, K: 0x00000001},
				{Code: 0x15, Jt: 198, Jf: 0, K: 0x00000002},
				{Code: 0x15, Jt: 197, Jf: 0, K: 0x00000003},
				{Code: 0x15, Jt: 196, Jf: 0, K: 0x00000004},
				{Code: 0x15, Jt: 195, Jf: 0, K: 0x00000005},
				{Code: 0x15, Jt: 194, Jf: 0, K: 0x00000006},
				{Code: 0x15, Jt: 193, Jf: 0, K: 0x00000007},
				{Code: 0x15, Jt: 192, Jf: 0, K: 0x00000008},
				{Code: 0x15, Jt: 191, Jf: 0, K: 0x00000009},
				{Code: 0x15, Jt: 190, Jf: 0, K: 0x0000000a},
				{Code: 0x15, Jt: 189, Jf: 0, K: 0x0000000b},
				{Code: 0x15, Jt: 188, Jf: 0, K: 0x0000000c},
				{Code: 0x15, Jt: 187, Jf: 0, K: 0x0000000d},
				{Code: 0x15, Jt: 186, Jf: 0, K: 0x0000000e},
				{Code: 0x15, Jt: 185, Jf: 0, K: 0x0000000f},
				{Code: 0x15, Jt: 184, Jf: 0, K: 0x00000010},
				{Code: 0x15, Jt: 183, Jf: 0, K: 0x00000011},
				{Code: 0x15, Jt: 182, Jf: 0, K: 0x00000012},
				{Code: 0x15, Jt: 181, Jf: 0, K: 0x00000013},
				{Code: 0x15, Jt: 180, Jf: 0, K: 0x00000014},
				{Code: 0x15, Jt: 179, Jf: 0, K: 0x00000015},
				{Code: 0x15, Jt: 178, Jf: 0, K: 0x00000016},
				{Code: 0x15, Jt: 177, Jf: 0, K: 0x00000017},
				{Code: 0x15, Jt: 176, Jf: 0, K: 0x00000018},
				{Code: 0x15, Jt: 175, Jf: 0, K: 0x00000019},
				{Code: 0x15, Jt: 174, Jf: 0, K: 0x0000001a},
				{Code: 0x15, Jt: 173, Jf: 0, K: 0x0000001b},
				{Code: 0x15, Jt: 172, Jf: 0, K: 0x0000001c},
				{Code: 0x15, Jt: 171, Jf: 0, K: 0x0000001d},
				{Code: 0x15, Jt: 170, Jf: 0, K: 0x0000001e},
				{Code: 0x15, Jt: 169, Jf: 0, K: 0x0000001f},
				{Code: 0x15, Jt: 168, Jf: 0, K: 0x00000020},
				{Code: 0x15, Jt: 167, Jf: 0, K: 0x00000021},
				{Code: 0x15, Jt: 166, Jf: 0, K: 0x00000022},
				{Code: 0x15, Jt: 165, Jf: 0, K: 0x00000023},
				{Code: 0x15, Jt: 164, Jf: 0, K: 0x00000024},
				{Code: 0x15, Jt: 163, Jf: 0, K: 0x00000025},
				{Code: 0x15, Jt: 162, Jf: 0, K: 0x00000026},
				{Code: 0x15, Jt: 161, Jf: 0, K: 0x00000027},
				{Code: 0x15, Jt: 160, Jf: 0, K: 0x00000028},
				{Code: 0x15, Jt: 159, Jf: 0, K: 0x00000029},
				{Code: 0x15, Jt: 158, Jf: 0, K: 0x0000002a},
				{Code: 0x15, Jt: 157, Jf: 0, K: 0x0000002b},
				{Code: 0x15, Jt: 156, Jf: 0, K: 0x0000002c},
				{Code: 0x15, Jt: 155, Jf: 0, K: 0x0000002d},
				{Code: 0x15, Jt: 154, Jf: 0, K: 0x0000002e},
				{Code: 0x15, Jt: 153, Jf: 0, K: 0x0000002f},
				{Code: 0x15, Jt: 152, Jf: 0, K: 0x00000030},
				{Code: 0x15, Jt: 151, Jf: 0, K: 0x00000031},
				{Code: 0x15, Jt: 150, Jf: 0, K: 0x00000032},
				{Code: 0x15, Jt: 149, Jf: 0, K: 0x00000033},
				{Code: 0x15, Jt: 148, Jf: 0, K: 0x00000034},
				{Code: 0x15, Jt: 147, Jf: 0, K: 0x00000035},
				{Code: 0x15, Jt: 146, Jf: 0, K: 0x00000036},
				{Code: 0x15, Jt: 145, Jf: 0, K: 0x00000037},
				{Code: 0x15, Jt: 144, Jf: 0, K: 0x00000038},
				{Code: 0x15, Jt: 143, Jf: 0, K: 0x00000039},
				{Code: 0x15, Jt: 142, Jf: 0, K: 0x0000003a},
				{Code: 0x15, Jt: 141, Jf: 0, K: 0x0000003b},
				{Code: 0x15, Jt: 140, Jf: 0, K: 0x0000003c},
				{Code: 0x15, Jt: 139, Jf: 0, K: 0x0000003d},
				{Code: 0x15, Jt: 138, Jf: 0, K: 0x0000003e},
				{Code: 0x15, Jt: 137, Jf: 0, K: 0x0000003f},
				{Code: 0x15, Jt: 136, Jf: 0, K: 0x00000040},
				{Code: 0x15, Jt: 135, Jf: 0, K: 0x00000041},
				{Code: 0x15, Jt: 134, Jf: 0, K: 0x00000042},
				{Code: 0x15, Jt: 133, Jf: 0, K: 0x00000043},
				{Code: 0x15, Jt: 132, Jf: 0, K: 0x00000044},
				{Code: 0x15, Jt: 131, Jf: 0, K: 0x00000045},
				{Code: 0x15, Jt: 130, Jf: 0, K: 0x00000046},
				{Code: 0x15, Jt: 129, Jf: 0, K: 0x00000047},
				{Code: 0x15, Jt: 128, Jf: 0, K: 0x00000048},
				{Code: 0x15, Jt: 127, Jf: 0, K: 0x00000049},
				{Code: 0x15, Jt: 126, Jf: 0, K: 0x0000004a},
				{Code: 0x15, Jt: 125, Jf: 0, K: 0x0000004b},
				{Code: 0x15, Jt: 124, Jf: 0, K: 0x0000004c},
				{Code: 0x15, Jt: 123, Jf: 0, K: 0x0000004d},
				{Code: 0x15, Jt: 122, Jf: 0, K: 0x0000004e},
				{Code: 0x15, Jt: 121, Jf: 0, K: 0x0000004f},
				{Code: 0x15, Jt: 120, Jf: 0, K: 0x00000050},
				{Code: 0x15, Jt: 119, Jf: 0, K: 0x00000051},
				{Code: 0x15, Jt: 118, Jf: 0, K: 0x00000052},
				{Code: 0x15, Jt: 117, Jf: 0, K: 0x00000053},
				{Code: 0x15, Jt: 116, Jf: 0, K: 0x00000054},
				{Code: 0x15, Jt: 115, Jf: 0, K: 0x00000055},
				{Code: 0x15, Jt: 114, Jf: 0, K: 0x00000056},
				{Code: 0x15, Jt: 113, Jf: 0, K: 0x00000057},
				{Code: 0x15, Jt: 112, Jf: 0, K: 0x00000058},
				{Code: 0x15, Jt: 111, Jf: 0, K: 0x00000059},
				{Code: 0x15, Jt: 110, Jf: 0, K: 0x0000005a},
				{Code: 0x15, Jt: 109, Jf: 0, K: 0x0000005b},
				{Code: 0x15, Jt: 108, Jf: 0, K: 0x0000005c},
				{Code: 0x15, Jt: 107, Jf: 0, K: 0x0000005d},
				{Code: 0x15, Jt: 106, Jf: 0, K: 0x0000005e},
				{Code: 0x15, Jt: 105, Jf: 0, K: 0x0000005f},
				{Code: 0x15, Jt: 104, Jf: 0, K: 0x00000060},
				{Code: 0x15, Jt: 103, Jf: 0, K: 0x00000061},
				{Code: 0x15, Jt: 102, Jf: 0, K: 0x00000062},
				{Code: 0x15, Jt: 101, Jf: 0, K: 0x00000063},
				{Code: 0x15, Jt: 100, Jf: 0, K: 0x00000064},
				{Code: 0x15, Jt: 99, Jf: 0, K: 0x00000065},
				{Code: 0x15, Jt: 98, Jf: 0, K: 0x00000066},
				{Code: 0x15, Jt: 97, Jf: 0, K: 0x00000067},
				{Code: 0x15, Jt: 96, Jf: 0, K: 0x00000068},
				{Code: 0x15, Jt: 95, Jf: 0, K: 0x00000069},
				{Code: 0x15, Jt: 94, Jf: 0, K: 0x0000006a},
				{Code: 0x15, Jt: 93, Jf: 0, K: 0x0000006b},
				{Code: 0x15, Jt: 92, Jf: 0, K: 0x0000006c},
				{Code: 0x15, Jt: 91, Jf: 0, K: 0x0000006d},
				{Code: 0x15, Jt: 90, Jf: 0, K: 0x0000006e},
				{Code: 0x15, Jt: 89, Jf: 0, K: 0x0000006f},
				{Code: 0x15, Jt: 88, Jf: 0, K: 0x00000070},
				{Code: 0x15, Jt: 87, Jf: 0, K: 0x00000071},
				{Code: 0x15, Jt: 86, Jf: 0, K: 0x00000072},
				{Code: 0x15, Jt: 85, Jf: 0, K: 0x00000073},
				{Code: 0x15, Jt: 84, Jf: 0, K: 0x00000074},
				{Code: 0x15, Jt: 83, Jf: 0, K: 0x00000075},
				{Code: 0x15, Jt: 82, Jf: 0, K: 0x00000076},
				{Code: 0x15, Jt: 81, Jf: 0, K: 0x00000077},
				{Code: 0x15, Jt: 80, Jf: 0, K: 0x00000078},
				{Code: 0x15, Jt: 79, Jf: 0, K: 0x00000079},
				{Code: 0x15, Jt: 78, Jf: 0, K: 0x0000007a},
				{Code: 0x15, Jt: 77, Jf: 0, K: 0x0000007b},
				{Code: 0x15, Jt: 76, Jf: 0, K: 0x0000007c},
				{Code: 0x15, Jt: 75, Jf: 0, K: 0x0000007d},
				{Code: 0x15, Jt: 74, Jf: 0, K: 0x0000007e},
				{Code: 0x15, Jt: 73, Jf: 0, K: 0x0000007f},
				{Code: 0x15, Jt: 72, Jf: 0, K: 0x00000080},
				{Code: 0x15, Jt: 71, Jf: 0, K: 0x00000081},
				{Code: 0x15, Jt: 70, Jf: 0, K: 0x00000082},
				{Code: 0x15, Jt: 69, Jf: 0, K: 0x00000083},
				{Code: 0x15, Jt: 68, Jf: 0, K: 0x00000084},
				{Code: 0x15, Jt: 67, Jf: 0, K: 0x00000085},
				{Code: 0x15, Jt: 66, Jf: 0, K: 0x00000086},
				{Code: 0x15, Jt: 65, Jf: 0, K: 0x00000087},
				{Code: 0x15, Jt: 64, Jf: 0, K: 0x00000088},
				{Code: 0x15, Jt: 63, Jf: 0, K: 0x00000089},
				{Code: 0x15, Jt: 62, Jf: 0, K: 0x0000008a},
				{Code: 0x15, Jt: 61, Jf: 0, K: 0x0000008b},
				{Code: 0x15, Jt: 60, Jf: 0, K: 0x0000008c},
				{Code: 0x15, Jt: 59, Jf: 0, K: 0x0000008d},
				{Code: 0x15, Jt: 58, Jf: 0, K: 0x0000008e},
				{Code: 0x15, Jt: 57, Jf: 0, K: 0x0000008f},
				{Code: 0x15, Jt: 56, Jf: 0, K: 0x00000090},
				{Code: 0x15, Jt: 55, Jf: 0, K: 0x00000091},
				{Code: 0x15, Jt: 54, Jf: 0, K: 0x00000092},
				{Code: 0x15, Jt: 53, Jf: 0, K: 0x00000093},
				{Code: 0x15, Jt: 52, Jf: 0, K: 0x00000094},
				{Code: 0x15, Jt: 51, Jf: 0, K: 0x00000095},
				{Code: 0x15, Jt: 50, Jf: 0, K: 0x00000096},
				{Code: 0x15, Jt: 49, Jf: 0, K: 0x00000097},
				{Code: 0x15, Jt: 48, Jf: 0, K: 0x00000098},
				{Code: 0x15, Jt: 47, Jf: 0, K: 0x00000099},
				{Code: 0x15, Jt: 46, Jf: 0, K: 0x0000009a},
				{Code: 0x15, Jt: 45, Jf: 0, K: 0x0000009b},
				{Code: 0x15, Jt: 44, Jf: 0, K: 0x0000009c},
				{Code: 0x15, Jt: 43, Jf: 0, K: 0x0000009d},
				{Code: 0x15, Jt: 42, Jf: 0, K: 0x0000009e},
				{Code: 0x15, Jt: 41, Jf: 0, K: 0x0000009f},
				{Code: 0x15, Jt: 40, Jf: 0, K: 0x000000a0},
				{Code: 0x15, Jt: 39, Jf: 0, K: 0x000000a1},
				{Code: 0x15, Jt: 38, Jf: 0, K: 0x000000a2},
				{Code: 0x15, Jt: 37, Jf: 0, K: 0x000000a3},
				{Code: 0x15, Jt: 36, Jf: 0, K: 0x000000a4},
				{Code: 0x15, Jt: 35, Jf: 0, K: 0x000000a5},
				{Code: 0x15, Jt: 34, Jf: 0, K: 0x000000a6},
				{Code: 0x15, Jt: 33, Jf: 0, K: 0x000000a7},
				{Code: 0x15, Jt: 32, Jf: 0, K: 0x000000a8},
				{Code: 0x15, Jt: 31, Jf: 0, K: 0x000000a9},
				{Code: 0x15, Jt: 30, Jf: 0, K: 0x000000aa},
				{Code: 0x15, Jt: 29, Jf: 0, K: 0x000000ab},
				{Code: 0x15, Jt: 28, Jf: 0, K: 0x000000ac},
				{Code: 0x15, Jt: 27, Jf: 0, K: 0x000000ad},
				{Code: 0x15, Jt: 26, Jf: 0, K: 0x000000ae},
				{Code: 0x15, Jt: 25, Jf: 0, K: 0x000000af},
				{Code: 0x15, Jt: 24, Jf: 0, K: 0x000000b0},
				{Code: 0x15, Jt: 23, Jf: 0, K: 0x000000b1},
				{Code: 0x15, Jt: 22, Jf: 0, K: 0x000000b2},
				{Code: 0x15, Jt: 21, Jf: 0, K: 0x000000b3},
				{Code: 0x15, Jt: 20, Jf: 0, K: 0x000000b4},
				{Code: 0x15, Jt: 19, Jf: 0, K: 0x000000b5},
				{Code: 0x15, Jt: 18, Jf: 0, K: 0x000000b6},
				{Code: 0x15, Jt: 17, Jf: 0, K: 0x000000b7},
				{Code: 0x15, Jt: 16, Jf: 0, K: 0x000000b8},
				{Code: 0x15, Jt: 15, Jf: 0, K: 0x000000b9},
				{Code: 0x15, Jt: 14, Jf: 0, K: 0x000000ba},
				{Code: 0x15, Jt: 13, Jf: 0, K: 0x000000bb},
				{Code: 0x15, Jt: 12, Jf: 0, K: 0x000000bc},
				{Code: 0x15, Jt: 11, Jf: 0, K: 0x000000bd},
				{Code: 0x15, Jt: 10, Jf: 0, K: 0x000000be},
				{Code: 0x15, Jt: 9, Jf: 0, K: 0x000000bf},
				{Code: 0x15, Jt: 8, Jf: 0, K: 0x000000c0},
				{Code: 0x15, Jt: 7, Jf: 0, K: 0x000000c1},
				{Code: 0x15, Jt: 6, Jf: 0, K: 0x000000c2},
				{Code: 0x15, Jt: 5, Jf: 0, K: 0x000000c3},
				{Code: 0x15, Jt: 4, Jf: 0, K: 0x000000c4},
				{Code: 0x15, Jt: 3, Jf: 0, K: 0x000000c5},
				{Code: 0x15, Jt: 2, Jf: 0, K: 0x000000c6},
				{Code: 0x15, Jt: 1, Jf: 0, K: 0x000000c7},
				{Code: 0x15, Jt: 0, Jf: 1, K: 0x000000c8},
				{Code: 0x6, Jt: 0, Jf: 0, K: 0x00040000},
				{Code: 0x6, Jt: 0, Jf: 0, K: 0x00000000},
			}

			// Create structure
			filter := syscall.SockFprog{
				Len:    uint16(len(program)),
				Filter: &program[0],
			}
			_, _, errno := syscall.Syscall6(
				syscall.SYS_SETSOCKOPT,
				uintptr(fd),
				uintptr(syscall.SOL_SOCKET),
				uintptr(syscall.SO_ATTACH_FILTER),
				uintptr(unsafe.Pointer(&filter)),
				uintptr(unsafe.Sizeof(filter)),
				0,
			)

			if errno != 0 {
				return fmt.Errorf("setsockopt failed: %v", errno)
			}

			return nil
		}, func(_ *model.Event, rule *rules.Rule) {
			assertTriggeredRule(t, rule, "test_rule_setsockopt_truncated_filter")
		})
	})

}
