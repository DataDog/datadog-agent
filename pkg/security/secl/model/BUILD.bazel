load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "model",
    srcs = [
        "accessors_unix.go",
        "accessors_windows.go",
        "args_envs.go",
        "category.go",
        "consts_common.go",
        "consts_linux.go",
        "consts_linux_amd64.go",
        "consts_linux_arm.go",
        "consts_linux_arm64.go",
        "consts_map_names.go",
        "consts_other.go",
        "consts_windows.go",
        "dns_helpers_linux.go",
        "errors.go",
        "events.go",
        "field_accessors_unix.go",
        "field_accessors_windows.go",
        "field_handlers_unix.go",
        "field_handlers_windows.go",
        "legacy_secl.go",
        "marshallers_linux.go",
        "model.go",
        "model_helpers_unix.go",
        "model_string.go",
        "model_unix.go",
        "model_windows.go",
        "oo_symlink_unix.go",
        "process_cache_entry_unix.go",
        "process_cache_entry_windows.go",
        "strings.go",
        "syscalls.go",
        "syscalls_linux_amd64.go",
        "syscalls_linux_arm64.go",
        "syscalls_string_linux_amd64.go",
        "syscalls_string_linux_arm64.go",
        "syscalls_unsupported.go",
        "unmarshallers_linux.go",
        "utils.go",
        "variables.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/security/secl/model",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/security/secl/compiler/eval",
        "//pkg/security/secl/model/usersession",
        "@com_github_hashicorp_golang_lru_v2//:golang-lru",
    ] + select({
        "@rules_go//go/platform:android_386": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:android_amd64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:android_arm": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:android_arm64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_386": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_amd64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_arm": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_arm64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_mips": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_mips64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_mips64le": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_mipsle": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_ppc64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_ppc64le": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_riscv64": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux_s390x": [
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "model_test",
    srcs = [
        "consts_test.go",
        "dns_helpers_linux_test.go",
        "model_test.go",
        "process_cache_entry_unix_test.go",
        "strings_test.go",
        "unmarshallers_test.go",
        "utils_test.go",
    ],
    embed = [":model"],
    deps = [
        "@com_github_stretchr_testify//assert",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/security/secl/compiler/eval",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/security/secl/compiler/eval",
        ],
        "//conditions:default": [],
    }),
)
