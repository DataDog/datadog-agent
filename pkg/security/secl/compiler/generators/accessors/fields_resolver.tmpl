// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2022-present Datadog, Inc.

{{range .BuildTags }}// {{.}}{{end}}

// Code generated - DO NOT EDIT.

package {{.Name}}

import (

)

// ResolveFields resolves all the fields associate to the event type. Context fields are automatically resolved.
func (ev *Event) ResolveFields() {
    {{ $uniqueResolvers := dict }}
    // resolve context fields that are not related to any event type
{{- range $Key, $Field := .Fields}}
    {{- if and (eq $Field.Event "*") (ne $Field.Handler "") (not $Field.Iterator) (eq $Field.CachelessResolution false) }}
        {{- if (eq $Field.Prefix "") }}
            _ = {{ print "ev." $Field.Handler "(ev)"}}
        {{- else}}
            {{$Ptr := "&"}}
            {{$Parent := index $.AllFields $Field.Prefix}}
            {{- if $Parent.IsOrigTypePtr}}
                {{$Ptr = ""}}
            {{end}}

            {{ $resolver := print "ev." $Field.Handler "(" $Ptr "ev." $Field.Prefix ")" }}
            {{ if not (hasKey $uniqueResolvers $resolver) }}
            _ = {{ print $resolver }}
            {{ $_ := set $uniqueResolvers $resolver "" }}
            {{ end }}
        {{- end}}
    {{- end -}}
{{end}}

    // resolve event specific fields
    switch ev.GetEventType().String() {
    {{- range $Name, $EventType := .EventTypes}}
        {{- if (ne $Name "*") }}
        case "{{$Name}}":
            {{- range $Key, $FieldName := $EventType.Fields }}
            {{- $Field := index $.Fields $FieldName }}
                {{- if and (ne $Field.Handler "") (not $Field.Iterator) (eq $Field.CachelessResolution false) }}
                    {{- if (eq $Field.Prefix "") }}
                        _ = {{ print "ev." $Field.Handler "(ev)"}}
                    {{- else}}
                        {{$Ptr := "&"}}
                        {{$Parent := index $.AllFields $Field.Prefix}}
                        {{- if $Parent.IsOrigTypePtr}}
                            {{$Ptr = ""}}
                        {{end}}

                        _ = {{ print "ev." $Field.Handler "(" $Ptr "ev." $Field.Prefix ")"}}
                    {{- end}}
                {{- end -}}
            {{end}}
        {{- end}}
    {{end}}
    }
}
