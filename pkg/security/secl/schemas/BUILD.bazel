load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "schemas",
    srcs = ["schemas.go"],
    embedsrcs = [
        "accept.schema.json",
        "activity_dump.schema.json",
        "activity_dump_proto.schema.json",
        "agent_context.schema.json",
        "bind.schema.json",
        "bpf.schema.json",
        "chmod.schema.json",
        "chown.schema.json",
        "connect.schema.json",
        "container.schema.json",
        "container_context.schema.json",
        "container_event.schema.json",
        "container_event_no_file.schema.json",
        "datetime.schema.json",
        "dns.schema.json",
        "event.schema.json",
        "exec.schema.json",
        "exit.schema.json",
        "file.schema.json",
        "hash.schema.json",
        "heartbeat.schema.json",
        "host_event.schema.json",
        "host_event_no_file.schema.json",
        "imds.schema.json",
        "kill.schema.json",
        "link.schema.json",
        "load_module.schema.json",
        "load_module_no_file.schema.json",
        "message.schema.json",
        "mmap.schema.json",
        "mount.schema.json",
        "mprotect.schema.json",
        "network.schema.json",
        "open.schema.json",
        "policy.schema.json",
        "process.schema.json",
        "process_context.schema.json",
        "ptrace.schema.json",
        "rename.schema.json",
        "ruleset_loaded.schema.json",
        "selinux.schema.json",
        "signal.schema.json",
        "span.schema.json",
        "span_context.schema.json",
        "splice.schema.json",
        "unload_module.schema.json",
        "user_session.schema.json",
        "user_session_context.schema.json",
        "usr.schema.json",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/security/secl/schemas",
    visibility = ["//visibility:public"],
)
