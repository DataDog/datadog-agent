load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "module",
    srcs = [
        "cws.go",
        "cws_linux.go",
        "cws_others.go",
        "grpc.go",
        "msg_sender.go",
        "opts.go",
        "reloader.go",
        "reloader_linux.go",
        "reloader_other.go",
        "server.go",
        "server_linux.go",
        "server_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/security/module",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/config",
        "//pkg/eventmonitor",
        "//pkg/security/common",
        "//pkg/security/config",
        "//pkg/security/events",
        "//pkg/security/metrics",
        "//pkg/security/probe",
        "//pkg/security/probe/config",
        "//pkg/security/probe/kfilters",
        "//pkg/security/probe/selftests",
        "//pkg/security/proto/api",
        "//pkg/security/reporter",
        "//pkg/security/rules",
        "//pkg/security/rules/monitor",
        "//pkg/security/secl/compiler/eval",
        "//pkg/security/secl/model",
        "//pkg/security/secl/rules",
        "//pkg/security/seclog",
        "//pkg/security/serializers",
        "//pkg/security/utils",
        "//pkg/util/log",
        "//pkg/util/startstop",
        "//pkg/version",
        "@com_github_datadog_datadog_go_v5//statsd",
        "@com_github_mailru_easyjson//:easyjson",
        "@org_golang_google_grpc//:go_default_library",
        "@org_uber_go_atomic//:atomic",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/util/kernel",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/util/kernel",
        ],
        "//conditions:default": [],
    }),
)
