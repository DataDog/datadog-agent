load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "probes",
    srcs = [
        "all.go",
        "attr.go",
        "bind.go",
        "bpf.go",
        "builder.go",
        "chdir.go",
        "const.go",
        "dentry.go",
        "event_types.go",
        "exec.go",
        "flow.go",
        "ioctl.go",
        "iouring.go",
        "link.go",
        "mkdir.go",
        "mmap.go",
        "module.go",
        "mount.go",
        "mprotect.go",
        "net_device.go",
        "open.go",
        "ptrace.go",
        "raw_sys_exit.go",
        "rename.go",
        "rmdir.go",
        "selinux.go",
        "shared.go",
        "signal.go",
        "splice.go",
        "syscall_helpers.go",
        "syscall_monitor.go",
        "tc.go",
        "unlink.go",
        "xattr.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/security/ebpf/probes",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//pkg/security/ebpf/kernel",
            "//pkg/security/secl/compiler/eval",
            "//pkg/security/secl/model",
            "//pkg/security/utils",
            "//pkg/util/kernel",
            "//pkg/util/log",
            "@com_github_cilium_ebpf//:ebpf",
            "@com_github_datadog_ebpf_manager//:ebpf-manager",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/security/ebpf/kernel",
            "//pkg/security/secl/compiler/eval",
            "//pkg/security/secl/model",
            "//pkg/security/utils",
            "//pkg/util/kernel",
            "//pkg/util/log",
            "@com_github_cilium_ebpf//:ebpf",
            "@com_github_datadog_ebpf_manager//:ebpf-manager",
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)
