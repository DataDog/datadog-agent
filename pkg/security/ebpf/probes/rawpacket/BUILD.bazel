load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "rawpacket",
    srcs = [
        "bpffilter.go",
        "pcap.go",
        "pcap_unsupported.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/security/ebpf/probes/rawpacket",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//pkg/security/ebpf/probes",
            "//pkg/security/secl/compiler/eval",
            "@com_github_cilium_ebpf//:ebpf",
            "@com_github_cilium_ebpf//asm",
            "@com_github_cloudflare_cbpfc//:cbpfc",
            "@com_github_google_gopacket//layers",
            "@com_github_google_gopacket//pcap",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@org_golang_x_net//bpf",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/security/ebpf/probes",
            "//pkg/security/secl/compiler/eval",
            "@com_github_cilium_ebpf//:ebpf",
            "@com_github_cilium_ebpf//asm",
            "@com_github_cloudflare_cbpfc//:cbpfc",
            "@com_github_google_gopacket//layers",
            "@com_github_google_gopacket//pcap",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@org_golang_x_net//bpf",
        ],
        "//conditions:default": [],
    }),
)
