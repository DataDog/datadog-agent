// +build  linux

// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  probe

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( AbnormalPathEvent ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AbnormalPathEvent ) UnmarshalJSON([]byte) error { return nil }
func ( AbnormalPathEvent ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AbnormalPathEvent ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AbnormalPathEvent *AbnormalPathEvent

func ( EventLostRead ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventLostRead ) UnmarshalJSON([]byte) error { return nil }
func ( EventLostRead ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventLostRead ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventLostRead *EventLostRead

func ( EventLostWrite ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventLostWrite ) UnmarshalJSON([]byte) error { return nil }
func ( EventLostWrite ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventLostWrite ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventLostWrite *EventLostWrite

func ( NoisyProcessEvent ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* NoisyProcessEvent ) UnmarshalJSON([]byte) error { return nil }
func ( NoisyProcessEvent ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* NoisyProcessEvent ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_NoisyProcessEvent *NoisyProcessEvent

func ( PolicyLoaded ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PolicyLoaded ) UnmarshalJSON([]byte) error { return nil }
func ( PolicyLoaded ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PolicyLoaded ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PolicyLoaded *PolicyLoaded

func ( RuleIgnored ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RuleIgnored ) UnmarshalJSON([]byte) error { return nil }
func ( RuleIgnored ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RuleIgnored ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RuleIgnored *RuleIgnored

func ( RuleLoaded ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RuleLoaded ) UnmarshalJSON([]byte) error { return nil }
func ( RuleLoaded ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RuleLoaded ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RuleLoaded *RuleLoaded

func ( RulesetLoadedEvent ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RulesetLoadedEvent ) UnmarshalJSON([]byte) error { return nil }
func ( RulesetLoadedEvent ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RulesetLoadedEvent ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RulesetLoadedEvent *RulesetLoadedEvent
