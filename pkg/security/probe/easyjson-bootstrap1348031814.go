//go:build ignore
// +build ignore

// TEMPORARY AUTOGENERATED FILE: easyjson bootstapping code to launch
// the actual generator.

package main

import (
	"fmt"
	"os"

	"github.com/mailru/easyjson/gen"

	pkg "github.com/DataDog/datadog-agent/pkg/security/probe"
)

func main() {
	g := gen.NewGenerator("serializers_easyjson.go")
	g.SetPkg("probe", "github.com/DataDog/datadog-agent/pkg/security/probe")
	g.SetBuildTags("linux")
	g.NoStdMarshalers()
	g.Add(pkg.EasyJSON_exporter_BPFEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_BPFMapSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_BPFProgramSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_CapsetSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_ContainerContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_CredentialsSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_DDContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_DNSEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_DNSQuestionSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_EventContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_EventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_FileEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_FileSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_IPPortSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_MMapEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_MProtectEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_ModuleEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_NetworkContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_NetworkDeviceSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_PTraceEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_ProcessContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_ProcessCredentialsSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_ProcessSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_SELinuxEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_SetgidSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_SetuidSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_SignalEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_SpliceEventSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_UserContextSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_selinuxBoolChangeSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_selinuxBoolCommitSerializer(nil))
	g.Add(pkg.EasyJSON_exporter_selinuxEnforceStatusSerializer(nil))
	if err := g.Run(os.Stdout); err != nil {
		fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}
}
