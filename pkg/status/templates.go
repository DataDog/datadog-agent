// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/aggregator.tmpl
// templates/autodiscovery.tmpl
// templates/clusteragent.tmpl
// templates/collector.tmpl
// templates/compliance.tmpl
// templates/custommetricsprovider.tmpl
// templates/dogstatsd.tmpl
// templates/endpoints.tmpl
// templates/forwarder.tmpl
// templates/header.tmpl
// templates/jmxfetch.tmpl
// templates/logsagent.tmpl
// templates/metadatamapper.tmpl
// templates/orchestrator.tmpl
// templates/runtimesecurity.tmpl
// templates/snmp-traps.tmpl
// templates/systemprobe.tmpl
// templates/trace-agent.tmpl

package status

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataAggregatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcd\x8e\x9b\x30\x14\x85\xf7\x3c\xc5\x5d\x64\x15\x4d\x87\x7d\xa4\x59\xb4\xd3\x54\xb3\xe9\xa4\x52\xda\x07\x70\xe0\x62\x2c\x6c\x8c\xec\x0b\x91\x8a\x78\xf7\x2a\x98\x10\x7e\x6c\xd2\xac\xd0\xf1\x39\xdf\xb1\x6f\xc0\x6d\x1b\xef\xa3\xcf\xd3\xef\xe3\x01\xde\x73\x56\x72\xb4\xa0\x58\x8a\x40\x1a\x28\x17\x16\x08\x55\x25\x19\x21\xd8\x5c\xd7\x32\x85\x0b\x82\xc1\x4c\x62\x42\x98\x82\x2e\x81\x72\x84\x4c\x4b\xa9\xaf\xa2\xe4\xa3\xdb\xbe\x80\xc8\x80\x55\x95\x14\x09\xbb\x48\x3c\x44\x7b\x48\x54\x1a\x33\x8e\x25\xc5\xbc\x16\x71\x23\xf0\x6a\xe3\xd1\x1f\x73\x2c\xd1\x30\x79\x26\x46\xb5\x7d\x25\x55\xc9\x68\x1f\x77\xdd\xdb\xfd\x17\x7d\xe5\xdc\x20\x67\xa4\x4d\xf4\x10\xdb\xf6\xcb\xad\xe8\xf5\x3d\xc7\xa4\xb0\x3f\x91\x8c\x48\xce\x4c\x55\x12\xa1\xeb\x22\x00\xa7\x83\x5b\x00\xb7\x72\x80\xb6\xcd\x6b\xc5\x4a\xf1\x17\x7d\xc9\xae\xeb\xb1\x58\xa6\x30\x3c\xde\x1a\xbe\x6b\x6e\x89\x91\x4d\x17\x56\x80\x71\x65\xab\x26\x14\xf7\x34\x1d\x1b\x2c\xa9\x27\xf7\x4f\x73\xce\x7d\x31\x94\xb3\x3f\x64\x6d\x73\x4c\x1f\x79\x0b\x83\xe4\x01\x4d\xdc\xdb\xc0\xa3\x31\xda\xd8\x15\x14\x9c\x1e\x24\x8f\x31\x0f\xfd\xb3\x56\x17\x34\xa7\xac\x37\xf6\x64\xa7\xc0\x29\x1b\x76\xbc\xe0\x2e\x03\x1e\xe6\x19\x8d\xc0\xd9\x08\x9c\xe2\x1f\xc1\xd2\xbd\x0d\x9c\x8c\x60\x0a\xf5\x8e\xc0\x17\xf3\xd3\x1b\x91\x60\xff\x0a\xde\xc1\x37\xc1\xbd\xb6\x2b\xe4\xd4\xfb\x84\xb6\x18\xc1\x03\x1a\x1e\x85\x27\xfb\x3f\x25\xf3\xb1\xac\x8a\x42\xe3\x09\x40\x7c\x8d\x05\x52\x92\x2f\xfe\xd5\x41\x0b\x1c\x66\x95\x78\x86\x9d\x1e\x62\x86\xf6\x6f\xdf\x1b\xf5\x74\xb8\x41\x7c\x08\x4b\x9a\x1b\xa6\xbe\xd5\x49\x81\x14\xbc\xa4\x46\x1f\x38\xe3\xf3\x5b\x6b\x83\xbc\xf1\x45\xff\x92\x8c\x32\x6d\xd4\xf0\x21\x0f\xcb\xe6\x76\xf7\xc3\xae\x78\x81\x5d\x03\x87\xb7\xa0\x17\xa0\x6d\x61\x57\x40\xd7\xcd\x76\xb4\x6b\xd6\x8d\x8b\xf2\x0f\x6d\xa9\x64\x0a\xff\x54\x29\x23\x77\x75\xde\x25\x70\xda\xfc\x8c\x2b\xff\x84\xf9\x2f\x00\x00\xff\xff\xa1\x06\x1d\x60\xb6\x06\x00\x00")

func bindataAggregatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataAggregatorTmpl,
		"/aggregator.tmpl",
	)
}

func bindataAggregatorTmpl() (*asset, error) {
	bytes, err := bindataAggregatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/aggregator.tmpl",
		size:        1718,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataAutodiscoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcb\x8e\xdb\x30\x0c\xbc\xeb\x2b\x88\xc5\x1e\xda\x20\x89\xef\x01\x72\x28\xb6\x29\xd0\x4b\x7b\x68\x7f\x40\x6b\xd1\x36\x01\x59\x32\x28\x3a\xe9\xc2\xf0\xbf\x17\x92\x1f\x91\x77\xb7\x0f\x9d\xa4\xe1\x70\x48\x8e\x38\x0c\xc5\x4e\x7d\xfb\xfe\xf3\x72\x82\xa7\x46\xbb\x1a\x03\xb4\xda\x20\x88\x07\x69\x28\x80\x60\xdb\x59\x2d\x08\xa1\xf1\xbd\x35\xf0\x8c\xc0\x58\x59\x2c\x05\x0d\x78\x07\xd2\x20\x54\xde\x5a\x7f\x23\x57\xaf\xec\xb0\x07\xaa\x40\x77\x9d\xa5\x52\x3f\x5b\x3c\xa9\x1d\x94\xad\x29\x74\x8d\x4e\x8a\xba\xa7\xe2\x4a\x78\x0b\xc5\xca\x2f\x6a\x74\xc8\xda\xfe\x10\x2d\x7d\x38\x4a\xdb\x59\xb5\x2b\xc6\x51\xa9\x61\x38\x44\x2d\xcf\xf0\xe1\xa8\xcd\xc5\x45\x39\xf3\x05\xb5\xf4\x8c\xe1\x63\x02\x9f\xbc\xab\xa8\xbe\x30\x7b\x4e\x48\x45\x56\x90\x97\xf7\x38\xaa\x73\x7e\xd4\xa7\x5e\xbc\xa1\x50\xfa\x2b\xf2\xcb\xab\x58\xac\x76\x23\x69\xe0\x6d\xad\x71\x54\x00\x33\x06\x0b\xa8\x00\xce\xaf\x8e\x02\x88\x2a\x1c\xcd\x84\xc7\x6a\x22\xee\xe1\x11\xdb\x4e\x5e\xe0\x74\x86\x23\x24\xa9\x48\x5b\xe3\x13\x14\xf3\xd0\x99\xf8\x18\x86\xe5\xb6\xe9\x29\x1f\x35\xa5\x4c\x40\xcf\x5a\xc8\x3b\x98\x02\xef\x34\xf5\xb6\xb1\x32\x25\x76\xec\xaf\x64\x90\xf7\x0b\x80\x49\x21\x6b\x73\xf6\x7f\x1b\x3e\xac\x13\xac\x7a\x64\xd0\x09\x55\x94\xb4\x90\xb9\xd5\x5d\x54\xd9\xe6\x65\x83\xdf\xf9\x19\xda\x31\x39\xf9\xac\x43\x83\x61\xc3\x78\x38\x3c\x2c\xac\x4d\x51\x64\xce\x9d\x9d\xeb\xae\xcc\xa9\x12\x32\x6f\x93\x67\x63\xf3\xe7\x61\xe3\xff\xe1\xbf\x7e\x23\x5f\x33\x58\x3e\x43\x34\x39\x64\xf8\xea\x4a\xdb\x07\xf2\xae\xb8\xfc\x9a\x6f\x7f\xff\x9c\x7f\x6c\x51\x2a\x95\x4c\xfc\xf3\x26\xdd\x39\xef\x6c\xd3\x7d\xb0\xfc\xfe\x3b\x00\x00\xff\xff\x65\xd3\xd1\x36\xfe\x03\x00\x00")

func bindataAutodiscoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataAutodiscoveryTmpl,
		"/autodiscovery.tmpl",
	)
}

func bindataAutodiscoveryTmpl() (*asset, error) {
	bytes, err := bindataAutodiscoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/autodiscovery.tmpl",
		size:        1022,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1634920831, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusteragentTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\xdf\x75\x15\x1f\xa0\xd0\x45\x71\x72\x81\x16\xba\x37\xd2\xd8\x11\x88\x99\x22\x8d\x02\x45\xe4\xee\x45\x56\x5c\xdc\x20\xdb\x2b\x23\x0d\xef\xbd\x51\xf7\xd6\xfa\xba\xf3\xa8\xa3\x95\x19\x83\x4f\x51\x29\xe0\x7d\x26\xd6\x9d\xd9\x9c\xe1\x26\xf4\x67\x52\x32\xea\x84\x2f\x21\x48\xc0\xfd\xde\x01\x27\x0c\x92\xbc\x05\x8b\xc2\x2e\xf7\xd0\x2b\xa1\x49\x7f\x89\x20\xb6\xdf\xe2\x58\x5f\x91\x73\x0b\x98\x33\xc8\x47\x5a\xd9\x4d\xcc\x1f\xe4\x21\x24\x5b\x69\x97\xf5\x78\xe1\x9c\xca\xd8\xfa\x5b\xea\x07\x61\x3e\xcc\x0f\x34\x9a\xeb\x7e\x7d\x95\x34\x28\x4f\xae\x22\x2b\xb8\xfe\x8b\x42\x74\xc2\x2d\x91\x06\x47\x37\x5a\x5c\xb7\xc7\x94\x4c\xfb\xea\xfe\xff\xbb\x7c\x26\x63\x28\xc6\x29\x79\xff\x03\x53\x83\xc8\x42\xe5\x88\x50\x12\x3e\x12\xb3\xe3\xb9\x6e\xb2\xc9\xdb\x6c\xf0\x1b\x00\x00\xff\xff\xcf\x52\x20\xcf\x2e\x02\x00\x00")

func bindataClusteragentTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusteragentTmpl,
		"/clusteragent.tmpl",
	)
}

func bindataClusteragentTmpl() (*asset, error) {
	bytes, err := bindataClusteragentTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/clusteragent.tmpl",
		size:        558,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1582548730, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCollectorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xcd\x6e\xe3\x38\x0c\xbe\xfb\x29\x88\x20\x87\x76\xd0\x24\x87\xb9\x05\xe8\x61\xd0\xf6\x50\xa0\xed\x16\x9b\x0e\xf6\xac\xda\x4c\x2c\xc4\x96\xb3\x92\x9c\xb6\x63\xe8\xdd\x17\xd4\x8f\x2d\x3b\x76\xda\xdd\x1d\x9f\x6c\xea\xe3\xc7\x1f\x93\x22\x9b\x66\xf5\x2d\x79\xfa\xe3\xe5\x6e\x0d\x37\x39\x13\x3b\x54\x50\xb2\x0c\x41\x57\xa0\x73\xae\x40\x63\x79\x28\x98\x46\x50\x79\x55\x17\x19\xbc\x22\x48\xdc\x16\x98\x6a\xcc\xa0\x12\xa0\x73\x84\x6d\x55\x14\xd5\x1b\x17\xbb\x16\xad\xae\x80\x6f\x81\x1d\x0e\x05\x4f\xd9\x6b\x81\xeb\xe4\x1b\xa4\x65\xb6\x62\x3b\x14\x7a\xb5\xab\xf9\xea\xc8\xf1\x4d\xad\x5a\xfc\x2a\xad\x0a\x22\xad\xe4\x46\x33\x5d\xab\xa5\x2e\x0f\xc5\xa7\x4a\x8a\x8b\x5d\x81\x37\x39\xa6\x7b\xaf\xb0\x32\xe6\x3a\x3c\xc9\x4d\xe0\x4c\x3a\x59\xd2\x34\x0b\x78\xe3\x3a\x87\xe5\xe1\x43\xe7\x95\xb8\x17\x5c\xc3\xc2\x98\x04\x80\x8e\xf8\x16\x96\x77\x52\x56\x52\x81\x95\xd9\x77\xe0\x82\x6b\xce\x0a\xfe\x8b\x82\x7c\xb6\x7a\x09\xc0\xf5\xd4\x93\x00\x10\x1b\x48\x4a\x28\xcc\x51\x4a\x58\x5f\xb7\xbc\xce\x18\xc0\x82\x20\xf6\xd0\x0b\x9a\x06\x50\x64\xd0\xfa\x42\x1f\x04\x0e\xef\xc6\x24\x09\xc0\x9f\xb5\x10\xe4\x86\x0d\x5b\x9d\xb8\x11\x05\x48\x48\xb4\x09\x55\x10\x07\xc8\x44\x06\x17\xa2\xd2\x16\xa1\x2e\xfd\xbb\xe3\xbb\xf4\xbe\x3c\x55\x90\x5a\x01\xe4\xec\x88\x20\x6b\x01\x1f\xa8\x2d\x47\x70\xcb\x13\xfa\x20\xad\xfa\x13\x2b\xf1\xca\xbf\xdf\x0b\xa5\x99\x48\x51\xd9\xd8\x1d\x7b\x17\xe8\xfc\x88\x52\xf1\x4a\xd0\x61\x78\x1d\xea\xb5\xe8\x8e\xdc\x98\xa6\xa1\x10\x5a\x75\x63\xe0\xa2\x69\xc2\xa7\x31\x97\x71\x12\x49\xf7\x20\xb9\xd0\xb7\x4c\xe5\xa8\x22\x27\x61\xb6\x98\x11\xd7\x62\x40\x36\xc0\x87\x03\x8b\x5e\x2c\x16\x43\xf2\x36\x7a\xee\x9d\xa6\x70\x26\xc2\x00\x08\x22\xb8\xbf\x5d\x43\xd3\xb8\x9c\xdc\xdf\x1a\x03\x4d\xa3\x6c\xd9\xc3\xb2\x05\xdf\x54\x62\xcb\x77\xb5\x64\x9a\x1c\xd8\x54\xb5\x4c\xb1\xd3\x72\xa7\x4e\xda\xaa\xbc\x54\x9a\x15\x54\x1f\x8a\x80\x79\x5d\x32\xc1\x7f\x21\x2c\xad\x9c\xc4\x2d\xf2\x11\xb5\xe4\x29\x6c\x58\x79\x28\x50\xad\xe1\x81\x29\x4d\x8a\x7d\x3d\x87\xf2\x20\x63\xae\x9c\x81\x11\xee\x01\xd0\x1b\xb9\x3b\xa2\xd0\x93\xe4\xee\xf4\x1c\x6b\x40\x78\xba\x28\xdb\xfb\x2b\x98\x1f\x6d\x59\x75\xc0\xe7\x82\xe9\x6d\x25\x4b\xa7\x05\x91\x1a\xcc\xf7\x60\xcc\x84\x1f\x17\x5c\x64\xf8\xde\xfd\xc0\xe5\x18\xd9\x7c\x7f\x09\xe3\x9e\xce\x8f\x3d\xff\xa2\xe2\x00\xd8\xa0\x3c\xf2\x14\x7d\xa3\x4e\xe5\xc1\xa3\x42\x7f\x4c\xa7\x63\x00\xf4\x46\x7e\x1c\x51\xb2\x1d\xc2\xdd\x3b\xa6\xb5\x2d\x95\x17\x5e\x22\xc4\xfa\xb7\xa1\x88\x96\x1e\xdc\x62\x2d\x74\x56\xaa\x59\x4b\x67\x7d\xec\xb8\x6e\xe9\xe6\x27\x2e\x4a\x06\xd3\x3f\x05\x7f\xb7\x3a\xcb\x9f\x87\x8c\x69\xa4\x77\xa5\x59\x79\xe8\xeb\x6f\xea\x34\x45\xa5\xb6\x75\x31\x46\x65\xaf\x58\xc2\x79\x98\x3d\xa0\xce\x1b\xda\x18\x60\x6c\xeb\x63\xa1\x08\xfc\x84\x47\x94\xfd\x66\x6c\x6f\xb7\xb9\xeb\x90\x47\xd4\x2c\x63\x9a\x9d\x9c\xfb\x1f\x3e\x40\x85\x66\xec\xe0\xa5\x3f\x5a\x9f\xa9\xbf\xaf\x72\xc5\x65\x68\x2f\x3f\x98\x2e\x9b\xaf\x08\x42\x0a\xdd\x74\x5a\x74\x2d\x47\xdf\x64\xa2\x08\x87\x8f\xa8\x14\xd5\x47\x07\x8f\x68\x5a\xd4\x8b\x64\x29\xbe\xb2\x74\x3f\x4e\x3b\xea\x52\xf0\xe1\x2f\x26\x69\x1e\xa9\x08\x1f\x27\xab\x8f\x69\x21\x5e\x62\x6f\xb4\x7e\x9a\xc2\x78\x19\x35\xdd\xfb\x8c\x3e\xe2\x11\x19\x4f\xf8\x87\x8a\x65\x63\x23\x70\xf9\xfc\xf1\xbd\xef\x94\x9b\xea\xf0\x1d\x1e\xb8\xd0\x28\x83\x83\xa7\x03\x76\x38\xe5\x47\x27\xe0\x5b\xe0\x5e\x5f\xc3\x88\xb1\x50\x11\xdd\x3c\x8a\xc4\xe7\x26\xd6\x69\x2d\xf2\xec\xbd\xb3\x67\xc7\x4f\xb0\xdd\x4b\x6b\x90\x4e\x27\x16\x45\x36\xcc\x6a\x97\xae\x30\x8d\x30\xde\x8d\xac\x6f\x70\x1f\x76\x23\x77\xc9\x38\xc0\xb9\xed\x88\xb6\xb0\xfe\x82\x14\x67\x0e\x9d\x01\x9b\xb7\x51\xab\xbf\x3d\x77\x7e\x3d\xf3\x96\xdd\x62\x43\x4f\x3b\xd3\x9b\x86\x90\xc6\xac\x93\x38\xa1\x28\xe5\x27\x55\xfa\xb5\x22\xfd\x51\xeb\xca\x8f\xf3\xd3\x32\x75\x07\x77\xc1\xb3\xb0\x16\x4c\x65\x79\x58\x92\x76\x85\x13\x51\x62\xdd\x2e\x16\x91\x46\x4b\x56\x0b\x1e\xdf\x9d\xda\xe3\x41\x36\x1d\xf1\x99\xfe\x9c\x8c\xdc\xfe\x9f\x4d\x9a\x63\x56\x17\xa3\x4d\xea\xba\x37\x8a\x9e\x04\x54\xe6\xff\x35\x7c\xb7\x8b\xc6\xb4\xff\x3f\xfe\x6e\x2a\x70\x91\x9d\x94\xd3\xc9\xad\xc8\xb7\x80\x7f\x3b\x30\xcc\xfc\xa5\xe3\x1a\xc9\xb9\x35\x8b\xcb\xd9\xc2\xa8\xf0\x26\xea\xce\x5d\x98\x6e\x26\xfe\x4b\xa5\x33\x13\xe6\xf3\x9f\xf8\x4f\x00\x00\x00\xff\xff\x36\x84\x98\x36\x36\x0e\x00\x00")

func bindataCollectorTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataCollectorTmpl,
		"/collector.tmpl",
	)
}

func bindataCollectorTmpl() (*asset, error) {
	bytes, err := bindataCollectorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/collector.tmpl",
		size:        3638,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataComplianceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xc1\x8e\x1a\x3d\x0c\xbe\xef\x53\x58\x23\x0e\xbb\xd2\xcf\x3c\x00\xd2\x1e\x7e\x01\x95\x50\xbb\x5b\x09\xd8\xf6\x50\xf5\xe0\x0e\x06\x22\x66\x1c\x94\x64\x58\xb6\xa3\x79\xf7\x2a\x99\x84\x64\x80\x45\x70\x8a\xed\xcf\x9f\x63\xfb\x23\x33\x96\xd5\xbe\x14\xc8\x05\xc1\x78\x4b\xc5\x4e\x3f\x3c\x7f\xf6\x7b\x68\x9a\x21\x0c\x54\xcd\x4c\x6a\x61\xd0\x68\x18\x3d\x43\x3e\x4f\xec\xb6\x75\x18\x85\xbc\x21\x18\x38\x3e\x87\x89\x45\xba\x1a\x16\x08\xd0\x34\x1e\x93\xbf\x62\x45\xc1\xb7\x57\x82\xcd\x04\xf5\x96\x74\x2f\x9c\x0d\x33\x87\x00\xf8\xa2\xb0\xa2\x77\xa9\x76\xa3\x84\xe2\xe4\x84\xb6\x85\xc7\xe8\xff\x41\x4a\x0b\xc9\xd0\xb6\x4f\x2e\x79\x21\x6b\x55\x50\x9a\xd9\x79\x42\xf9\x21\x88\x75\x88\xcc\x58\x98\xa9\x52\x52\x81\xaf\x3c\x96\xbc\x16\x9b\x5a\xa1\x11\x92\x47\xf0\xab\x69\xe0\x83\xca\x52\xbe\x2f\xe9\x68\xae\x65\xfd\xf6\x9c\x54\x6a\xba\x41\xb2\x51\x44\xec\x38\xb2\xef\x5f\xb3\x98\x16\xaf\xf2\x0d\xb5\x99\x1e\x88\x8d\x65\x71\x34\x73\xda\x4b\x65\x46\xee\x6c\x2d\x5d\x97\xc6\xb5\x55\x9c\x86\xdd\x39\x2f\x28\x72\xd5\xf9\xfd\x7d\x00\x26\x68\x30\x10\x25\xfb\xdb\xfd\x07\x83\x83\xdd\xdf\x05\xc1\x0a\x0d\xc6\xf4\x6e\x93\x76\xf0\xdd\x58\x0f\x31\xe4\x7a\xe7\x55\x1c\x6e\xcf\x10\x6b\x40\x5e\xf5\x24\x95\x7b\x81\x3c\x0a\x5e\xd1\xf1\x6a\x28\x11\xc5\x53\xa8\x64\xcb\x16\xd6\x3d\x63\x6d\x6c\xeb\x4e\x9b\x77\x71\x44\x8a\x53\xe3\x67\x4c\x1e\xb0\x94\x06\x4b\x98\xd7\xac\x6d\x9b\xdb\xba\x42\x16\x7f\x09\x72\xe7\xb7\x6e\x8f\xfb\xff\x40\x0a\x37\x04\xd3\x23\x15\xb5\xdd\x31\x2c\x45\x45\x90\x26\x4d\xfc\xf6\x21\xf7\xe0\x13\xd6\x41\xb3\x4a\x07\xad\xdb\x99\x27\x4c\x13\x34\x1d\xd3\x5a\xaa\x0a\xcd\x1b\x8b\xa3\xcb\xc8\xdf\xf6\x2b\x34\x64\xcf\xda\x60\xb5\x4f\xb3\x17\x75\x51\x90\xd6\xeb\xba\xbc\x46\x64\x97\xe0\x36\xeb\x61\x2e\xd0\xb6\x97\x15\xce\x30\x16\x12\x64\xfd\x4a\x07\x52\xd6\x0c\xcb\x0d\xf3\xb4\xfa\xed\x46\xfe\x42\x06\xfb\xaa\xf1\x71\xbf\xa3\x33\x54\x67\xce\x26\x11\x5e\xf9\xd0\x2d\x9d\xde\xcb\x75\xaf\x60\xef\x77\x84\x21\xf6\x5e\x0b\x67\xd8\x0a\x65\x88\xbc\x90\xd6\x56\x1a\x11\x9b\xb0\x9c\x50\x4b\x85\x05\xfd\xc1\x62\x97\x72\x0e\xef\xbb\xc0\x4f\x54\x2c\x78\xa3\xfb\xcd\x86\x51\x5d\x85\x78\xdb\x5e\x34\x3f\xcb\xba\xd5\xf8\xe5\x5f\x3b\x79\xe3\xfa\x6f\x5a\xf7\x21\xd8\xa2\x06\x96\x06\x54\xcd\xf0\x41\x26\xfb\xe4\x51\xf0\x46\x94\xd3\xbf\x00\x00\x00\xff\xff\x73\x9f\x21\x08\xa2\x06\x00\x00")

func bindataComplianceTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataComplianceTmpl,
		"/compliance.tmpl",
	)
}

func bindataComplianceTmpl() (*asset, error) {
	bytes, err := bindataComplianceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/compliance.tmpl",
		size:        1698,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustommetricsproviderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3d\x4f\xf3\x30\x10\xc7\xf7\x7e\x8a\x1b\x3a\x3d\x7a\x6a\xf6\x48\x9d\x80\x0d\x58\x0a\xec\xd7\xe4\x02\x56\xfd\x12\xd9\x4e\x54\xb0\xfc\xdd\x51\x2e\x71\x30\x90\x42\x96\xe8\x7c\xbf\xff\xff\xde\xae\x7b\x1f\xac\x86\x7b\x0a\x4e\xd6\x1e\x0e\xe4\x06\x72\x9b\xfd\xda\xb7\x01\x88\x71\x07\xb2\x05\x51\xb3\x4a\x4f\x22\x71\x23\x3d\x1e\x15\x35\x90\xd2\x06\x00\xe0\x10\x30\xf4\xbe\x82\x18\xff\x22\xd7\xfd\x6e\x9d\xb3\x2e\x23\x1c\xac\x79\x7d\xa1\x62\x04\x52\x9e\x72\xf8\x68\x03\xaa\x55\xd1\x39\x90\x33\xa8\x04\x13\x19\x7f\x46\x25\x9b\x5f\x71\x26\x8a\x62\x0e\xcd\x0b\xc1\x76\xe2\xa0\xda\x5f\x14\xe6\xc5\xb2\xf4\x1f\xc4\x38\x6b\x84\xa3\x96\x1c\x99\x9a\x44\x78\xeb\x28\x25\xe8\x6c\x03\xd8\x07\xeb\x6b\x54\xc4\x13\xff\x44\x0d\x6a\xf2\x1d\xd6\x94\xd2\xd5\xa5\xfc\xdc\xe4\x54\x18\xc6\x97\xd2\x6b\xfa\x3d\x7c\x72\x77\x78\x24\xe5\xab\xe5\x1c\xf3\x64\xa7\xff\xb0\x1d\xc6\xc1\xb2\x50\x31\x97\x57\xb0\x1b\x2d\x4f\x29\xb1\xf5\x50\x5c\x93\x4c\x53\x6c\xb5\xe7\xda\xf0\xda\x6b\x34\xf2\x7d\x59\x98\x18\xc6\x54\xbe\x95\xd4\xe4\x03\xea\x8e\xd1\xd6\x3a\x8d\xe1\xc9\xc8\xf3\xf8\xbe\x08\x82\xff\x7e\xaa\xc2\x4a\x36\xeb\x0d\xe4\x70\xc7\x71\x91\xfc\x08\x00\x00\xff\xff\x68\xd3\xef\x7f\xf5\x02\x00\x00")

func bindataCustommetricsproviderTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustommetricsproviderTmpl,
		"/custommetricsprovider.tmpl",
	)
}

func bindataCustommetricsproviderTmpl() (*asset, error) {
	bytes, err := bindataCustommetricsproviderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/custommetricsprovider.tmpl",
		size:        757,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1611327769, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDogstatsdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\xbf\x6e\xf3\x30\x10\xc3\x77\x3d\x05\x87\x4c\x46\xbe\x68\x37\x90\xe9\x4b\xd7\x76\x68\x5e\xe0\x62\x9f\x65\xa1\x27\xc9\xb0\xce\x09\x5a\xe1\xde\xbd\x48\xff\xa4\x1c\xc9\x1f\x09\xb6\xe6\x3b\xf7\xfc\x72\x7e\xea\xf1\x7f\xa6\x1c\xb8\x22\xd1\xc8\xd0\x02\x9d\x63\x85\x72\x5a\x84\x94\x51\xe7\xb2\xc9\x88\x0b\x63\xe5\x49\x78\x50\x1e\x51\x32\x74\x66\x4c\x45\xa4\xdc\x62\x0e\x0f\xba\xee\x11\x27\xd0\xb2\x48\x1c\xe8\x22\xdc\xbb\x0e\x43\x1a\x3d\x05\xce\xea\xc3\x16\xfd\x35\xf2\xad\xfa\x07\xef\x03\x67\x5e\x49\x5e\x95\x74\xab\x07\x4d\x8b\xb8\xce\x9b\x1d\x7f\xe5\x4e\x25\xdc\xc3\x7a\x72\x7f\x5e\x6b\xff\xb0\xde\x4f\x63\xf7\xc6\xef\x7b\xec\xae\x24\x1b\xa3\x3f\xe2\x60\xe6\x80\xd6\xa6\xb2\x26\xd2\x73\x54\xf9\x66\xcc\x7a\xb4\x36\x6f\x89\x72\xfc\xe0\x9f\x82\xd9\xd7\x12\xe7\x11\x66\xee\x33\x00\x00\xff\xff\xa8\xce\xb3\x10\x12\x01\x00\x00")

func bindataDogstatsdTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataDogstatsdTmpl,
		"/dogstatsd.tmpl",
	)
}

func bindataDogstatsdTmpl() (*asset, error) {
	bytes, err := bindataDogstatsdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/dogstatsd.tmpl",
		size:        274,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1582548730, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataEndpointsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x51\xc1\xaa\xdb\x30\x10\xbc\xeb\x2b\xe6\x90\x43\x1b\x92\x88\x5e\x03\xef\x50\xda\x77\x28\x85\xd7\x42\xdf\x0f\xe8\x59\x6b\x7b\x89\x2c\x19\x69\x1d\xd7\x08\xfd\x7b\x91\x63\x4c\xba\xa7\xd5\xec\xce\x0c\x3b\xca\x59\x1f\xd5\xdb\xaf\xf7\xd7\x2b\xbe\xf5\xc6\x77\x94\x30\x18\x4b\x90\x00\xe9\x39\x41\x68\x18\x9d\x11\x42\xea\xc3\xe4\x2c\x3e\x08\x91\x5a\x47\x8d\x90\x45\xf0\x90\x9e\xd0\x06\xe7\xc2\xcc\xbe\xdb\xb7\xd3\x09\xdc\xc2\x8c\xa3\xe3\xc6\x7c\x38\xba\xaa\x23\x9a\xc1\x6a\xd3\x91\x17\xdd\x4d\xac\xef\x4c\x73\xd2\xfb\xbe\xee\xc8\x53\x34\xee\x8f\x18\x99\xd2\x45\x86\xd1\xa9\x23\xbe\x87\xe6\x46\xb1\x65\x47\x49\x37\x6e\x4a\x42\xf1\xfc\x90\xb0\x9c\xe4\x89\xdd\x86\x38\x9b\x68\x29\x6e\x4c\x5d\xca\xcb\x5e\xea\xd5\xdb\x31\xb0\x97\xa4\x9e\x40\x95\xf3\x19\x33\x4b\x8f\x4b\x29\x0a\xa8\xcf\x58\x03\xc0\xe1\x46\xcb\x09\x87\xbb\x71\x13\xe1\xfa\xb2\xcf\x2b\x5e\x0a\xce\xf8\xfa\xfb\x07\x7e\xd2\x92\x73\x3d\xb2\x13\x7c\x72\xe4\xb7\xfd\xcf\xf8\x52\x4a\xca\x99\xbc\x2d\x05\xe4\x6d\x4d\xa5\xba\x5c\xa1\x80\xff\x5c\xd8\xfe\x3d\xe1\x60\x46\xbe\xd1\x52\x6d\x36\xc3\xd5\xac\xd6\xb9\x5a\x3e\xc6\x1b\x56\xc9\xab\xb0\x7a\xee\xd7\xce\xa5\x95\xa9\x80\xb7\x50\xf1\xc7\xbd\x60\xdf\x86\x38\x18\xe1\xe0\x2f\x78\xef\x09\x6b\x7a\x18\xcc\x52\x3f\x72\xe0\xd4\x04\xdf\x72\x37\x45\xb2\x17\xb5\x49\xae\x3a\xff\x02\x00\x00\xff\xff\xa0\xd1\x19\xf4\x17\x02\x00\x00")

func bindataEndpointsTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataEndpointsTmpl,
		"/endpoints.tmpl",
	)
}

func bindataEndpointsTmpl() (*asset, error) {
	bytes, err := bindataEndpointsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/endpoints.tmpl",
		size:        535,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1582548730, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataForwarderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x82\x1c\xba\x81\x23\xdd\x0d\xe4\xb0\xfe\x58\x34\x58\x74\x13\x6c\x0c\xf4\xe8\xa5\xc5\xb1\x4c\x84\x22\x55\x72\x18\x57\x11\xfc\xdf\x0b\x8a\xb2\x4d\xcb\x72\x62\xb4\x97\xfa\x24\x73\xde\x3c\x91\x6f\xde\x8c\xd8\x34\xd9\x5d\xf2\xe3\x69\x31\x1f\xc3\x74\xc3\x54\x81\x16\x4a\xc6\x11\x48\x03\x6d\x84\x05\xc2\xb2\x92\x8c\x10\xec\x46\x3b\xc9\x61\x85\x60\x70\x2d\x31\x27\xe4\xa0\x15\xd0\x06\x61\xad\xa5\xd4\x5b\xa1\x8a\x03\xda\x8e\x40\xac\x81\x55\x95\x14\x39\x5b\x49\x1c\x27\x77\x90\x97\x3c\x63\x05\x2a\xca\x0a\x27\xb2\x37\x81\x5b\x9b\x1d\xf0\x59\x81\x0a\x0d\x93\x2f\xc4\xc8\xd9\x94\xca\x4a\x26\x77\xd9\x6e\xf7\xb0\xff\x25\xdf\xb4\xd9\x32\xc3\xd1\x24\xc7\xb5\xa6\xf1\xaf\x49\x17\x86\x29\xcb\x72\x12\x5a\x59\xd8\xed\x12\x80\x78\x25\x01\x78\x88\x7e\x09\x40\xd3\xdc\x83\xf1\x67\x85\xdb\x57\xac\x47\x70\xfb\xc6\xa4\x43\x18\x3f\x0c\x51\x05\xb8\x3f\x8d\xe2\xf0\x9b\x0a\x39\x70\xf3\xa8\x2a\x47\x93\x9a\xd0\x4e\xea\xb9\xe2\x95\x16\x8a\x6e\xbe\xf4\x01\x53\xed\x14\x5d\x00\xcc\x8c\xae\x2a\xe4\x17\xa2\x3f\xf1\x2f\x87\xee\x83\x30\x19\x71\x31\xfa\xe2\xf2\x1c\xad\x1d\x5a\xfb\x38\xe3\xa3\x03\xcd\x8d\xd1\xc6\x0e\x2c\x4d\xea\x45\x5d\xe1\x49\xe0\xf7\xc5\xe2\x79\x00\x7f\x5c\x9e\xd4\x53\xcd\x4f\x73\xa6\x5a\x29\x6c\x95\x9f\xbf\xa1\x22\x7b\xf3\xe5\xa0\xbf\x07\xec\x76\x63\x68\x9a\x8d\x2b\x99\x12\xef\xd8\xd5\x2c\xaa\x10\x2a\xde\xfe\xeb\x3f\xf7\x0d\x92\x76\xba\x3f\xa9\xb6\x42\xbe\xc8\x2d\xc7\x9f\xcc\x28\xa1\x8a\x71\xe7\xe8\xce\x6c\xc0\x03\x1a\x28\xa2\x18\x79\x8c\x41\x10\x16\x2a\xa3\x57\x6c\x25\x6b\x60\x0a\x84\xb5\x0e\x61\x2b\x68\x03\xb5\x76\x06\x14\xd2\x56\x9b\xd7\x96\xfd\x0f\xed\xf1\x6a\xad\x81\x11\x6c\x88\x2a\x3b\xce\xb2\x42\xd0\xc6\xad\xd2\x5c\x97\xd9\x8c\x11\x9b\xe9\x22\xe3\x8c\x18\xd7\xc5\x7d\x68\x14\x32\x88\x59\xc9\x84\xca\xb8\xce\x6d\xd7\x3d\x36\xb4\x48\xc9\xaf\x39\x6c\x57\xd7\x70\xc8\x28\x02\x5d\x00\xfb\xed\x11\xf7\x09\xc0\x42\x13\x93\xa0\x5c\xb9\x42\xe3\xe5\xbf\x44\xee\xb1\x07\x46\x98\xd4\xb0\x77\xd0\xb8\x0d\x85\x5f\xd4\x76\x54\x57\x38\x82\xdb\xdc\xb7\xc7\x59\xdf\xa5\x67\x56\xdd\x77\x62\xcc\x24\xd6\xfb\xfc\x43\xb0\x69\x5a\xe2\xbe\x53\x5a\xd4\x00\xc3\x5e\xb8\xa1\xb5\x4f\x85\x0d\x36\x86\x73\x61\x43\x60\x50\xd5\x2b\x24\x0d\xd9\xdd\xb6\xba\x77\x4c\x6a\xf0\x0d\xf6\xaf\xa4\x8c\x3b\xf4\x7f\xa8\xe2\x71\x20\x74\x4a\xfa\x85\xff\x28\xe1\x91\xb3\xdb\x57\xc4\xe9\xb5\xf4\x83\x67\x9c\x9c\xe9\x98\x6b\xfe\x81\x8e\xfd\xc9\x15\x6b\x79\xa2\x63\x2c\xa3\xa7\xfc\x4c\xc6\xbe\x84\xc3\xf2\x1d\x9f\x12\x80\x27\x75\xcf\x85\x7d\x05\x4b\xda\xb0\x02\xcf\x75\x8a\xd4\xce\xb5\x5a\x8b\x22\x3d\xcc\xb3\x65\x97\xb4\x2c\xd9\xdf\x4b\x2b\xde\x71\x29\xd4\x72\xe5\xa7\x7e\xef\x6b\x97\x7e\x13\x12\x5f\x02\x38\x9d\x3a\x63\x50\xd1\x8b\x78\xc7\x47\x35\x89\xd1\x33\xbf\x11\x67\x59\xe1\xa7\x1b\xb4\x44\xfe\xbc\xd7\xa6\x77\x91\xae\x96\xa0\xd7\xb0\x16\x72\x88\xc2\x3f\xdb\x69\x6c\xd4\x1f\xa7\x29\xfb\x41\x7d\x21\xf5\x27\x96\xfa\x0d\xf9\x09\xc3\x0c\x2d\x1a\xc1\xa4\x78\x67\x6d\xe7\x62\xb0\x48\x5b\xa1\x73\x9a\x23\x1a\x83\x11\x4e\xb8\x9e\x1c\x71\xe6\xaf\x44\x61\x33\x26\xbc\xce\x0f\x7b\x4b\xcc\x90\xab\x02\x61\xbb\x0d\x26\x9f\xb5\x14\x79\x9d\xee\x93\xce\x0f\xd7\xd6\x5b\xda\x83\xcd\xe6\xca\xdf\xa2\xf8\x08\x94\x26\x10\xea\xde\x59\x4c\x87\xbf\x7c\x51\x52\xcf\x27\xfe\x73\xc5\x85\x6d\x89\x52\x98\xb6\xc6\x70\x06\xe1\xd7\x15\xe6\xf8\xe5\xef\x83\xd8\x6e\x02\x04\xa5\x27\xde\x4c\xf6\x8e\xf9\xfa\xfc\xf8\x1d\xeb\x70\x83\xeb\xda\xf9\xeb\xf3\x23\x7c\xc7\xda\x42\xf8\x68\x5d\xb4\xea\x85\xdb\x58\x9f\xb1\x7f\x1b\x88\x2e\x01\xdd\x7e\xe0\xb4\x59\xfe\x09\x00\x00\xff\xff\x8b\x2c\x34\xa1\xde\x0a\x00\x00")

func bindataForwarderTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataForwarderTmpl,
		"/forwarder.tmpl",
	)
}

func bindataForwarderTmpl() (*asset, error) {
	bytes, err := bindataForwarderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/forwarder.tmpl",
		size:        2782,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1635501166, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x4f\x6f\xdb\xb8\x12\xbf\xfb\x53\x0c\x8c\x3d\x6c\x82\x46\x7e\xe7\x00\x3d\x64\x93\xf4\x6d\x81\xd4\x1b\x6c\xd2\xf6\x68\xd0\xd2\x48\x22\x42\x91\x2a\x39\x72\xe2\x35\xfc\xdd\x1f\xf8\x47\x12\x25\xcb\x76\xfa\x0a\xbc\x97\x8b\x45\xf2\x37\xff\x87\xc3\x21\xb3\xdb\x2d\x2e\x67\xcb\xbf\x9e\xef\xaf\xe1\xb6\x64\xb2\x40\x03\x15\xcb\x10\x48\x01\x95\xdc\x00\x61\x55\x0b\x46\x08\xa6\x54\x8d\xc8\x60\x8d\xa0\x31\x17\x98\x12\x66\xa0\x24\x50\x89\x90\x2b\x21\xd4\x2b\x97\x45\x87\x36\x1f\x80\xe7\xc0\xea\x5a\xf0\x94\xad\x05\x5e\xcf\x2e\x21\xad\xb2\x05\x2b\x50\xd2\xa2\x68\xf8\x62\xc3\xf1\xd5\x2c\x3a\xfc\xa2\x40\x89\x9a\x89\x27\x62\xd4\x98\x84\xaa\x5a\xcc\x2e\x17\xfb\xfd\x6e\x57\x6b\x2e\xe9\x8e\x99\x12\x0d\x24\xc4\x49\x20\xcc\x3f\xce\xf7\xfb\xd9\x6e\xe7\x87\xee\xf3\x28\x6a\x06\xe0\x79\x42\xc6\x08\xaf\x61\xb7\x83\x5c\xe9\x8a\xd1\x57\xc9\xdf\x9e\x79\x85\x16\x5e\xe1\x4a\x32\xa9\x60\xbf\x9f\x01\xdc\x58\x1d\xc1\x10\xd3\x34\x09\x77\x36\xac\xdc\x7a\x44\xf5\xc8\x33\x8b\x4e\x6a\x9e\xb9\xf1\xbf\x15\x7c\x43\x6d\xb8\x92\x6e\xba\x50\xab\x8d\x1f\xba\xd5\xdd\xee\xca\x3a\x28\xa9\xb7\x54\x2a\xd9\x2e\x05\x4e\x6e\x6e\x40\x3d\x84\x75\x1c\x50\x66\x9e\xe4\x8f\x86\x8b\x0c\x98\x4e\x4b\x07\x5f\xdb\xe1\xca\x0e\x23\x83\x72\xc1\x36\x4a\xbb\x75\xff\x19\x2b\xc2\x64\x06\xbf\x27\xba\x91\x12\xb5\x75\x97\x49\xbe\x2b\xfd\x82\xda\x5c\x4c\x4f\x27\xb7\xaa\x91\x74\xe1\xa5\xdf\x96\x98\xbe\xc0\xdf\x0e\x65\x9c\x80\xa3\x14\x87\xaa\xb7\x9e\x48\x95\xcc\x79\x91\x08\x55\xac\x72\xee\x82\x0a\xf0\xa0\x0a\xf8\xc4\x85\x8b\xda\x24\x60\xc0\xc9\xa2\x1f\x70\x83\x62\x0c\x17\x76\xd2\xa7\xc2\x23\xa3\xd2\xcc\x00\x3e\xda\xbf\x19\x00\xc0\xad\xc3\x75\x62\x5a\x55\x82\x8c\xc0\xa8\x1b\xa1\x30\xb8\xdf\x3f\x97\xa8\x11\xb8\x01\xa9\xc0\xcb\x01\x0b\xd8\xed\x50\xfa\xe0\x83\x9b\x4e\xb2\x58\x13\xfb\x93\xad\x6a\x46\x65\x80\x8c\x2c\x67\x59\xc6\x89\x2b\xc9\xc4\x2a\xb5\x0e\x35\xc1\x2c\x00\x3f\x1c\x72\x3b\x44\x47\x5c\x83\x4b\x6c\x68\x84\x4a\x5f\x3a\x83\x3f\x0e\xe4\x4a\xaa\xff\xca\x73\x83\xd4\xca\x59\x3e\x3f\x82\x72\x33\x2e\xef\xcb\xa6\x62\x92\xff\x83\x77\x8d\x66\x56\x54\x4c\x31\x37\xf3\xa1\x15\x92\xea\xef\x4c\x4b\x5b\x03\x7a\x58\x07\xd9\xa2\x2d\x10\xcf\xf8\x46\x30\xef\xa5\x58\x0f\x96\xbc\x28\x13\xb8\x63\xc4\x32\x55\x40\xc5\xb6\xc0\x0b\xa9\x34\x42\x85\xa4\x79\x6a\xc0\xd8\xdc\x5d\x6f\x7d\x31\x72\x99\x9c\xcc\x0f\x4d\x9d\x18\x3e\x6d\x0d\x61\x05\x76\x73\x9f\xdf\xf5\xb3\xd6\x29\xa5\x32\xc4\x65\xae\x82\xff\xfe\x54\x86\xe0\xb3\xcc\x55\xe7\x42\xef\x45\x0b\xd7\xb6\x5a\xc2\x6f\x92\x55\xf8\x01\x7e\xdb\x30\xd1\x20\x5c\x7f\x8c\x58\x5c\x0d\x5d\xe4\xf6\x98\x0c\x14\x30\xb7\x30\xfb\x35\xbf\x18\xcf\xf2\xcc\xce\x79\x8e\x17\xbd\x75\x0e\xb1\xdf\x87\x2c\xc5\x1f\x2d\xc9\x5a\x29\xb2\x26\xcd\xc1\x66\xe8\xd8\xce\xa0\x98\x5b\xb2\xd9\xeb\xbe\x06\xf4\x4d\x4d\x3d\xf5\x41\xd0\x03\xbd\x0b\x78\xcc\x62\xc8\xd8\xb9\xbd\xfb\x38\x0c\x47\x34\x18\x26\xe8\x9f\xc1\x0b\xe6\x27\x1c\x5c\x21\xb1\x8c\x11\x73\x1f\x67\xbc\x6c\x4d\xfb\x47\x49\x34\xe7\x5c\xea\xd7\xce\xe8\xde\x6f\x1e\x1b\xa7\x67\x56\x98\xc1\x6c\x41\xf0\xbb\x40\xd9\xaf\x5e\xc0\xbf\x5a\x61\x76\x0a\x88\x15\xe6\xba\x93\x10\xec\x23\x56\x74\x79\x63\x89\x02\x81\xd3\x8f\x58\xf1\x2e\x95\x22\xbf\xb7\x79\x05\xb5\x56\x1b\x9e\xa1\x2f\xf9\xed\xac\xaf\xc9\xed\xd2\x51\xe5\x7b\x28\x6a\xad\x74\x6c\x48\x23\x1b\x83\xd9\xa1\x18\x67\xd8\x81\x62\xa7\x36\xc9\x58\x48\x17\xca\xbe\xaa\x74\x71\x64\x42\xcc\x21\xf6\xcc\x91\xc8\x75\x2a\x9c\x0e\xdd\x58\x74\xc2\x84\x68\xd9\xbb\x99\x09\xa7\xf5\xc8\x31\xef\x19\xc0\x97\x90\x93\x51\x1a\x0f\x3d\xf0\x82\xdb\x81\x03\x7c\x17\xd1\xa6\x72\x9f\x92\x0e\x09\xde\xb2\x7e\x8f\x8d\xe4\xb5\xa6\x3c\x6b\x26\x4d\xad\x34\x85\xda\x6b\x82\x36\xdd\x3c\x3c\x6a\xf5\xb6\x85\x76\x39\xde\x64\xa3\xbf\xc8\x41\x4b\xe5\xa8\x3e\xbb\x42\x9c\x05\xda\x2f\xac\x6e\x95\x7c\x2e\x6d\x0f\xf8\xa3\x41\x43\xc6\xf7\x89\x71\x0b\x68\x9d\x66\xa0\x31\x08\xcc\xe6\xc6\xdb\x16\xae\x60\xdd\x10\xbc\x72\x21\xda\xe2\x6e\x29\xfc\x1a\x97\x90\x37\xd4\x68\x0c\x5d\x4a\x68\x71\x0c\xac\x99\xe9\x1b\x4c\xa9\x56\x1e\x6e\x90\x88\xcb\x22\x71\x7a\xdc\x4b\xdb\x5a\x7a\x00\xbe\xc2\x1a\x4b\xb6\xe1\x4a\x83\x54\xaf\xf0\xca\xa9\xec\xc8\x56\x52\x49\x7c\x63\x29\xad\x2a\x46\xb6\x47\x22\xdd\xe0\x78\x1b\x8e\x03\x74\xce\x0b\x71\xb0\x26\x4e\xde\xc9\xd4\x0b\x3c\xbf\x1a\xcc\x3e\xcb\x4f\xde\xee\xc8\xa9\x63\x27\x66\x3c\x03\xa9\xe8\x98\x33\xed\xf4\x3b\x3c\xe9\x5c\xf1\x7f\xf6\xe2\x94\xc5\xbf\xe0\x40\x7f\x53\xc9\x4e\xf9\xce\x5b\xda\x59\xe3\x1c\x96\x3a\x32\xeb\x29\x36\xe9\xab\xff\xa1\x43\x46\x16\x9c\xf2\xc5\xd1\xd3\xb3\x75\x8a\x40\x96\xa1\x46\x7b\x27\xf3\xb7\x83\xd9\x83\x9b\x81\xfb\x30\x35\x3b\xdc\xeb\x23\x44\xb8\x23\x5d\x5b\x59\x23\x7e\x89\x71\x4b\x71\x18\xf0\xc7\x58\x68\x00\xc1\xfc\x13\xe3\x82\xcb\xc2\xb7\x68\xf7\x5d\x25\x1d\xa1\x5d\x29\x0d\x1c\x7d\x4b\xdd\xab\xb4\xb4\xf5\x9e\x9b\x29\x32\x3f\x5c\xba\xca\x6f\x09\x98\x21\xb8\x49\x7f\x34\xdc\xb8\x5e\x18\x54\xee\xa2\x26\x90\x19\x9c\xa2\x67\x16\xab\x31\xb3\x8d\x91\xe3\xf0\x37\x4a\x7c\xc5\x0c\x3c\xce\x94\xbc\x9e\x22\xd3\x1e\xd5\x51\x2d\x9b\x6a\x8d\xda\x4a\xf3\x40\x20\x5b\x6e\x9d\x0a\x93\x6a\x47\xcb\x71\x38\xfb\x68\xc6\xc1\x4c\x1b\x43\xaa\x6a\xbb\x5f\xbb\x72\xeb\x66\xec\x09\xe3\xa6\x9e\x50\x6f\x50\x8f\x43\x7a\x50\xc4\x07\x7c\x12\x17\x09\x18\x06\xe5\x04\xa6\x6f\xf4\x8e\x72\xbc\xe3\xc6\x6e\x93\x90\xa1\xed\x68\x8a\xef\x10\xf9\x0e\xd6\x4b\x15\x6e\xec\x2d\xc1\xb9\xf5\x9e\xa1\xbf\xcd\xd9\x2a\x6d\xcf\xed\x29\x6d\x6e\x2b\xd7\x50\x9c\x10\xff\x44\x4a\xe3\x7b\x1c\x36\x06\x0e\x34\xb9\x7f\x23\xd4\x92\x89\x36\x6e\x33\x80\xab\xd1\xdf\xf0\x16\x38\x8c\x45\xa0\x4e\x1e\xb8\xa1\x48\xc4\xa9\xf0\x1d\x25\x19\xe8\x05\xf0\xac\x88\x89\x93\x1c\x1c\xa2\x85\x7f\x63\x82\x4f\xc6\xb5\x83\x3b\x44\x24\x2c\x54\x3e\x8f\x73\x45\xef\x08\xe1\x97\x3e\xcb\x01\x2e\x6d\x2b\xe7\x21\x89\xc6\x1c\x35\xca\x14\x13\xda\xd6\xb8\xdf\x43\xad\x32\x60\x0d\x29\x93\x32\xe1\x3b\xda\x43\xa8\xbb\x46\xd4\x2c\xc5\xfd\x7e\x71\x6c\x3d\x28\xe9\x05\x77\x39\xd2\x62\xfd\xcf\xb2\xc7\x3d\xb0\x35\x8a\xc3\x8e\xfd\xc5\x56\x74\x6b\x58\x4b\x28\x1c\xae\x75\xc1\x95\x65\xf9\xd2\x36\xa7\xd3\xb7\xd3\x6f\xf6\x40\x18\x5c\xb3\x3b\x66\x71\x3b\x6b\x6b\x8e\x21\x56\xd5\x53\x57\xd8\x96\x80\xcc\x38\x54\x11\x2b\x3e\xf1\x30\xf0\x13\xf7\x89\x9f\x39\x87\x52\xd1\x18\x42\xed\xdf\x23\x7c\xe9\xf2\x33\xfe\x85\xc8\xd8\x2a\x51\xdb\x93\x92\xcb\x62\xba\x7e\xf9\x22\x36\xc9\x2f\x09\xc7\xc3\x70\xe3\x0e\x10\x37\x29\xf1\x4d\x48\xf3\xf6\x3c\xf3\x54\x1f\xc0\xa0\xde\xd8\xe6\xa0\xed\x5b\x67\x00\x01\xee\x1a\x71\x13\x12\x7c\xc0\x6f\xa9\x32\x74\xaf\x56\xf1\x33\x97\xaf\x30\xe1\x76\x3c\x49\xe6\x76\x8f\x87\x45\x29\xd1\xda\xde\xd5\xc8\x09\xd5\x0f\x88\xbe\x4a\x66\x0c\x2f\xe4\x34\xd1\x1d\x93\x85\x3d\x6c\x07\x64\x2e\x30\xdd\x6e\x1f\xbb\xe1\x95\xe9\xca\xba\xa1\xa9\x27\xc2\x69\xa9\x0e\xbd\xfa\xc9\x35\x56\xde\xf3\xa7\x22\xf3\xf9\x71\x28\xb2\xa5\xfb\x00\x1a\x33\xae\xed\x59\x28\x0b\x7b\x5d\x08\x87\x26\xa3\x09\x93\x86\xac\xa6\x6d\xe9\x19\xcb\x8e\x59\xae\x1a\x99\x1d\x31\x69\x40\xdc\xc8\x17\xa9\x5e\xe5\xec\x4c\x2a\xb3\xac\xe2\xc6\xb6\x84\xdf\x71\x5d\x2a\xf5\xe2\x16\x6f\xda\x49\x9b\x04\xa4\x95\x10\x47\xce\xe1\x28\x43\xc7\x8c\x8e\x9c\xc4\xa7\x60\x93\x27\xe6\x01\xc1\xa9\xf3\xf8\x0c\x78\x24\x60\x9a\x7f\xf8\x8d\xf4\xfa\xd2\x10\xb3\x31\x0d\x2b\xc3\x8d\x11\x9d\xbf\xc7\x58\x2d\xbb\x73\xf8\x94\x23\x0e\xe5\x4e\x5e\x0c\x8e\xd1\x75\x9b\xa9\x1b\x73\xff\x9a\x37\x3a\x8e\x43\x17\xfe\xab\x36\x99\xa4\xb7\xca\xbd\x2e\x6b\x64\x84\x19\x30\x3a\x47\x17\x90\x37\x14\xae\x3f\xa3\x23\x27\x3c\xa0\x84\xd7\x66\xf7\x80\x70\x94\xd5\xd8\xf4\xc8\xd4\x30\x06\xd7\x65\xfb\x27\x06\x39\x50\xf8\xc8\x39\x17\xe4\x0e\x60\x07\x47\xdc\xc4\x29\x73\xfa\x34\x99\x8e\xdc\x13\xa6\x1a\xe3\x0e\xc6\x4f\x9c\xf2\xbe\x47\xbc\x2f\xa1\x0e\xd8\xbf\x2f\x9f\x82\x12\xed\xe3\xb2\x1f\x4d\xe5\x52\xbc\x7e\x56\xe5\x41\xba\x44\x44\xae\x8f\x39\x4f\xe9\x60\x2d\xf9\xd9\x5c\x0b\x84\x83\x4c\x73\x84\x37\xb0\x6e\x64\x26\x10\x32\x5e\xa0\x39\x47\x7e\xf3\x87\x03\xdf\x39\x6c\xcb\xa3\x7b\x2f\x5e\x63\xae\x34\x42\x8a\x9a\x78\xce\x53\x46\x08\xf8\x56\x73\xbf\x7a\x86\x33\x6a\x72\x2d\x4c\xc7\xec\xbf\xea\x47\x76\xbb\xc5\xa5\xff\x77\x81\xe0\xd2\xde\xf6\x09\xa5\xff\x57\x89\xd8\x82\xc0\x9c\x60\x2d\x98\x7c\x81\xcb\xc5\x7e\x3f\xfb\x4f\x00\x00\x00\xff\xff\x6f\x6e\xff\xc2\xff\x1c\x00\x00")

func bindataHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataHeaderTmpl,
		"/header.tmpl",
	)
}

func bindataHeaderTmpl() (*asset, error) {
	bytes, err := bindataHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/header.tmpl",
		size:        7423,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1634920835, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataJmxfetchTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x41\x8f\xda\x30\x10\x85\xef\xf9\x15\xef\xc0\xa1\x8b\xd8\xe4\x8e\xc4\xa9\xdd\x95\x8a\x4a\x7b\x60\x2b\x71\xab\xbc\xc9\x84\x58\x38\x76\x14\x0f\x50\xd5\xca\x7f\xaf\xec\xc4\x90\x2d\x44\xed\xa5\xd2\xe6\x64\x4f\xe6\xbd\x99\xf9\xc6\xce\x65\xf3\xe4\xeb\xb7\x97\xa7\x25\x3e\x56\x42\xef\xc9\xa2\x16\x05\x81\x0d\xb8\x92\x16\x4c\x75\xa3\x04\x13\x6c\x65\x8e\xaa\xc0\x2b\xa1\xa5\x52\x51\xce\x54\xc0\x68\x70\x45\x28\x8d\x52\xe6\x2c\xf5\xfe\x92\x6d\x17\x90\x25\x44\xd3\x28\x99\x8b\x57\x45\xcb\x64\x8e\xbc\x2e\x32\xb1\x27\xcd\xd9\xfe\x28\xb3\x93\xa4\xb3\xcd\x2e\xf9\xd9\x9e\x34\xb5\x42\x6d\x59\xf0\xd1\xa6\x5c\x37\x2a\x99\x67\x5d\xb7\x1a\xbe\x64\xbd\xd9\x3d\x13\xe7\x55\x72\x89\x38\xe7\x6b\xa4\xeb\xcd\x6e\xcb\xa2\xe5\x63\xf3\xd4\xb6\xa6\x4d\xbf\x08\xcb\xe1\x84\xae\x4b\x80\xf5\x66\x07\xdb\xff\x07\xf9\xb0\x4d\x80\xd5\xcd\x97\x00\x40\x90\x2d\xe1\xdc\x5f\x5d\x81\x4f\x82\x29\xa4\x96\xa6\xad\x05\x7f\xd7\xf2\xe7\x8b\xac\xe9\x56\xe9\xa3\x96\x45\xdd\x78\xa5\x73\x20\x5d\xe0\xb1\x3f\x9e\x25\x57\x51\xc0\x47\xdb\x5b\x7f\xd6\xbd\xa3\x34\x7a\xaa\x53\xe7\x1e\xd1\xfa\x5d\x61\x76\x58\xcc\x4e\x58\xae\x90\x4a\x5d\x9a\xd8\x9b\x73\x98\x1d\xd0\x75\x08\x0d\xce\x4e\x7d\xdc\xab\x7c\xf1\xcb\xc5\xd3\xeb\x91\x44\xe1\xd6\xe4\x07\xe2\x81\x53\x0f\x62\x9c\x70\xcf\x41\xe8\x02\x1f\xb4\x61\xa4\x1c\x07\x7d\x18\x02\x79\x45\xf9\xc1\x3e\xf4\xe9\xda\xc4\x55\xf8\x49\xc5\x49\x48\xe5\x1f\x46\x74\x55\x96\xe2\xf8\x92\xa5\x50\xf2\x17\x15\xe8\x0d\xa6\xf7\x35\xb4\x30\xae\x96\xca\xab\xfe\xc7\xd0\xc0\x30\x9c\x36\x57\xc3\xc0\xe8\x5a\x34\x9a\x0d\x50\x43\xda\x62\x26\xb5\x65\xa1\x73\xb2\x01\xf0\xa4\xff\x98\x7a\x88\x84\xf5\x02\x37\xb6\xd1\xcf\xdb\x8d\xcc\x47\xc9\x77\x57\x7b\xd5\x8d\x7a\xbd\xb7\xe0\xb1\x47\x7c\x65\xd3\xb1\x37\xcb\xfc\xe3\xfa\x2c\xa4\x9a\xe4\x3f\x89\xbe\x0c\xaa\xff\x42\xfd\x8d\xf5\x2d\xf0\xf7\xc1\xfb\x0e\xee\x7f\xa2\x3d\xba\x8c\x8e\xbf\x03\x00\x00\xff\xff\x33\xa7\x4a\x02\x99\x05\x00\x00")

func bindataJmxfetchTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataJmxfetchTmpl,
		"/jmxfetch.tmpl",
	)
}

func bindataJmxfetchTmpl() (*asset, error) {
	bytes, err := bindataJmxfetchTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/jmxfetch.tmpl",
		size:        1433,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataLogsagentTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x06\xc6\x1e\x92\x20\xb1\xdb\xa2\xbd\x18\xc8\x61\xbb\xbb\x40\x0b\x2c\xda\xa0\x6b\xa0\xe8\x49\xa0\xa9\x27\x89\x30\x45\xaa\xe4\xc8\x5e\xc1\xf0\xbf\x17\x24\x25\x59\x4e\x94\xec\x36\x97\x88\x33\xef\xcd\xbc\xe1\x3c\x59\xa7\xd3\x03\xad\xef\x16\x7f\xfc\xb9\xfd\xb4\xa1\x0f\x95\x30\x25\x3c\xd5\x22\x07\xb1\x25\xae\x94\x27\x46\xdd\x68\xc1\x20\x5f\xd9\x56\xe7\xb4\x03\x39\x14\x1a\x92\x91\x93\x35\xc4\x15\xa8\xb0\x5a\xdb\xa3\x32\xe5\x88\xf6\xf7\xa4\x0a\x12\x4d\xa3\x95\x14\x3b\x8d\xcd\xe2\x8e\x64\x9d\xaf\x45\x09\xc3\xeb\xb2\x55\xeb\x83\xc2\xd1\xaf\x47\xfc\xba\x84\x81\x13\xfa\x0b\x0b\x6e\xfd\x8a\xeb\x46\x2f\xee\xd6\xf4\x70\x3e\x2f\x1e\xc7\xbf\xc5\x67\x5b\x7a\x7a\x1f\x6a\x4c\xa3\xa7\x93\x2a\x08\xff\xd2\x4a\xf9\xcc\xb5\xc6\x04\x21\x85\xd0\x1e\x74\x3e\x2f\x16\x44\x17\x16\x29\x4f\xc6\x32\xf5\xa8\x45\x18\x1f\x26\x8f\xb8\xf0\xac\x0a\x5a\xc1\xe4\x8d\x55\x86\x7d\xcf\x0e\x71\x17\x2e\x86\xde\x0d\x29\xda\x3c\x3e\xc3\x11\x05\xe0\x04\x11\x63\x93\xf2\x33\x9d\x84\xc9\xe9\x26\xc8\x6e\x3d\xb2\x8a\xb9\x49\xa2\x6f\x53\x70\x32\x0b\xbb\x16\xb7\xbd\x1a\xa2\x7f\x6c\x4b\xc2\x81\x64\xeb\x1c\x0c\xeb\x8e\x3c\x4c\x1e\x70\x71\x4e\xb6\xf4\x51\xb0\xc8\x6d\x49\x5c\x39\xdb\x96\x15\x6d\x3f\x3c\xd1\x0d\x14\x57\x70\xb4\x83\x14\xad\x07\x69\x5b\xfa\x4c\x5a\x53\xa8\x32\xf6\x67\xd9\x90\x75\x57\x61\x6f\xe5\xde\xff\x92\x35\xce\x7e\xed\x32\x91\xe7\x0e\xde\x87\x0b\xf4\xe0\x00\x0d\x8b\xff\x6d\xbb\x7d\x22\x69\x8d\x81\x64\x75\x50\xdc\x11\xc3\x33\x55\xc2\x53\x21\x94\x46\x7e\xbb\xa2\xad\xa5\x1d\x0c\x0a\xc5\x54\x38\x5b\x93\x32\xd2\x41\x78\xe4\xe4\xa0\x95\xd8\x29\x1d\x78\xe1\x32\x76\x60\x86\x23\x03\x3e\x5a\xb7\xa7\x06\xae\xb0\xae\x16\x46\x06\x3b\x1d\x41\x9e\x9d\x35\xa5\xee\x08\x46\xda\xd6\x89\x12\xe4\x8f\x8a\x65\x15\x86\xb7\x07\xb8\x30\xbc\xb4\x75\x13\x94\x22\x8f\xea\xbe\xd0\xb1\x52\xb2\x4a\x8b\x3f\x46\xd1\x39\x0a\xd1\x6a\xa6\xc6\x59\xb6\xd2\xea\xd5\xe2\x74\x7a\xe1\x82\x1a\xec\x94\x9c\xf1\x40\x4a\x64\x46\xd4\xb8\x1f\x4f\x07\xa1\x5b\x44\x57\x4c\x78\xc9\x13\x53\xc2\xf9\xbc\x99\x44\x22\xe9\x3b\x7c\xb2\x82\x73\xd6\x0d\x52\x3e\xc5\x43\x24\x51\xe3\x94\xe1\x8f\xc2\x57\xf0\xb4\x4c\x89\x25\x2d\x1f\x97\x17\xf7\x0d\xc6\x0d\xb9\xe4\xda\xb1\xd6\x68\xd9\x98\xfb\x1e\x1d\x47\xe1\x82\x1f\x07\x25\x7f\xf7\xc7\x19\x2d\x03\x72\x5e\x4d\x9f\x8d\x7a\xa6\x35\x07\x45\x43\xfe\x5b\x9a\x52\xb9\x95\x32\x8c\xd2\x09\x56\xd6\x5c\xf6\x45\xab\x70\xe1\x43\x89\x2b\x75\x29\xb3\x7c\x78\x21\x6c\xe5\x6d\xeb\x24\x46\x2d\x0f\xb4\xed\x1a\x6c\x62\x35\xee\x1a\x0c\xf1\xab\x61\xf6\xe8\xee\xe9\xdd\xc5\x00\xe9\xe5\x69\x93\x9e\x29\x23\x20\x7b\x03\x5c\x36\x3f\x14\xeb\xc7\x4a\x81\xf4\x1b\x98\xfa\xfa\xf8\x3c\xdb\xb9\x86\xf7\xe1\x1d\x48\xb6\x8b\xcf\x13\x60\xba\xca\x01\xf3\x7a\xb3\x61\xb9\xca\x34\x2d\x4f\xf8\xbf\xc7\xf3\xe6\x65\xdb\x08\x8c\x4d\x9f\x53\xe2\x94\x31\xf8\x76\xbb\xab\xc0\xaf\x1d\xc3\xff\x05\x91\xa7\x79\x77\xe1\x98\x39\x88\x09\xe4\xfd\x01\xf1\x65\xff\x2c\x18\x46\x76\x74\x53\xfb\xdb\x84\x16\x5a\x67\xac\x6a\x64\xe2\x50\x66\xba\x4f\x8f\xbc\x9f\x7e\xae\xde\xe0\x3a\x48\x18\x9e\x67\x3e\x41\xec\xdf\x6a\xd7\x40\xec\xe7\xfb\xbd\xc2\xec\x9b\xcd\xf3\x2e\x2b\x28\x2c\x9d\xcf\xf4\x6d\x93\x0d\xc8\xb0\x62\x0d\x13\x62\xe1\x5f\x8f\x48\x89\xf4\x4d\x8c\xe9\x1f\xe7\x7d\xa8\x4c\x8e\xaf\x03\xe9\x87\xc4\x42\xff\xd9\x7c\x86\x9e\xb3\x41\x11\xda\x8e\x2d\xaf\x6c\x17\x92\xff\xc3\x03\x6f\x07\x5e\xf9\x05\xf8\x2f\x00\x00\xff\xff\x0f\xf1\x43\x49\xbb\x08\x00\x00")

func bindataLogsagentTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataLogsagentTmpl,
		"/logsagent.tmpl",
	)
}

func bindataLogsagentTmpl() (*asset, error) {
	bytes, err := bindataLogsagentTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/logsagent.tmpl",
		size:        2235,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMetadatamapperTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7a\x8a\x39\xf8\x18\xf7\x01\x0c\x39\x95\xde\x9a\x50\x28\xa5\xc7\x22\xac\x6d\x6a\x88\x25\xa1\xdd\x84\x16\xa1\x77\x2f\xfa\x71\xec\x16\x4a\x7d\x5a\x7b\x66\xbe\x1d\xef\xfe\xe7\xa3\x0e\x24\xda\x68\xd1\x38\x68\xef\x29\xa8\xdf\x7a\x8c\x3d\xa6\x77\xdc\x3d\x84\xe0\x02\x23\x25\xa5\xee\xdd\xe5\x6c\x60\x9d\x20\x5c\x2c\xe4\x83\xc0\x14\xae\xd3\x48\x98\x0b\x63\x40\x8c\xcd\x9f\x92\x8a\x91\xce\x4c\x65\x28\xa0\x57\x1d\xec\x64\x4f\x8c\x3e\x25\xb5\xbc\x0c\x65\x4f\xd0\xf6\x44\xab\x23\x25\x05\xa0\xcf\xb4\x1a\x27\x6b\x4a\x2a\x7b\xb7\x73\xc6\x1e\x9d\xa1\x52\x6f\x05\x75\x93\x35\xf4\xb9\x43\x37\x93\xe8\x37\xf9\xf2\x84\x61\xbf\x71\xe6\x01\x86\x84\x46\x21\x93\x4b\xb7\xc4\x8d\xdb\x30\x73\x8e\x6d\x20\xa5\x57\x8c\x8b\x6c\x79\x87\xce\x3b\xc3\xd5\x56\xe5\x1e\x47\x3d\x13\x7b\x3d\x52\x25\xdb\xfa\xc3\x40\x8e\xde\xd0\xde\x99\x1d\x3a\xbe\x8e\x35\x5c\x28\xcd\x95\x19\x4f\xae\xf5\xf2\xce\xac\xdf\x81\xe7\x7a\x6f\x2e\xa2\xb8\x17\xcb\x2e\x08\x99\xc7\x89\xa5\xd1\xd6\x5d\xe5\x52\x4b\xe5\xbf\x2e\xf8\xdf\xfc\x1d\x00\x00\xff\xff\x14\x40\xfd\xfe\x36\x02\x00\x00")

func bindataMetadatamapperTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataMetadatamapperTmpl,
		"/metadatamapper.tmpl",
	)
}

func bindataMetadatamapperTmpl() (*asset, error) {
	bytes, err := bindataMetadatamapperTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/metadatamapper.tmpl",
		size:        566,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1582548730, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataOrchestratorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\xda\x30\x10\xbd\xf3\x2b\xde\x81\x03\x20\x3e\xda\x2b\xd2\x1e\xaa\x85\xaa\xa8\x5b\x5a\x75\x57\xea\xd9\x24\x03\x58\x18\x1b\xd9\x4e\x77\x51\x9a\xff\x5e\xd9\x71\x9c\x04\x02\xdb\xe6\xe4\xcc\xc7\x9b\xe7\x99\xe7\xc9\xf3\xd9\xa8\x37\x9a\x15\xc5\x43\xd7\xd7\xfb\xae\x93\x3d\x19\xab\x99\x55\x1a\xcb\xb7\x93\x50\x9a\x74\xaf\x3b\x16\x78\x54\x42\x50\x62\xb9\x92\x78\xb6\xcc\x66\x66\x8e\x3c\xc7\xb4\x36\xff\x52\xfa\xc0\xe5\x0e\x45\xd1\xcb\xf3\x09\xf8\x16\xd3\xa5\xd6\x4a\x3b\x03\xe0\x8f\x65\x4a\xb4\xba\x30\x92\x69\x33\x63\xc1\x0d\xdb\x08\x4a\xcb\xa4\xea\xaf\xcc\x6b\xfa\x3a\x52\x1f\x45\x66\x2c\xe9\xd5\xa2\x51\x35\xd8\xb0\x5a\x80\x2a\x02\x17\x81\x77\xc1\xd6\xec\x48\x6d\x24\x67\x69\xa2\xb8\xff\x77\xf8\x5c\x52\x69\x93\x78\xb7\xfe\x3f\x5e\x27\x86\xb6\x01\x6b\x44\x25\x2d\xe3\x92\xf4\x73\xa2\xb3\xcd\x26\x4c\x0a\x1e\xe1\xca\x55\x63\xd4\x9c\x98\x4c\x31\x90\xca\x86\x01\x0e\xc3\x4f\x35\x95\x61\x49\x7f\x36\x82\xdd\x73\x03\xc1\x25\x81\x4b\x4b\xd2\x69\x83\x09\x71\x86\xa0\xad\xc5\x46\x30\x79\x80\x13\x65\x0f\xe8\xd4\x9a\x13\x5b\x5b\x9a\x32\x3d\x29\x2e\xad\xb9\x97\xe1\x48\x6a\x26\x77\x84\xfe\x81\xce\x63\xf4\x7f\x33\x91\x91\xc1\xfc\x01\xd3\x26\x5a\x04\x0b\x97\xf7\x57\xdb\x59\x0c\x04\xc9\x2a\x69\x88\x8f\xc1\xeb\xb0\x8a\x02\x13\x7c\xfa\xb1\xc2\x57\x3a\x1b\xd7\x12\xd7\xba\x57\x6e\xf7\xf3\x76\xd9\x50\xd0\x67\xba\x6f\xe2\x45\x8b\x58\xa7\x6c\x66\x38\x0b\x43\x37\x4a\xb4\x2a\x20\xcf\xb9\x4c\xe9\x2d\xa2\x7f\xe8\x86\xf3\xe7\x38\xea\x27\x62\x29\xe9\x86\x6e\x80\xd2\x04\xaa\x9e\xf0\xdd\xd7\x10\xd8\xfd\xd7\x30\xdb\xb5\x71\x39\x5e\x27\x5e\x96\xec\xc9\xef\x0e\x73\xe5\x03\x96\x82\x8e\x24\xad\x01\x97\xb0\x7b\x42\xe2\xa2\x4b\x82\xee\xb4\xce\x8e\x1b\x2a\xd9\x85\x76\xfb\xbe\x8c\xd1\xa7\x32\xd1\x0f\xda\x87\xae\xe4\x56\xe9\x23\x73\x4c\xc3\xe5\xf3\x3c\x86\x4d\xd7\x2a\xa5\x97\xf3\x89\xea\x39\x3d\x31\x63\xf1\x33\x93\x73\x0c\xbe\x70\xeb\xd7\x5a\x8c\xf6\x80\xce\x5a\x14\xf8\xc6\x4d\x87\xd3\x59\x8b\x62\x88\x3f\x78\x51\x96\x89\x2e\x10\xef\xb8\x05\xe2\x9d\x01\xc4\xb5\x3e\xbc\xb8\x38\x82\x66\x57\xeb\x6d\x54\x6d\xe0\xcf\x4a\x08\xf5\x4a\x7a\x8c\x24\xac\x06\xb6\x73\xcd\x10\xe5\x14\x78\x58\xd2\xed\xf4\x88\x7e\x2d\x0b\x2e\x71\xd2\x6a\xa7\xc9\x98\x31\x0c\x11\x52\x4a\x79\xc2\x2c\xa5\x30\x21\x64\xab\x34\x8e\x4a\x3b\x3d\x6c\xd5\xc5\x96\xb8\x7d\xfa\x1b\x00\x00\xff\xff\xe2\x16\x8b\x61\x8b\x06\x00\x00")

func bindataOrchestratorTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataOrchestratorTmpl,
		"/orchestrator.tmpl",
	)
}

func bindataOrchestratorTmpl() (*asset, error) {
	bytes, err := bindataOrchestratorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/orchestrator.tmpl",
		size:        1675,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1634920831, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataRuntimesecurityTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xfb\x15\xfb\x03\xf6\x03\x04\x4f\xe2\xd5\x43\xfb\x05\x35\x19\x71\xa1\x6e\xa0\xd9\x54\x24\xe4\xdf\xa5\x21\x15\xf1\xd0\x3d\xed\xcc\xbc\x61\xfa\xa4\x26\x4f\xf0\x00\x97\x66\xb1\x37\x9d\xfe\x8e\x28\xe7\x03\xcb\x9d\x35\x18\x77\x0d\xdf\xe8\xc1\x46\x4b\xb1\x14\x62\xbe\x06\x63\xe8\x78\x9b\xe0\x6b\x03\x53\x44\x0d\x56\xf1\x12\x7b\xec\x95\xcf\x41\x15\xce\xe0\x8f\x9c\x73\xe7\x36\x55\xb3\xcb\x02\xb5\xc8\x33\x1c\x64\x69\x04\x56\xaf\x6f\xce\x77\x05\xea\xb9\x14\xfa\x79\xe9\x13\x00\x00\xff\xff\x14\x21\x75\xe9\xdf\x00\x00\x00")

func bindataRuntimesecurityTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataRuntimesecurityTmpl,
		"/runtimesecurity.tmpl",
	)
}

func bindataRuntimesecurityTmpl() (*asset, error) {
	bytes, err := bindataRuntimesecurityTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/runtimesecurity.tmpl",
		size:        223,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSnmptrapsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x4d\x6a\xc3\x30\x10\x85\xf7\x3a\xc5\x5b\x64\x65\x52\x6b\x6f\xc8\xaa\x64\xd9\xb4\x10\x5f\x60\x62\x8f\x6d\x51\xfd\x18\x69\x9c\xd0\x0a\xdd\xbd\x38\x09\xa6\x99\xd5\xe3\xf1\xcd\x37\x4c\xce\xba\x52\xa7\xcf\xf6\xd8\xe0\x7d\x22\x3f\x72\x82\xa3\x9e\x21\x01\x32\x99\x04\x61\x37\x5b\x12\x46\x9a\xc2\x62\x7b\x5c\x18\x91\x07\xcb\x9d\x70\x8f\xe0\x21\x13\x63\x08\xd6\x86\x9b\xf1\xe3\x46\xa7\x3d\xcc\x00\x9a\x67\x6b\x3a\xba\x58\x6e\x54\x85\xce\xf5\x9a\x46\xf6\xa2\xc7\xc5\xe8\xab\xe1\x5b\xd2\x1b\xaf\x47\xf6\x1c\xc9\x9e\x85\x64\x49\xb5\xb8\xd9\xaa\x4a\x97\xa2\x0e\xdb\xa8\xf3\xe9\xe3\x0b\x6d\xa4\x39\xfd\x6f\x73\x7e\x5b\x6f\xd5\x1c\x63\x88\x28\x45\x01\xc7\x35\x36\xc8\xf9\x51\x96\x72\x87\xd8\xf7\x78\xc6\xb8\x3e\x8a\xdd\x37\xff\xec\xb1\xbb\x92\x5d\x18\xcd\x01\xb5\x63\x89\xa6\x4b\x77\x47\xce\x43\x88\x8e\xa4\x35\x62\x1f\x68\x29\xab\x72\x5a\x1c\x79\xf3\xcb\xcf\xbd\x57\xf7\x5f\x00\x00\x00\xff\xff\xc7\xc0\xf8\x4e\x4d\x01\x00\x00")

func bindataSnmptrapsTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataSnmptrapsTmpl,
		"/snmp-traps.tmpl",
	)
}

func bindataSnmptrapsTmpl() (*asset, error) {
	bytes, err := bindataSnmptrapsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/snmp-traps.tmpl",
		size:        333,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSystemprobeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x6b\xf3\x30\x18\x84\x77\xfd\x8a\xc3\x63\xf8\x3e\x6b\x37\x64\x4a\xb3\xb6\x85\x74\x2f\x8a\x7d\xb1\x45\xe5\x57\x46\x7a\xdd\x50\x8c\xff\x7b\x89\x1d\x82\xdb\xa9\x9a\x24\xee\xb9\x7b\x34\x4d\x76\x67\x9e\x5f\xde\x8e\x15\x0e\x9d\x93\x96\x19\xbd\x6b\x08\x8d\xd0\xce\x67\x28\xfb\x21\x38\x25\x72\x17\xc7\xd0\xe0\x4c\x24\x5e\x02\x6b\x65\x83\x28\xd0\x8e\xb8\xc4\x10\xe2\xd5\x4b\xfb\xa0\xf3\x3f\xf8\x0b\xdc\x30\x04\x5f\xbb\x73\x60\x65\x76\xa8\xfb\xc6\xba\x96\xa2\xb6\x1d\xbd\xfd\xf4\xbc\x66\xfb\xe0\x6d\x4b\x61\x72\xe1\xa4\x4e\xc7\x5c\x6a\x3f\x04\xb3\xb3\xf3\x6c\xf6\x9b\x63\x4e\x5f\x59\xd9\xe3\x35\xc5\x33\x7f\x26\x66\x9a\xfe\xdf\x94\xe5\x31\xa5\x98\x32\xe6\xd9\x00\x5b\x1c\x3e\x43\xa2\x22\x8d\x22\x5e\xda\xca\x18\x00\x58\xe9\xe5\x3a\x4d\x18\x92\x17\x7d\x72\xb9\x63\x46\xb1\x46\x05\x8a\x7d\xb1\xae\x2d\xc8\x66\x7f\x51\x32\x64\xde\x1e\xbf\x55\x77\xcd\x1d\x92\x66\x29\x3c\x3e\x29\xd4\x6b\x4c\x1f\xef\x9a\x5c\xcd\x54\x66\x75\xca\xb2\x0e\x9e\xa2\xeb\x34\x70\x88\x22\xac\xd5\x47\xc1\x61\x0d\xaa\x9b\x3f\x50\xfe\x50\xdf\x4a\xbf\x03\x00\x00\xff\xff\xbb\x9f\x39\x9d\xe1\x01\x00\x00")

func bindataSystemprobeTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataSystemprobeTmpl,
		"/systemprobe.tmpl",
	)
}

func bindataSystemprobeTmpl() (*asset, error) {
	bytes, err := bindataSystemprobeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/systemprobe.tmpl",
		size:        481,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1633426680, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTraceagentTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\xd1\x6f\xfa\x36\x10\x7e\xcf\x5f\xf1\xe9\x27\xa6\x82\x04\x51\xfb\x1a\xa9\x0f\x54\xeb\xb6\x4a\x2b\x42\xb4\x5b\x1f\x27\x93\x1c\xc1\x22\xb1\x33\xdb\xa1\x62\x91\xff\xf7\xc9\x8e\x13\x12\xa0\xab\x96\x17\xec\xbb\xef\xbe\xbb\xef\x7c\x36\x8f\xdd\x17\x2d\xd7\xaf\x58\xe6\x24\x4c\x74\xb6\x21\x6a\x9a\x05\xf8\x0e\x31\x29\x25\x15\xac\x8d\x80\x37\xc3\x4c\xad\x13\xac\xa4\x81\xaa\x85\xe0\x22\x87\x54\xa8\x85\x22\x96\xee\xd9\xb6\x20\x48\x81\x42\xa6\xac\xd8\x4b\x6d\x92\xa6\x89\x2b\xa9\x8c\xb5\x71\x04\x3c\x3b\x9e\x04\x4d\xd3\x32\x5a\x1b\x35\x0d\x15\x9a\x46\xcc\x9b\x96\x35\x02\xd6\x3c\xf3\xe0\x8a\x67\x1e\xf1\x47\x65\x78\x49\xde\x54\xfb\xa5\xb5\xd0\x94\x4a\x91\xe9\x08\x78\xa5\x12\xac\x28\x64\xea\x00\xfb\xba\x64\x82\xff\x43\x88\x4b\x2a\xb5\x61\x46\xc7\x4b\xe7\xb3\x16\xdb\x93\x21\x87\xff\x4d\x6a\x23\x58\xe0\x4b\xa5\xd8\xf1\x3c\xee\x6c\x3e\xdd\x86\x52\xe2\x47\x52\x43\x40\x67\x73\x40\x6b\x93\x6b\xc7\xda\x8b\x75\x5a\x45\x56\x49\x2e\x8c\x4e\x22\x00\x70\xad\x54\x4c\xe4\x84\x09\x9f\x63\x42\x48\x1e\xd1\xc5\xf6\x50\x1f\xe8\xb0\x98\x90\xaf\x05\xbd\x65\x01\x12\x99\xdb\x0e\x0a\xc3\xb4\x52\x74\xe4\xb2\xd6\x28\xb9\xa8\x0d\xcd\x22\xe0\xf1\xcb\xaf\x67\xe2\x3b\xd0\xdf\x98\x16\x24\x10\xab\xc0\x35\xc3\x7d\xc8\xb5\x92\x30\x8a\xa5\xa4\x11\x7c\x19\xb8\x80\xd9\x13\x2e\xb2\xc5\xa3\xd2\x16\x7d\xa9\x03\x99\x46\x7b\x9d\x5d\x92\x4e\xce\x2f\x4a\x96\x68\x1a\xbe\x73\x88\xf8\x77\x26\x72\x6b\x9d\xe8\xb0\x81\xb5\x18\x6c\xff\x24\xa5\xb9\x14\xce\x3a\x0d\xe6\x17\x61\x48\x55\x8a\x8c\xe7\x9c\xcd\x91\x16\x9c\x84\xe9\xa2\xde\x5d\xfd\xea\x1c\xd7\x4d\x59\x2d\x0e\x42\x7e\x8a\x80\xd6\x4d\x43\x22\x0b\x25\x01\xef\x63\xd1\xc9\x88\x4c\x6f\xba\x5e\x84\x2a\xfa\x01\x3b\x43\x9e\xdc\x60\xa1\x9b\xb0\x59\xa0\x7d\xab\x98\xb8\xc1\xea\xcd\x03\xd2\x80\x6e\x1a\x7c\x72\xb3\xf7\x90\x0f\xa6\xc4\x9b\x51\xdc\x37\x24\xf8\x3f\x96\x9b\xd5\xcb\xea\x57\x4f\x13\x0f\xc3\xce\x4a\xc2\x81\x5c\x1e\xc7\x81\x4e\x73\x4c\x8e\xac\xa8\xdb\xd9\x53\xcc\xd0\xf6\xa4\x49\x1d\x79\x4a\x83\xd3\xeb\xc6\xc3\x05\xe0\x47\xf0\x27\x73\x12\xc7\xe4\x47\x0f\xfb\x99\x76\xac\x2e\x0c\x2a\xc5\xa5\xe2\xe6\x04\xcd\xca\xaa\x70\x95\x3a\x5a\x57\x5d\x45\x2a\x75\x27\xd2\x66\xb4\xf6\xa7\x73\x6d\xdd\x85\x07\xd6\x37\xc3\xb1\x93\x0a\x77\xae\x4f\xae\x04\x6b\xef\xbe\xe1\xbb\x54\x8e\xb1\x96\xc2\xb4\x62\x0b\x5e\x72\x43\x2a\x7e\x67\x2a\x27\xb3\x71\x89\x1e\xe2\x6e\xe8\xfb\xbe\x3a\xfb\x22\x40\x71\x20\xaa\x10\x32\xb3\x7c\xa4\xeb\x0b\xca\xeb\xc2\x22\xe0\x43\x79\xb6\xff\x73\x5b\xa3\xf3\x44\xfa\xe7\xc7\xdf\xc8\xbf\x3e\x3d\x51\xbc\x66\xa7\x42\xb2\x4c\x5b\x8b\x2a\x2c\xe7\x57\xa0\x36\xd8\xda\x70\x99\xaf\x01\xcf\x47\xf2\x4f\x0e\xc8\x2f\xe6\xa3\x57\x73\x84\xf4\x83\x3d\x78\x39\xfb\xd6\xe6\xe6\x02\xe9\x1f\x78\x8d\x7b\xd7\xd7\xbe\xa5\xe1\x62\x2d\xd7\x2f\xa0\xd6\x3f\x7d\x70\x2d\x98\x5d\x2b\x6b\xe3\xfd\x85\xed\x4f\xd5\xfd\x2f\xb4\x4d\xf0\xef\xf8\x77\x4d\x18\x81\x7c\xec\x53\x9d\x1e\xc8\x2b\xf5\x3e\x6c\xdb\xfd\x58\xf0\x28\xec\x3f\x05\x8f\x90\x37\x05\xfb\xac\x5f\xe9\xbd\x11\x7e\xd6\xdb\xfd\xfe\x1b\x00\x00\xff\xff\x63\x97\x85\xf6\x99\x07\x00\x00")

func bindataTraceagentTmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTraceagentTmpl,
		"/trace-agent.tmpl",
	)
}

func bindataTraceagentTmpl() (*asset, error) {
	bytes, err := bindataTraceagentTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "/trace-agent.tmpl",
		size:        1945,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1591966911, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"/aggregator.tmpl":            bindataAggregatorTmpl,
	"/autodiscovery.tmpl":         bindataAutodiscoveryTmpl,
	"/clusteragent.tmpl":          bindataClusteragentTmpl,
	"/collector.tmpl":             bindataCollectorTmpl,
	"/compliance.tmpl":            bindataComplianceTmpl,
	"/custommetricsprovider.tmpl": bindataCustommetricsproviderTmpl,
	"/dogstatsd.tmpl":             bindataDogstatsdTmpl,
	"/endpoints.tmpl":             bindataEndpointsTmpl,
	"/forwarder.tmpl":             bindataForwarderTmpl,
	"/header.tmpl":                bindataHeaderTmpl,
	"/jmxfetch.tmpl":              bindataJmxfetchTmpl,
	"/logsagent.tmpl":             bindataLogsagentTmpl,
	"/metadatamapper.tmpl":        bindataMetadatamapperTmpl,
	"/orchestrator.tmpl":          bindataOrchestratorTmpl,
	"/runtimesecurity.tmpl":       bindataRuntimesecurityTmpl,
	"/snmp-traps.tmpl":            bindataSnmptrapsTmpl,
	"/systemprobe.tmpl":           bindataSystemprobeTmpl,
	"/trace-agent.tmpl":           bindataTraceagentTmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"": {Func: nil, Children: map[string]*bintree{
		"aggregator.tmpl":            {Func: bindataAggregatorTmpl, Children: map[string]*bintree{}},
		"autodiscovery.tmpl":         {Func: bindataAutodiscoveryTmpl, Children: map[string]*bintree{}},
		"clusteragent.tmpl":          {Func: bindataClusteragentTmpl, Children: map[string]*bintree{}},
		"collector.tmpl":             {Func: bindataCollectorTmpl, Children: map[string]*bintree{}},
		"compliance.tmpl":            {Func: bindataComplianceTmpl, Children: map[string]*bintree{}},
		"custommetricsprovider.tmpl": {Func: bindataCustommetricsproviderTmpl, Children: map[string]*bintree{}},
		"dogstatsd.tmpl":             {Func: bindataDogstatsdTmpl, Children: map[string]*bintree{}},
		"endpoints.tmpl":             {Func: bindataEndpointsTmpl, Children: map[string]*bintree{}},
		"forwarder.tmpl":             {Func: bindataForwarderTmpl, Children: map[string]*bintree{}},
		"header.tmpl":                {Func: bindataHeaderTmpl, Children: map[string]*bintree{}},
		"jmxfetch.tmpl":              {Func: bindataJmxfetchTmpl, Children: map[string]*bintree{}},
		"logsagent.tmpl":             {Func: bindataLogsagentTmpl, Children: map[string]*bintree{}},
		"metadatamapper.tmpl":        {Func: bindataMetadatamapperTmpl, Children: map[string]*bintree{}},
		"orchestrator.tmpl":          {Func: bindataOrchestratorTmpl, Children: map[string]*bintree{}},
		"runtimesecurity.tmpl":       {Func: bindataRuntimesecurityTmpl, Children: map[string]*bintree{}},
		"snmp-traps.tmpl":            {Func: bindataSnmptrapsTmpl, Children: map[string]*bintree{}},
		"systemprobe.tmpl":           {Func: bindataSystemprobeTmpl, Children: map[string]*bintree{}},
		"trace-agent.tmpl":           {Func: bindataTraceagentTmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
