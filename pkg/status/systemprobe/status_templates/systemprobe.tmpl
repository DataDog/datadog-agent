{{- with .systemProbeStats}}
{{- if .Errors }}
  Status: Not running or unreachable
  Error: {{ .Errors }}
{{- else }}
  Status: Running
  Uptime: {{ .uptime }}
  Last Updated: {{ formatUnixTime .updated_at }}
{{- end }}
{{- if .network_tracer }}

  USM
  ===
    Status: {{ .network_tracer.universal_service_monitoring.state }}
  {{- if .network_tracer.universal_service_monitoring.error }}
    Error: {{ .network_tracer.universal_service_monitoring.error }}
  {{- end }}
  {{- if .network_tracer.universal_service_monitoring.last_check }}
    Last Check: {{ formatUnixTime .network_tracer.universal_service_monitoring.last_check }}
  {{- end }}
  {{- if .network_tracer.universal_service_monitoring.traced_programs }}
    Traced Programs: {{ formatJSON .network_tracer.universal_service_monitoring.traced_programs 4 }}
  {{- end }}
  {{- if .network_tracer.universal_service_monitoring.blocked_processes }}
    Blocked Processes: {{ formatJSON .network_tracer.universal_service_monitoring.blocked_processes 4 }}
  {{- end }}

  NPM
  ===
  {{- if .network_tracer.Error }}
    Status: Not running
    Error: {{ .network_tracer.Error }}
  {{- else }}
    Status: Running
    {{- if .network_tracer.tracer.last_check }}
    Last Check: {{ formatUnixTime .network_tracer.tracer.last_check }}
    {{- end }}
    {{- if .network_tracer.state.clients }}
    Client Count: {{ len .network_tracer.state.clients }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .oom_kill_probe }}

  OOM Kill
  ========
  {{- if .oom_kill_probe.Error }}
    Status: Not running
    Error: {{ .oom_kill_probe.Error }}
  {{- else }}
    Status: Running
    {{- if .oom_kill_probe.last_check }}
    Last Check: {{ formatUnixTime .oom_kill_probe.last_check }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .tcp_queue_length_tracer }}

  TCP Queue Length
  ================
  {{- if .tcp_queue_length_tracer.Error }}
    Status: Not running
    Error: {{ .tcp_queue_length_tracer.Error }}
  {{- else }}
    Status: Running
    {{- if .tcp_queue_length_tracer.last_check }}
    Last Check: {{ formatUnixTime .tcp_queue_length_tracer.last_check }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .event_monitor }}

  Event Monitor
  ================
  {{- if .event_monitor.Error }}
    Status: Not running
    Error: {{ .event_monitor.Error }}
  {{- else }}
    Status: Running
  {{- end }}

  {{- with .event_monitor.cws }}

  CWS (runtime security)
  ======================

    Endpoints
    =========

    {{ if .DirectSenderStatus }}
    {{- range $endpoint := .DirectSenderStatus.Endpoints }}
    {{ $endpoint }}
    {{- end }}
    {{- end }}

    Self Tests
    ==========

      Last execution: {{ .SelfTests.LastTimestamp }}
      {{ if .SelfTests.Success }}
      Succeeded:
        {{- range $test := .SelfTests.Success }}
        - {{ $test }}
        {{- end }}
      {{- else }}
      Succeeded: none
      {{- end }}
      {{ if .SelfTests.Fails }}
      Failed:
        {{- range $test := .SelfTests.Fails }}
        - {{ $test }}
        {{- end }}
      {{- else }}
      Failed: none
      {{- end }}

    Policies
    ========
      {{ range $policy := .PoliciesStatus }}
        {{ $policy.Name }}:
          source: {{ $policy.Source }}
          rules:
            {{- range $status := $policy.Status }}
              - {{ $status.ID }}: {{ $status.Status }}{{- if $status.Error }} ({{- $status.Error }}){{- end }}
            {{- end }}
      {{ end }}


    SECL Variables
    ==============

    Global variables:
    {{ range $variable := .GlobalVariables }}
      - {{ $variable.Name }}: {{ $variable.Value }}
    {{- end }}
    {{- if not .GlobalVariables }}
        No variable found
    {{- end }}

    Scoped variables:
    {{ range $scope, $vars := .ScopedVariables }}
      {{ $scope }}:
      {{ range $key, $variables := $vars.KeyValues }}
        {{ $key }}:
        {{- range $variable := $variables.Variables }}
          - {{ $variable.Name }}: {{ $variable.Value }}
        {{- end }}
      {{ end }}
    {{- end }}
    {{- if not .ScopedVariables }}
        No variable found
    {{- end }}

    {{- with .Environment }}

    Environment
    ===========
      {{- if .Warnings }}
      Warnings:
        {{- range $warning := .Warnings }}
        - {{ $warning }}
        {{- end }}
      {{- end }}
      Kernel lockdown: {{ .KernelLockdown }}
      Use eBPF mmapable maps: {{ .UseMmapableMaps }}
      Use eBPF ring buffer: {{ .UseRingBuffer }}
      Use fentry: {{ .UseFentry }}
      {{ if .Constants }}
      Available constant fetchers
      ===========================
        {{ range $fetcher := .Constants.Fetchers }}
        {{ $fetcher }}
        {{- end }}

      Constants
      =========
        {{ range $constant := .Constants.Values }}
        {{ $constant.ID }} = {{ $constant.Value }} (from {{ $constant.Source }})
        {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .process }}

  Process
  =======
  {{- if .process.Error }}
    Status: Not running
    Error: {{ .process.Error }}
  {{- else }}
    Status: Running
  {{- end }}
{{- end }}

{{- if .gpu }}

  GPU
  ===
  {{- if .gpu.Error }}
    Status: Not running
    Error: {{ .gpu.Error }}
  {{- else }}
    Status: Running
  {{- end }}
    Discovered GPUs:
    {{- range .gpu.active_gpus }}
      - GPU {{ .index }}: {{ .name }} {{ .uuid }} {{ if .is_mig }}MIG{{ end }}{{ if not .in_wmeta }} (not in workloadmeta store){{ end }}
    {{- end }}
    CUDA Kernel Cache:
    {{- if .gpu.kernel_cache.active }}
      Active: {{ .gpu.kernel_cache.active }}
      Kernels: {{ .gpu.kernel_cache.kernels }}
    {{- else }}
      Active: false
    {{- end }}
    Process Attacher:
      Traced programs: {{ if (eq .gpu.attacher.active_processes nil) }}0{{ else }}{{ len .gpu.attacher.active_processes }}{{ end }}
      Blocked processes: {{ if (eq .gpu.attacher.blocked_processes nil) }}0{{ else }}{{ len .gpu.attacher.blocked_processes }}{{ end }}
    eBPF Event Consumer: {{ if .gpu.consumer_healthy }}Healthy{{ else }}Unhealthy{{ end }}
    Last Check from Core Agent: {{ formatUnixTime .gpu.last_check }}
{{- end }}

{{- end }}
