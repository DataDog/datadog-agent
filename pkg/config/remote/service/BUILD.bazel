load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = [
        "clients.go",
        "service.go",
        "tracer_predicates.go",
        "util.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/config/remote/service",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/config/model",
        "//pkg/config/remote/api",
        "//pkg/config/remote/data",
        "//pkg/config/remote/uptane",
        "//pkg/proto/msgpgo",
        "//pkg/proto/pbgo/core",
        "//pkg/util/backoff",
        "//pkg/util/log",
        "//pkg/util/uuid",
        "@com_github_benbjohnson_clock//:clock",
        "@com_github_datadog_go_tuf//data",
        "@com_github_datadog_go_tuf//util",
        "@com_github_masterminds_semver//:semver",
        "@com_github_secure_systems_lab_go_securesystemslib//cjson",
        "@io_etcd_go_bbolt//:bbolt",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "service_test",
    srcs = [
        "clients_test.go",
        "service_test.go",
        "tracer_predicates_test.go",
        "util_test.go",
    ],
    embed = [":service"],
    deps = [
        "//pkg/config/model",
        "//pkg/config/remote/data",
        "//pkg/config/remote/uptane",
        "//pkg/proto/msgpgo",
        "//pkg/proto/pbgo/core",
        "//pkg/util/uuid",
        "@com_github_benbjohnson_clock//:clock",
        "@com_github_datadog_go_tuf//data",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@io_etcd_go_bbolt//:bbolt",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)
