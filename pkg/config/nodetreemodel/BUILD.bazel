load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "nodetreemodel",
    srcs = [
        "config.go",
        # keep
        "debug_string.go",
        "debug_string_testonly.go",
        "getter.go",
        "helpers.go",
        "inner_node.go",
        "leaf_node.go",
        "missing_node.go",
        "node.go",
        "read_config_file.go",
        "reflection_node.go",
        "struct_node.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/config/nodetreemodel",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/config/model",
        "//pkg/util/log",
        "@com_github_mitchellh_mapstructure//:mapstructure",
        "@com_github_mohae_deepcopy//:deepcopy",
        "@com_github_spf13_cast//:cast",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@org_golang_x_exp//maps",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "nodetreemodel_test",
    srcs = [
        "config_test.go",
        "getter_test.go",
        "inner_node_test.go",
        "node_test.go",
        "read_config_file_test.go",
        "reflection_node_test.go",
    ],
    embed = [":nodetreemodel"],
    deps = [
        "//pkg/config/model",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)
