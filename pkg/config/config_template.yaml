{{ if .Common }}
# The host of the Datadog intake server to send Agent data to
dd_url: https://app.datadoghq.com

# The Datadog api key to associate your Agent's data with your organization.
# Can be found here:
# https://app.datadoghq.com/account/settings
api_key:

# If you need a proxy to connect to the Internet, provide it here (default:
# disabled). You can use the 'no_proxy' list to specify hosts that should bypass the
# proxy. These settings might impact your checks requests, please refer to the
# specific check documentation for more details.
#
# proxy:
#   http: http(s)://user:password@proxy_for_http:port
#   https: http(s)://user:password@proxy_for_https:port
#   no_proxy:
#     - host1
#     - host2

# If you run the agent behind haproxy, you might want to set this to yes
# skip_ssl_validation: no

# Force the hostname to whatever you want. (default: auto-detected)
# hostname: mymachine.mydomain

# Histogram and Historate configuration
#
# Configure which aggregated value to compute. Possible values are: min, max,
# median, avg, sum and count.
#
# histogram_aggregates: ["max", "median", "avg", "count"]
#
# Configure which percentiles will be computed. Must be a list of float
# between 0 and 1.
# Warning: percentiles must be specified as yaml strings
#
# histogram_percentiles: ["0.95"]

# Forwarder timeout in seconds
# forwarder_timeout: 20

# The forwarder retries failed requests. Use this setting to change the
# maximum length of the forwarder's retry queue (each request in the queue
# takes no more than 2MB in memory)
# forwarder_retry_queue_max_size: 30
{{ end }}
{{- if .Agent }}
# The path containing check configuration files
# By default, uses the conf.d folder located in the agent configuration folder.
# confd_path:

# Additional path where to search for Python checks
# By default, uses the checks.d folder located in the agent configuration folder.
# additional_checksd:

# The port for the go_expvar server
# expvar_port: 5000

# The port for the browser GUI to be served
# Setting 'GUI_port: -1' turns off the GUI completely
# GUI_port: -1

# The port on which the IPC api listens
# cmd_port: 5001

# How many workers will be used to run the check (if not specified, is automatically
# determined based on number of checks running)
# check_runners: 4

# Metadata collection should always be enabled, except if you are running several
# agents/dsd instances per host. In that case, only one agent should have it on.
# WARNING: disabling it on every agent will lead to display and billing issues
# enable_metadata_collection: true

# Enable the gohai collection of systems data
# enable_gohai: true
{{ end -}}
{{- if .Metadata }}
# Metadata collectors, add or remove from the list to enable or disable collection.
# Intervals are expressed in seconds.
metadata_collectors:
  - name: 'resources'
    interval: 60
#  - name: k8s
#    interval: 60
{{ end -}}
{{- if .Dogstatsd }}
# DogStatsd
#
# If you don't want to enable the DogStatsd server, set this option to no
# use_dogstatsd: yes
#
# Make sure your client is sending to the same UDP port
# dogstatsd_port: 8125
#
# Whether dogstatsd should listen to a Unix Socket instead of UDP (*nix only).
# Set to a valid filesystem path to enable
# dogstatsd_socket:
#
# Whether origin detection and container tagging should be enabled for Unix
# Socket incoming metrics. This feature is experimental for now.
#
# dogstatsd_origin_detection: false
#
# The buffer size use to receive statsd packet, in bytes
# dogstatsd_buffer_size: 1024
#
# Whether dogstatsd should listen to non local UDP traffic
# dogstatsd_non_local_traffic: no
#
# Publish dogstatsd's internal stats as Go epxvars
# dogstatsd_stats_enable: no
#
# How many items in the dogstatsd's stats circular buffer
# dogstatsd_stats_buffer: 10
#
# The port for the go_expvar server
# dogstatsd_stats_port: 5000
{{ end -}}
{{- if .JMX }}
# JMX
#
# jmx_pipe_path:
# jmx_pipe_name: dd-auto_discovery
{{ end -}}
{{- if .Autoconfig }}
# Autoconfig
#
# Directory containing configuration templates
# autoconf_template_dir: /datadog/check_configs
#
# The providers the Agent should call to collect checks configurations.
# Please note the File Configuration Provider is enabled by default and cannot
# be configured.
# config_providers:
#   - name: etcd
#     polling: true
#     template_dir: /datadog/check_configs
#     template_url: http://127.0.0.1
#     username:
#     password:

#   - name: consul
#     polling: true
#     template_dir: /datadog/check_configs
#     template_url: http://127.0.0.1
#     ca_file:
#     ca_path:
#     cert_file:
#     key_file:
#     username:
#     password:
#     token:

#   - name: zookeeper
#     polling: true
#     template_dir: /datadog/check_configs
#     template_url: 127.0.0.1
#     username:
#     password:
{{ end -}}
{{- if .Logging }}
# Logging
#
# log_level: info
# log_file: /var/log/datadog/agent.log
{{ end -}}
{{- if .Autodiscovery }}
# Autodiscovery
#
# Change the root directory to look at to get cgroup statistics. Useful when running inside a
# container with host directories mounted on a different folder.
# Default if environment variable "DOCKER_DD_AGENT" is set to "yes"
# "/host/sys/fs/cgroup" and "/sys/fs/cgroup" if not.
#
# container_cgroup_root: /host/sys/fs/cgroup/
#
# Change the root directory to look at to get proc statistics. Useful when running inside a
# container with host directories mounted on a different folder.
# Default if environment variable "DOCKER_DD_AGENT" is set to "yes"
# "/host/proc" and "/proc" if not.
#
# container_proc_root: /host/proc
#
# listeners:
#   - name: docker
#
# Exclude containers based on their name or image
# An excluded container will not get any individual container metric reported for it.
# However it will still appear in the container count since ignoring it here would give
# a wrong impression about the docker daemon load.
#
# How it works: exclude first.
# If a container matches an exclude rule, it won't be included unless it also matches an include rule.
#
# Rules are regexp.
#
# Examples:
# exclude all, except containers based on the 'ubuntu' image or the 'debian' image.
# ac_exclude: ["image:.*"]
# ac_include: ["image:ubuntu", "image:debian"]
#
# include all, except containers based on the 'ubuntu' image.
# ac_exclude: ["image:ubuntu"]
# ac_include: []
#
# exclude all debian images except containers with a name starting with 'frontend'.
# ac_exclude: ["image:debian"]
# ac_include: ["name:frontend.*"]
#
# ac_exclude: []
# ac_include: []
#
#
# Exclude default pause containers from orchestrators.
#
# By default the agent will not monitor kubernetes/openshift pause
# container. They will still be counted in the container count (just like
# excluded containers) since ignoring them would give a wrong impression
# about the docker daemon load.
#
# exclude_pause_container: true
{{ end -}}
{{- if .DockerTagging }}
# Docker tag extraction
#
# We can extract container label or environment variables
# as metric tags. If you prefix your tag name with +, it
# will only be added to high cardinality metrics (docker check)
#
# docker_labels_as_tags:
#   label_name:                  tag_name
#   high_cardinality_label_name: +tag_name
# docker_env_as_tags:
#   ENVVAR_NAME: tag_name
#
# Example:
# docker_labels_as_tags:
#   com.docker.compose.service: service_name
#   com.docker.compose.project: +project_name
#
{{ end -}}
{{- if .KubernetesTagging }}
# Kubernetes tag extraction
#
# kubernetes_pod_label_to_tag_prefix: "kube_"
#
{{ end -}}
{{- if .ECS }}
# ECS integration
#
# URL where the ECS agent can be found. Standard cases will be autodetected.
# ecs_agent_url: http://localhost:51678
{{ end -}}
{{- if .ProcessAgent }}
# Process agent specific settings
#
# process_config:
#   Note: the Process Agent expects this to be a string
#   enabled: "true"
#   The full path to the file where process-agent logs will be written.
#   log_file:
#   The interval, in seconds, at which we will run each check. If you want consistent
#   behavior between real-time you may set the Container/ProcessRT intervals to 10.
#   Defaults to 10s for normal checks and 2s for others.
#   intervals:
#     container:
#     container_realtime:
#     process:
#     process_realtime:
#   A list of regex patterns that will exclude a process if matched.
#   blacklist_patterns:
#   How many check results to buffer in memory when POST fails. The default is usually fine.
#   queue_size:
#   The maximum number of file descriptors to open when collecting net connections.
#   Only change if you are running out of file descriptors from the Agent.
#   max_proc_fds:
#   The maximum number of processes or containers per message.
#   Only change if the defaults are causing issues.
#   max_per_message:
#   Overrides the path to the Agent bin used for getting the hostname. The default is usually fine.
#   dd_agent_bin:
#   Overrides of the environment we pass to fetch the hostname. The default is usually fine.
#   dd_agent_env:
{{ end -}}
