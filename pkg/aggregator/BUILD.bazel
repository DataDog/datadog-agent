load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "aggregator",
    srcs = [
        "aggregator.go",
        "check_sampler.go",
        "context_resolver.go",
        "context_resolver_debug.go",
        "demultiplexer.go",
        "demultiplexer_agent.go",
        "demultiplexer_agent_printer.go",
        "demultiplexer_mock.go",
        "demultiplexer_senders.go",
        "demultiplexer_serverless.go",
        "no_aggregation_stream_worker.go",
        "no_op_sender_manager.go",
        "sender.go",
        "sketch_map.go",
        "tagset_telem.go",
        "test_common.go",
        "time_sampler.go",
        "time_sampler_worker.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/aggregator",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/hostname",
        "//comp/core/log",
        "//comp/core/log/logimpl",
        "//comp/core/tagger",
        "//comp/core/tagger/types",
        "//comp/forwarder/defaultforwarder",
        "//comp/forwarder/eventplatform",
        "//comp/forwarder/eventplatform/eventplatformimpl",
        "//comp/forwarder/orchestrator",
        "//comp/serializer/compression",
        "//comp/serializer/compression/compressionimpl",
        "//pkg/aggregator/ckey",
        "//pkg/aggregator/internal/tags",
        "//pkg/aggregator/internal/util",
        "//pkg/aggregator/sender",
        "//pkg/collector/check/id",
        "//pkg/collector/check/stats",
        "//pkg/config",
        "//pkg/config/model",
        "//pkg/config/utils",
        "//pkg/logs/message",
        "//pkg/metrics",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/runtime",
        "//pkg/serializer",
        "//pkg/serializer/split",
        "//pkg/serializer/types",
        "//pkg/status/health",
        "//pkg/tagset",
        "//pkg/telemetry",
        "//pkg/util",
        "//pkg/util/flavor",
        "//pkg/util/hostname",
        "//pkg/util/log",
        "//pkg/util/optional",
        "//pkg/util/sort",
        "//pkg/version",
        "@com_github_datadog_opentelemetry_mapping_go_pkg_quantile//:quantile",
        "@com_github_fatih_color//:color",
        "@com_github_olekukonko_tablewriter//:tablewriter",
        "@org_uber_go_atomic//:atomic",
        "@org_uber_go_fx//:fx",
    ],
)

go_test(
    name = "aggregator_test",
    srcs = [
        "aggregator_test.go",
        "check_sampler_bench_test.go",
        "check_sampler_test.go",
        "context_resolver_bench_test.go",
        "context_resolver_test.go",
        "demultiplexer_agent_test.go",
        "demultiplexer_test.go",
        "main_test.go",
        "sender_test.go",
        "sketch_map_test.go",
        "tagset_telem_test.go",
        "time_sampler_test.go",
    ],
    embed = [":aggregator"],
    deps = [
        "//comp/core",
        "//comp/core/hostname",
        "//comp/core/log",
        "//comp/core/tagger",
        "//comp/core/tagger/types",
        "//comp/forwarder/defaultforwarder",
        "//comp/forwarder/defaultforwarder/resolver",
        "//comp/forwarder/eventplatform",
        "//comp/forwarder/eventplatform/eventplatformimpl",
        "//comp/forwarder/eventplatformreceiver/eventplatformreceiverimpl",
        "//comp/forwarder/orchestrator",
        "//comp/forwarder/orchestrator/orchestratorimpl",
        "//comp/serializer/compression",
        "//comp/serializer/compression/compressionimpl",
        "//pkg/aggregator/ckey",
        "//pkg/aggregator/internal/tags",
        "//pkg/collector/check/id",
        "//pkg/config",
        "//pkg/metrics",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/serializer",
        "//pkg/tagset",
        "//pkg/util/flavor",
        "//pkg/util/fxutil",
        "//pkg/util/optional",
        "//pkg/version",
        "@com_github_datadog_opentelemetry_mapping_go_pkg_quantile//:quantile",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_fx//:fx",
    ],
)
