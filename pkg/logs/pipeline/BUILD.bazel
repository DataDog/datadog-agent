load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "pipeline",
    srcs = [
        "pipeline.go",
        "processor_only_provider.go",
        "provider.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/logs/pipeline",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/hostname/hostnameinterface",
        "//comp/logs/agent/config",
        "//comp/serializer/logscompression/def",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/logs/client",
        "//pkg/logs/client/http",
        "//pkg/logs/diagnostic",
        "//pkg/logs/message",
        "//pkg/logs/metrics",
        "//pkg/logs/processor",
        "//pkg/logs/sender",
        "//pkg/logs/sender/http",
        "//pkg/logs/sender/tcp",
        "//pkg/logs/status/statusinterface",
        "//pkg/util/compression",
        "//pkg/util/startstop",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "pipeline_test",
    srcs = ["provider_test.go"],
    embed = [":pipeline"],
    deps = [
        "//comp/logs/agent/config",
        "//comp/serializer/logscompression/fx-mock",
        "//pkg/config/mock",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/logs/client",
        "//pkg/logs/diagnostic",
        "//pkg/logs/message",
        "//pkg/logs/sender",
        "//pkg/logs/status/statusinterface",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)
