load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "docker",
    srcs = [
        "adapter.go",
        "bundled_events.go",
        "check.go",
        "check_metrics_extension.go",
        "check_network.go",
        "config.go",
        "eventbundle.go",
        "events.go",
        "unbundled_events.go",
        "utils.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/containers/docker",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//comp/core/tagger",
        "//comp/core/tagger/types",
        "//comp/core/tagger/utils",
        "//comp/core/workloadmeta",
        "//pkg/aggregator/sender",
        "//pkg/collector/check",
        "//pkg/collector/corechecks",
        "//pkg/collector/corechecks/containers/generic",
        "//pkg/config",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/telemetry",
        "//pkg/util/containers",
        "//pkg/util/containers/metrics",
        "//pkg/util/docker",
        "//pkg/util/hostname",
        "//pkg/util/kubernetes",
        "//pkg/util/log",
        "//pkg/util/optional",
        "//pkg/util/system",
        "@com_github_docker_docker//api/types",
        "@com_github_docker_docker//api/types/container",
        "@com_github_docker_docker//api/types/events",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
)

go_test(
    name = "docker_test",
    srcs = [
        "check_linux_test.go",
        "check_test.go",
        "events_test.go",
        "unbundled_events_test.go",
    ],
    embed = [":docker"],
    deps = [
        "//comp/core",
        "//comp/core/tagger/taggerimpl",
        "//comp/core/tagger/utils",
        "//comp/core/workloadmeta",
        "//pkg/aggregator/mocksender",
        "//pkg/collector/check/id",
        "//pkg/collector/corechecks/containers/generic",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/util/containers",
        "//pkg/util/containers/metrics",
        "//pkg/util/containers/metrics/mock",
        "//pkg/util/docker",
        "//pkg/util/fxutil",
        "//pkg/util/pointer",
        "@com_github_docker_docker//api/types",
        "@com_github_docker_docker//api/types/events",
        "@com_github_docker_docker//api/types/image",
        "@com_github_stretchr_testify//assert",
        "@org_uber_go_fx//:fx",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/util/system",
            "@com_github_docker_docker//api/types/network",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/util/system",
            "@com_github_docker_docker//api/types/network",
        ],
        "//conditions:default": [],
    }),
)
