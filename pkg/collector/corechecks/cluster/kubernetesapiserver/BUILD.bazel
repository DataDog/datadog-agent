load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "kubernetesapiserver",
    srcs = [
        "bundled_events.go",
        "events_common.go",
        "kubernetes_apiserver.go",
        "kubernetes_eventbundle.go",
        "kubernetes_openshift.go",
        "unbundled_events.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/cluster/kubernetesapiserver",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//comp/core/tagger",
        "//comp/core/tagger/types",
        "//pkg/aggregator/sender",
        "//pkg/collector/check",
        "//pkg/collector/corechecks",
        "//pkg/collector/corechecks/cluster",
        "//pkg/config",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/tagset",
        "//pkg/telemetry",
        "//pkg/util/hostname",
        "//pkg/util/kubernetes",
        "//pkg/util/kubernetes/apiserver",
        "//pkg/util/kubernetes/clustername",
        "//pkg/util/log",
        "//pkg/util/optional",
        "@com_github_openshift_api//quota/v1:quota",
        "@com_github_patrickmn_go_cache//:go-cache",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/resource",
    ],
)

go_test(
    name = "kubernetesapiserver_test",
    srcs = [
        "events_common_test.go",
        "kubernetes_apiserver_test.go",
        "kubernetes_eventbundle_test.go",
        "kubernetes_openshift_test.go",
        "unbundled_events_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":kubernetesapiserver"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//comp/core/tagger/taggerimpl/local",
        "//pkg/aggregator",
        "//pkg/aggregator/mocksender",
        "//pkg/collector/corechecks",
        "//pkg/config",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/tagset",
        "@com_github_openshift_api//quota/v1:quota",
        "@com_github_patrickmn_go_cache//:go-cache",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/types",
    ],
)
