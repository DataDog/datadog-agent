load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "k8s",
    srcs = [
        "cluster.go",
        "clusterrole.go",
        "clusterrolebinding.go",
        "cr.go",
        "crd.go",
        "cronjob_v1.go",
        "cronjob_v1beta1.go",
        "daemonset.go",
        "deployment.go",
        "horizontalpodautoscaler.go",
        "ingress.go",
        "job.go",
        "limitrange.go",
        "namespace.go",
        "networkpolicy.go",
        "node.go",
        "persistentvolume.go",
        "persistentvolumeclaim.go",
        "pod.go",
        "replicaset.go",
        "role.go",
        "rolebinding.go",
        "service.go",
        "serviceaccount.go",
        "statefulset.go",
        "storageclass.go",
        "verticalpodautoscaler.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/cluster/orchestrator/processors/k8s",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/tagger",
        "//comp/core/tagger/types",
        "//internal/third_party/kubernetes/pkg/kubelet/types",
        "//pkg/collector/corechecks/cluster/orchestrator/processors",
        "//pkg/collector/corechecks/cluster/orchestrator/processors/common",
        "//pkg/collector/corechecks/cluster/orchestrator/transformers/k8s",
        "//pkg/orchestrator",
        "//pkg/orchestrator/redact",
        "//pkg/util/kubernetes",
        "//pkg/util/kubernetes/kubelet",
        "//pkg/util/log",
        "@com_github_datadog_agent_payload_v5//process",
        "@com_github_json_iterator_go//:go",
        "@com_github_twmb_murmur3//:murmur3",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//autoscaling/v2:autoscaling",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//batch/v1beta1",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//networking/v1:networking",
        "@io_k8s_api//rbac/v1:rbac",
        "@io_k8s_api//storage/v1:storage",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:apiextensions",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_autoscaler_vertical_pod_autoscaler//pkg/apis/autoscaling.k8s.io/v1:autoscaling_k8s_io",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
    ],
)
