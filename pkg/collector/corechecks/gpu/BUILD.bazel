load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "gpu",
    srcs = [
        "config.go",
        "gpu.go",
        "gpu_stub.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/gpu",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:android": [
            "//comp/core/autodiscovery/integration",
            "//comp/core/tagger/def",
            "//comp/core/tagger/types",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/aggregator/sender",
            "//pkg/collector/check",
            "//pkg/collector/corechecks",
            "//pkg/collector/corechecks/gpu/model",
            "//pkg/collector/corechecks/gpu/nvidia",
            "//pkg/config/setup",
            "//pkg/gpu/safenvml",
            "//pkg/metrics",
            "//pkg/system-probe/api/client",
            "//pkg/system-probe/config",
            "//pkg/util/common",
            "//pkg/util/gpu",
            "//pkg/util/log",
            "//pkg/util/option",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@in_gopkg_yaml_v2//:yaml_v2",
        ],
        "@rules_go//go/platform:darwin": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:freebsd": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:illumos": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:ios": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:js": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/autodiscovery/integration",
            "//comp/core/tagger/def",
            "//comp/core/tagger/types",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/aggregator/sender",
            "//pkg/collector/check",
            "//pkg/collector/corechecks",
            "//pkg/collector/corechecks/gpu/model",
            "//pkg/collector/corechecks/gpu/nvidia",
            "//pkg/config/setup",
            "//pkg/gpu/safenvml",
            "//pkg/metrics",
            "//pkg/system-probe/api/client",
            "//pkg/system-probe/config",
            "//pkg/util/common",
            "//pkg/util/gpu",
            "//pkg/util/log",
            "//pkg/util/option",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@in_gopkg_yaml_v2//:yaml_v2",
        ],
        "@rules_go//go/platform:netbsd": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:openbsd": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:osx": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:plan9": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:qnx": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:solaris": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "@rules_go//go/platform:windows": [
            "//comp/core/tagger/def",
            "//comp/core/telemetry",
            "//comp/core/workloadmeta/def",
            "//pkg/collector/check",
            "//pkg/util/option",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "gpu_test",
    srcs = ["gpu_test.go"],
    embed = [":gpu"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//comp/core/tagger/fx-mock",
            "//comp/core/tagger/types",
            "//comp/core/workloadmeta/def",
            "//pkg/aggregator/mocksender",
            "//pkg/collector/corechecks/gpu/model",
            "//pkg/gpu/safenvml",
            "//pkg/gpu/testutil",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_nvidia_go_nvml//pkg/nvml/mock",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//mock",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/tagger/fx-mock",
            "//comp/core/tagger/types",
            "//comp/core/workloadmeta/def",
            "//pkg/aggregator/mocksender",
            "//pkg/collector/corechecks/gpu/model",
            "//pkg/gpu/safenvml",
            "//pkg/gpu/testutil",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_nvidia_go_nvml//pkg/nvml/mock",
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//mock",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
