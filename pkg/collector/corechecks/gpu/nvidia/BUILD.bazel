load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "nvidia",
    srcs = [
        "clocks.go",
        "collector.go",
        "convert.go",
        "device.go",
        "fields.go",
        "mocks.go",
        "remappedrows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/gpu/nvidia",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//comp/core/tagger/def",
            "//comp/core/tagger/types",
            "//pkg/util/common",
            "//pkg/util/log",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_stretchr_testify//mock",
            "@org_golang_x_exp//constraints",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/tagger/def",
            "//comp/core/tagger/types",
            "//pkg/util/common",
            "//pkg/util/log",
            "@com_github_hashicorp_go_multierror//:go-multierror",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_stretchr_testify//mock",
            "@org_golang_x_exp//constraints",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "nvidia_test",
    srcs = ["collector_test.go"],
    embed = [":nvidia"],
    deps = select({
        "@rules_go//go/platform:android": [
            "//comp/core/tagger/mock",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_nvidia_go_nvml//pkg/nvml/mock",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "//comp/core/tagger/mock",
            "@com_github_nvidia_go_nvml//pkg/nvml",
            "@com_github_nvidia_go_nvml//pkg/nvml/mock",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
