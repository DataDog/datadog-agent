load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "snmp",
    srcs = ["snmp.go"],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/corechecks/snmp",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//pkg/aggregator/sender",
        "//pkg/collector/check",
        "//pkg/collector/corechecks",
        "//pkg/collector/corechecks/snmp/internal/checkconfig",
        "//pkg/collector/corechecks/snmp/internal/common",
        "//pkg/collector/corechecks/snmp/internal/devicecheck",
        "//pkg/collector/corechecks/snmp/internal/discovery",
        "//pkg/collector/corechecks/snmp/internal/report",
        "//pkg/collector/corechecks/snmp/internal/session",
        "//pkg/diagnose/diagnosis",
        "//pkg/util/log",
        "//pkg/util/optional",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "snmp_test",
    srcs = [
        "integration_profile_bundle_test.go",
        "integration_profile_metadata_test.go",
        "integration_topology_test.go",
        "snmp_test.go",
    ],
    embed = [":snmp"],
    deps = [
        "//comp/aggregator/demultiplexer",
        "//comp/aggregator/demultiplexer/demultiplexerimpl",
        "//comp/core",
        "//comp/core/autodiscovery/integration",
        "//comp/forwarder/defaultforwarder",
        "//comp/serializer/compression/compressionimpl",
        "//pkg/aggregator",
        "//pkg/aggregator/mocksender",
        "//pkg/collector/check/id",
        "//pkg/collector/corechecks/snmp/internal/checkconfig",
        "//pkg/collector/corechecks/snmp/internal/common",
        "//pkg/collector/corechecks/snmp/internal/devicecheck",
        "//pkg/collector/corechecks/snmp/internal/discovery",
        "//pkg/collector/corechecks/snmp/internal/profile",
        "//pkg/collector/corechecks/snmp/internal/report",
        "//pkg/collector/corechecks/snmp/internal/session",
        "//pkg/collector/externalhost",
        "//pkg/config",
        "//pkg/metrics/servicecheck",
        "//pkg/networkdevice/utils",
        "//pkg/snmp/gosnmplib",
        "//pkg/util/cache",
        "//pkg/util/fxutil",
        "//pkg/version",
        "@com_github_gosnmp_gosnmp//:gosnmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@org_uber_go_atomic//:atomic",
        "@org_uber_go_fx//:fx",
    ],
)
