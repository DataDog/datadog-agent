load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "python",
    srcs = [
        "aggregator.go",
        "check.go",
        "check_context.go",
        "containers.go",
        "datadog_agent.go",
        "helpers.go",
        "init.go",
        "init_nix.go",
        "init_windows.go",
        "inter.go",
        "kubeutil.go",
        "loader.go",
        "loader_stubs.go",
        "loader_windows.go",
        "memory.go",
        "py3_checker.go",
        "subprocesses.go",
        "tagger.go",
        "test_aggregator.go",
        "test_check.go",
        "test_containers.go",
        "test_datadog_agent.go",
        "test_kubeutil.go",
        "test_loader.go",
        "test_rtloader_helpers.go",
        "test_tagger.go",
        "test_util.go",
        "test_util_darwin.go",
        "test_util_linux.go",
        "test_util_windows.go",
        "util.go",
        "version.go",
    ],
    cdeps = [
        "//rtloader",  # keep
    ],
    cgo = True,
    # keep: This gets updated with #cgo directives that don't seem relevant for the Bazel build
    clinkopts = select({
        "//conditions:default": [],
    }),
    # keep
    copts = [
        "-Werror",
        "-Wno-deprecated-declarations",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/collector/python",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//comp/core/tagger/def",
        "//comp/core/tagger/impl-noop",
        "//comp/core/tagger/mock",
        "//comp/core/tagger/types",
        "//comp/core/telemetry",
        "//comp/core/telemetry/telemetryimpl",
        "//comp/logs/integrations/def",
        "//comp/metadata/host/hostimpl/hosttags",
        "//pkg/aggregator",
        "//pkg/aggregator/mocksender",
        "//pkg/aggregator/sender",
        "//pkg/collector/check",
        "//pkg/collector/check/defaults",
        "//pkg/collector/check/id",
        "//pkg/collector/check/stats",
        "//pkg/collector/externalhost",
        "//pkg/collector/loaders",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/config/structure",
        "//pkg/config/utils",
        "//pkg/diagnose/diagnosis",
        "//pkg/metrics",
        "//pkg/metrics/event",
        "//pkg/metrics/servicecheck",
        "//pkg/obfuscate",
        "//pkg/persistentcache",
        "//pkg/tagset",
        "//pkg/telemetry",
        "//pkg/util/cache",
        "//pkg/util/containers",
        "//pkg/util/executable",
        "//pkg/util/hostname",
        "//pkg/util/kubernetes/clustername",
        "//pkg/util/kubernetes/kubelet",
        "//pkg/util/log",
        "//pkg/util/option",
        "//pkg/util/retry",
        "//pkg/version",
        "@com_github_mohae_deepcopy//:deepcopy",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@org_uber_go_atomic//:atomic",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//pkg/util/winutil",
            "@com_github_go_ole_go_ole//:go-ole",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "python_test",
    srcs = [
        "aggregator_test.go",
        "check_test.go",
        "containers_test.go",
        "datadog_agent_test.go",
        "helpers_test.go",
        "kubeutil_test.go",
        "loader_test.go",
        "tagger_test.go",
        "util_test.go",
        "version_test.go",
    ],
    embed = [":python"],
    deps = [
        "//pkg/util/cache",
        "@com_github_stretchr_testify//require",
    ],
)
