syntax = "proto3";

package datadog.remoteagent.v1;

option go_package = "pkg/proto/pbgo/core"; // golang

// This message contains fields that identify a Remote Agent instance.
message RegisterRemoteAgentRequest {
  // Process ID of the remote agent.
  string pid = 1;
  // Flavor of the remoteAgent
  //
  // This should be a stable, unique name for the agent instance (e.g., "otel_agent").
  string flavor = 2;
  // Human-friendly display name of the remote agent.
  //
  // SHOULD be the common name for the remote agent, such as "OpenTelemetry Collector".
  string display_name = 3;
  // gRPC endpoint address where the remote agent can be reached.
  //
  // MUST be a valid gRPC endpoint address, such as "localhost:4317".
  // MUST expose the `RemoteAgent` service.
  // MUST be prefixed by the transport layer if not TCP (e.g., "unix:///opt/datadog-agent/run/trace-agent.sock").
  //     Currently supported transport layers: ["tcp"]
  // MUST be secured with TLS if using TCP, and SHOULD present a valid certificate where possible.
  string api_endpoint_uri = 4;

  // List of services that the remote agent supports.
  // service name MUST be the full name of the service, such as "datadog.remoteagent.status.v1.StatusProvider".
  repeated string services = 5;
}

message RegisterRemoteAgentResponse {
  // UUID representing the current connection between the remoteAgentRegistry and the remoteAgent.
  //
  // The remoteAgent MUST include its session_id in all the response to the remoteAgentRegistry
  // as a metadata named `session_id`. 
  string session_id = 1;
  // Recommended refresh interval for the remote agent.
  //
  // This is the interval at which the remote agent should call the RegisterRemoteAgent RPC in order to assert that the
  // remote agent is live and healthy.
  //
  // The remote agent SHOULD refresh its status every `recommended_refresh_interval_secs` seconds.
  uint32 recommended_refresh_interval_secs = 2;
}

message RefreshRemoteAgentRequest {
  // UUID representing the current connection between the remoteAgentRegistry and the remoteAgent.
  string session_id = 1;
}
message RefreshRemoteAgentResponse {}