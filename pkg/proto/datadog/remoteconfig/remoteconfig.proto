syntax = "proto3";

package datadog.config;

option go_package = "pkg/proto/pbgo";  // golang

// Backend definitions

message ConfigMetas {
  repeated TopMeta roots = 1;
  TopMeta timestamp = 2;
  TopMeta snapshot = 3;
  TopMeta topTargets = 4;
  repeated DelegatedMeta delegatedTargets = 5;
}

message DirectorMetas {
  repeated TopMeta roots = 1;
  TopMeta timestamp = 2;
  TopMeta snapshot = 3;
  TopMeta targets = 4;
}

message DelegatedMeta {
  uint64 version = 1;
  string role = 2;
  bytes raw = 3;
}

message TopMeta {
  uint64 version = 1;
  bytes raw = 2;
}

message File {
  string path = 1;
  bytes raw = 2;
}

enum Product {
  NO_PRODUCT = 0;
  LIVE_DEBUGGING = 1;
  APPSEC = 2;
  RUNTIME_SECURITY = 3;
  APM_SAMPLING = 4;
  TESTING1 = 5;
  TESTING2 = 6;
}

// Backend queries

message LatestConfigsRequest {
  string hostname = 1;
  string agentVersion = 2;
  // timestamp and snapshot versions move in tandem so they are the same.
  uint64 current_config_snapshot_version = 3;
  uint64 current_config_root_version = 9;
  uint64 current_director_root_version = 8;
  repeated Product products = 4;
  repeated Product new_products = 5;
  repeated Client active_clients = 6;
}

message LatestConfigsResponse {
  ConfigMetas config_metas = 1;
  DirectorMetas director_metas = 2;
  repeated File target_files = 3;
}

// Client defintions

message Client {
  ClientState state = 1;
  repeated Product products = 2;
  string id = 3;
  string name = 4;
  string version = 5;
  oneof client_type {
    TracerClient tracerClient = 6;
  }
}

message TracerClient {
  string service = 1;
  string env = 2;
  string version = 3;
}

message Config {
  string id = 1;
  uint64 version = 2;
}

message ClientState {
  uint64 root_version = 1;
  uint64 targets_version = 2;
  repeated Config configs = 3;
  bool has_error = 4;
  string error = 5;
}

// Client queries

message ClientGetConfigsRequest {
  Client client = 1;
}

message ClientGetConfigsResponse {
  repeated TopMeta roots = 1;
  TopMeta targets = 2;
  repeated File target_files = 3;
}
