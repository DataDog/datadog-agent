// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: datadog/workloadmeta/workloadmeta.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkloadmetaKind int32

const (
	WorkloadmetaKind_CONTAINER      WorkloadmetaKind = 0
	WorkloadmetaKind_KUBERNETES_POD WorkloadmetaKind = 1
	WorkloadmetaKind_ECS_TASK       WorkloadmetaKind = 2
)

// Enum value maps for WorkloadmetaKind.
var (
	WorkloadmetaKind_name = map[int32]string{
		0: "CONTAINER",
		1: "KUBERNETES_POD",
		2: "ECS_TASK",
	}
	WorkloadmetaKind_value = map[string]int32{
		"CONTAINER":      0,
		"KUBERNETES_POD": 1,
		"ECS_TASK":       2,
	}
)

func (x WorkloadmetaKind) Enum() *WorkloadmetaKind {
	p := new(WorkloadmetaKind)
	*p = x
	return p
}

func (x WorkloadmetaKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadmetaKind) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[0].Descriptor()
}

func (WorkloadmetaKind) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[0]
}

func (x WorkloadmetaKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadmetaKind.Descriptor instead.
func (WorkloadmetaKind) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{0}
}

type WorkloadmetaSource int32

const (
	WorkloadmetaSource_ALL                  WorkloadmetaSource = 0
	WorkloadmetaSource_RUNTIME              WorkloadmetaSource = 1
	WorkloadmetaSource_NODE_ORCHESTRATOR    WorkloadmetaSource = 2
	WorkloadmetaSource_CLUSTER_ORCHESTRATOR WorkloadmetaSource = 3
)

// Enum value maps for WorkloadmetaSource.
var (
	WorkloadmetaSource_name = map[int32]string{
		0: "ALL",
		1: "RUNTIME",
		2: "NODE_ORCHESTRATOR",
		3: "CLUSTER_ORCHESTRATOR",
	}
	WorkloadmetaSource_value = map[string]int32{
		"ALL":                  0,
		"RUNTIME":              1,
		"NODE_ORCHESTRATOR":    2,
		"CLUSTER_ORCHESTRATOR": 3,
	}
)

func (x WorkloadmetaSource) Enum() *WorkloadmetaSource {
	p := new(WorkloadmetaSource)
	*p = x
	return p
}

func (x WorkloadmetaSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadmetaSource) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[1].Descriptor()
}

func (WorkloadmetaSource) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[1]
}

func (x WorkloadmetaSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadmetaSource.Descriptor instead.
func (WorkloadmetaSource) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{1}
}

type WorkloadmetaEventType int32

const (
	WorkloadmetaEventType_EVENT_TYPE_ALL   WorkloadmetaEventType = 0
	WorkloadmetaEventType_EVENT_TYPE_SET   WorkloadmetaEventType = 1
	WorkloadmetaEventType_EVENT_TYPE_UNSET WorkloadmetaEventType = 2
)

// Enum value maps for WorkloadmetaEventType.
var (
	WorkloadmetaEventType_name = map[int32]string{
		0: "EVENT_TYPE_ALL",
		1: "EVENT_TYPE_SET",
		2: "EVENT_TYPE_UNSET",
	}
	WorkloadmetaEventType_value = map[string]int32{
		"EVENT_TYPE_ALL":   0,
		"EVENT_TYPE_SET":   1,
		"EVENT_TYPE_UNSET": 2,
	}
)

func (x WorkloadmetaEventType) Enum() *WorkloadmetaEventType {
	p := new(WorkloadmetaEventType)
	*p = x
	return p
}

func (x WorkloadmetaEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadmetaEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[2].Descriptor()
}

func (WorkloadmetaEventType) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[2]
}

func (x WorkloadmetaEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadmetaEventType.Descriptor instead.
func (WorkloadmetaEventType) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{2}
}

type Runtime int32

const (
	Runtime_DOCKER      Runtime = 0
	Runtime_CONTAINERD  Runtime = 1
	Runtime_PODMAN      Runtime = 2
	Runtime_CRIO        Runtime = 3
	Runtime_GARDEN      Runtime = 4
	Runtime_ECS_FARGATE Runtime = 5
	Runtime_UNKNOWN     Runtime = 6
)

// Enum value maps for Runtime.
var (
	Runtime_name = map[int32]string{
		0: "DOCKER",
		1: "CONTAINERD",
		2: "PODMAN",
		3: "CRIO",
		4: "GARDEN",
		5: "ECS_FARGATE",
		6: "UNKNOWN",
	}
	Runtime_value = map[string]int32{
		"DOCKER":      0,
		"CONTAINERD":  1,
		"PODMAN":      2,
		"CRIO":        3,
		"GARDEN":      4,
		"ECS_FARGATE": 5,
		"UNKNOWN":     6,
	}
)

func (x Runtime) Enum() *Runtime {
	p := new(Runtime)
	*p = x
	return p
}

func (x Runtime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Runtime) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[3].Descriptor()
}

func (Runtime) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[3]
}

func (x Runtime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Runtime.Descriptor instead.
func (Runtime) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{3}
}

type ContainerStatus int32

const (
	ContainerStatus_CONTAINER_STATUS_UNKNOWN    ContainerStatus = 0
	ContainerStatus_CONTAINER_STATUS_CREATED    ContainerStatus = 1
	ContainerStatus_CONTAINER_STATUS_RUNNING    ContainerStatus = 2
	ContainerStatus_CONTAINER_STATUS_RESTARTING ContainerStatus = 3
	ContainerStatus_CONTAINER_STATUS_PAUSED     ContainerStatus = 4
	ContainerStatus_CONTAINER_STATUS_STOPPED    ContainerStatus = 5
)

// Enum value maps for ContainerStatus.
var (
	ContainerStatus_name = map[int32]string{
		0: "CONTAINER_STATUS_UNKNOWN",
		1: "CONTAINER_STATUS_CREATED",
		2: "CONTAINER_STATUS_RUNNING",
		3: "CONTAINER_STATUS_RESTARTING",
		4: "CONTAINER_STATUS_PAUSED",
		5: "CONTAINER_STATUS_STOPPED",
	}
	ContainerStatus_value = map[string]int32{
		"CONTAINER_STATUS_UNKNOWN":    0,
		"CONTAINER_STATUS_CREATED":    1,
		"CONTAINER_STATUS_RUNNING":    2,
		"CONTAINER_STATUS_RESTARTING": 3,
		"CONTAINER_STATUS_PAUSED":     4,
		"CONTAINER_STATUS_STOPPED":    5,
	}
)

func (x ContainerStatus) Enum() *ContainerStatus {
	p := new(ContainerStatus)
	*p = x
	return p
}

func (x ContainerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[4].Descriptor()
}

func (ContainerStatus) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[4]
}

func (x ContainerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerStatus.Descriptor instead.
func (ContainerStatus) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{4}
}

type ContainerHealth int32

const (
	ContainerHealth_CONTAINER_HEALTH_UNKNOWN   ContainerHealth = 0
	ContainerHealth_CONTAINER_HEALTH_HEALTHY   ContainerHealth = 1
	ContainerHealth_CONTAINER_HEALTH_UNHEALTHY ContainerHealth = 2
)

// Enum value maps for ContainerHealth.
var (
	ContainerHealth_name = map[int32]string{
		0: "CONTAINER_HEALTH_UNKNOWN",
		1: "CONTAINER_HEALTH_HEALTHY",
		2: "CONTAINER_HEALTH_UNHEALTHY",
	}
	ContainerHealth_value = map[string]int32{
		"CONTAINER_HEALTH_UNKNOWN":   0,
		"CONTAINER_HEALTH_HEALTHY":   1,
		"CONTAINER_HEALTH_UNHEALTHY": 2,
	}
)

func (x ContainerHealth) Enum() *ContainerHealth {
	p := new(ContainerHealth)
	*p = x
	return p
}

func (x ContainerHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[5].Descriptor()
}

func (ContainerHealth) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[5]
}

func (x ContainerHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerHealth.Descriptor instead.
func (ContainerHealth) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{5}
}

type ECSLaunchType int32

const (
	ECSLaunchType_EC2     ECSLaunchType = 0
	ECSLaunchType_FARGATE ECSLaunchType = 1
)

// Enum value maps for ECSLaunchType.
var (
	ECSLaunchType_name = map[int32]string{
		0: "EC2",
		1: "FARGATE",
	}
	ECSLaunchType_value = map[string]int32{
		"EC2":     0,
		"FARGATE": 1,
	}
)

func (x ECSLaunchType) Enum() *ECSLaunchType {
	p := new(ECSLaunchType)
	*p = x
	return p
}

func (x ECSLaunchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECSLaunchType) Descriptor() protoreflect.EnumDescriptor {
	return file_datadog_workloadmeta_workloadmeta_proto_enumTypes[6].Descriptor()
}

func (ECSLaunchType) Type() protoreflect.EnumType {
	return &file_datadog_workloadmeta_workloadmeta_proto_enumTypes[6]
}

func (x ECSLaunchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECSLaunchType.Descriptor instead.
func (ECSLaunchType) EnumDescriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{6}
}

type WorkloadmetaFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kinds         []WorkloadmetaKind     `protobuf:"varint,1,rep,packed,name=kinds,proto3,enum=datadog.workloadmeta.WorkloadmetaKind" json:"kinds,omitempty"`
	Source        WorkloadmetaSource     `protobuf:"varint,2,opt,name=source,proto3,enum=datadog.workloadmeta.WorkloadmetaSource" json:"source,omitempty"`
	EventType     WorkloadmetaEventType  `protobuf:"varint,3,opt,name=eventType,proto3,enum=datadog.workloadmeta.WorkloadmetaEventType" json:"eventType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadmetaFilter) Reset() {
	*x = WorkloadmetaFilter{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadmetaFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadmetaFilter) ProtoMessage() {}

func (x *WorkloadmetaFilter) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadmetaFilter.ProtoReflect.Descriptor instead.
func (*WorkloadmetaFilter) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{0}
}

func (x *WorkloadmetaFilter) GetKinds() []WorkloadmetaKind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

func (x *WorkloadmetaFilter) GetSource() WorkloadmetaSource {
	if x != nil {
		return x.Source
	}
	return WorkloadmetaSource_ALL
}

func (x *WorkloadmetaFilter) GetEventType() WorkloadmetaEventType {
	if x != nil {
		return x.EventType
	}
	return WorkloadmetaEventType_EVENT_TYPE_ALL
}

type WorkloadmetaStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *WorkloadmetaFilter    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadmetaStreamRequest) Reset() {
	*x = WorkloadmetaStreamRequest{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadmetaStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadmetaStreamRequest) ProtoMessage() {}

func (x *WorkloadmetaStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadmetaStreamRequest.ProtoReflect.Descriptor instead.
func (*WorkloadmetaStreamRequest) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{1}
}

func (x *WorkloadmetaStreamRequest) GetFilter() *WorkloadmetaFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type WorkloadmetaEntityId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          WorkloadmetaKind       `protobuf:"varint,1,opt,name=kind,proto3,enum=datadog.workloadmeta.WorkloadmetaKind" json:"kind,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadmetaEntityId) Reset() {
	*x = WorkloadmetaEntityId{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadmetaEntityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadmetaEntityId) ProtoMessage() {}

func (x *WorkloadmetaEntityId) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadmetaEntityId.ProtoReflect.Descriptor instead.
func (*WorkloadmetaEntityId) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{2}
}

func (x *WorkloadmetaEntityId) GetKind() WorkloadmetaKind {
	if x != nil {
		return x.Kind
	}
	return WorkloadmetaKind_CONTAINER
}

func (x *WorkloadmetaEntityId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EntityMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityMeta) Reset() {
	*x = EntityMeta{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMeta) ProtoMessage() {}

func (x *EntityMeta) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMeta.ProtoReflect.Descriptor instead.
func (*EntityMeta) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{3}
}

func (x *EntityMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EntityMeta) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *EntityMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ContainerImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RawName       string                 `protobuf:"bytes,2,opt,name=rawName,proto3" json:"rawName,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortName     string                 `protobuf:"bytes,4,opt,name=shortName,proto3" json:"shortName,omitempty"`
	Tag           string                 `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	RepoDigest    string                 `protobuf:"bytes,6,opt,name=repo_digest,json=repoDigest,proto3" json:"repo_digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerImage) Reset() {
	*x = ContainerImage{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerImage) ProtoMessage() {}

func (x *ContainerImage) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerImage.ProtoReflect.Descriptor instead.
func (*ContainerImage) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{4}
}

func (x *ContainerImage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerImage) GetRawName() string {
	if x != nil {
		return x.RawName
	}
	return ""
}

func (x *ContainerImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerImage) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ContainerImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ContainerImage) GetRepoDigest() string {
	if x != nil {
		return x.RepoDigest
	}
	return ""
}

type ContainerPort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerPort) Reset() {
	*x = ContainerPort{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPort) ProtoMessage() {}

func (x *ContainerPort) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPort.ProtoReflect.Descriptor instead.
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ContainerPort) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type ContainerState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Running       bool                   `protobuf:"varint,1,opt,name=running,proto3" json:"running,omitempty"`
	Status        ContainerStatus        `protobuf:"varint,2,opt,name=status,proto3,enum=datadog.workloadmeta.ContainerStatus" json:"status,omitempty"`
	Health        ContainerHealth        `protobuf:"varint,3,opt,name=health,proto3,enum=datadog.workloadmeta.ContainerHealth" json:"health,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartedAt     int64                  `protobuf:"varint,5,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	FinishedAt    int64                  `protobuf:"varint,6,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	ExitCode      int64                  `protobuf:"varint,7,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerState) Reset() {
	*x = ContainerState{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerState) ProtoMessage() {}

func (x *ContainerState) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerState.ProtoReflect.Descriptor instead.
func (*ContainerState) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerState) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *ContainerState) GetStatus() ContainerStatus {
	if x != nil {
		return x.Status
	}
	return ContainerStatus_CONTAINER_STATUS_UNKNOWN
}

func (x *ContainerState) GetHealth() ContainerHealth {
	if x != nil {
		return x.Health
	}
	return ContainerHealth_CONTAINER_HEALTH_UNKNOWN
}

func (x *ContainerState) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ContainerState) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *ContainerState) GetFinishedAt() int64 {
	if x != nil {
		return x.FinishedAt
	}
	return 0
}

func (x *ContainerState) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type ContainerAllocatedResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ID            string                 `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerAllocatedResource) Reset() {
	*x = ContainerAllocatedResource{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerAllocatedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerAllocatedResource) ProtoMessage() {}

func (x *ContainerAllocatedResource) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerAllocatedResource.ProtoReflect.Descriptor instead.
func (*ContainerAllocatedResource) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerAllocatedResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerAllocatedResource) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Container struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	EntityId           *WorkloadmetaEntityId         `protobuf:"bytes,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
	EntityMeta         *EntityMeta                   `protobuf:"bytes,2,opt,name=entityMeta,proto3" json:"entityMeta,omitempty"`
	EnvVars            map[string]string             `protobuf:"bytes,3,rep,name=envVars,proto3" json:"envVars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Hostname           string                        `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Image              *ContainerImage               `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	NetworkIps         map[string]string             `protobuf:"bytes,6,rep,name=networkIps,proto3" json:"networkIps,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Pid                int32                         `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	Ports              []*ContainerPort              `protobuf:"bytes,8,rep,name=ports,proto3" json:"ports,omitempty"`
	Runtime            Runtime                       `protobuf:"varint,9,opt,name=runtime,proto3,enum=datadog.workloadmeta.Runtime" json:"runtime,omitempty"`
	State              *ContainerState               `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	CollectorTags      []string                      `protobuf:"bytes,11,rep,name=collectorTags,proto3" json:"collectorTags,omitempty"`
	CgroupPath         string                        `protobuf:"bytes,12,opt,name=cgroupPath,proto3" json:"cgroupPath,omitempty"`
	AllocatedResources []*ContainerAllocatedResource `protobuf:"bytes,13,rep,name=allocatedResources,proto3" json:"allocatedResources,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{8}
}

func (x *Container) GetEntityId() *WorkloadmetaEntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *Container) GetEntityMeta() *EntityMeta {
	if x != nil {
		return x.EntityMeta
	}
	return nil
}

func (x *Container) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *Container) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Container) GetImage() *ContainerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Container) GetNetworkIps() map[string]string {
	if x != nil {
		return x.NetworkIps
	}
	return nil
}

func (x *Container) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Container) GetPorts() []*ContainerPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container) GetRuntime() Runtime {
	if x != nil {
		return x.Runtime
	}
	return Runtime_DOCKER
}

func (x *Container) GetState() *ContainerState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Container) GetCollectorTags() []string {
	if x != nil {
		return x.CollectorTags
	}
	return nil
}

func (x *Container) GetCgroupPath() string {
	if x != nil {
		return x.CgroupPath
	}
	return ""
}

func (x *Container) GetAllocatedResources() []*ContainerAllocatedResource {
	if x != nil {
		return x.AllocatedResources
	}
	return nil
}

type KubernetesPodOwner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesPodOwner) Reset() {
	*x = KubernetesPodOwner{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesPodOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPodOwner) ProtoMessage() {}

func (x *KubernetesPodOwner) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPodOwner.ProtoReflect.Descriptor instead.
func (*KubernetesPodOwner) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{9}
}

func (x *KubernetesPodOwner) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *KubernetesPodOwner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesPodOwner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrchestratorContainer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image         *ContainerImage        `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorContainer) Reset() {
	*x = OrchestratorContainer{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorContainer) ProtoMessage() {}

func (x *OrchestratorContainer) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorContainer.ProtoReflect.Descriptor instead.
func (*OrchestratorContainer) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{10}
}

func (x *OrchestratorContainer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrchestratorContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrchestratorContainer) GetImage() *ContainerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type KubernetesPod struct {
	state                      protoimpl.MessageState   `protogen:"open.v1"`
	EntityId                   *WorkloadmetaEntityId    `protobuf:"bytes,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
	EntityMeta                 *EntityMeta              `protobuf:"bytes,2,opt,name=entityMeta,proto3" json:"entityMeta,omitempty"`
	Owners                     []*KubernetesPodOwner    `protobuf:"bytes,3,rep,name=owners,proto3" json:"owners,omitempty"`
	PersistentVolumeClaimNames []string                 `protobuf:"bytes,4,rep,name=persistentVolumeClaimNames,proto3" json:"persistentVolumeClaimNames,omitempty"`
	Containers                 []*OrchestratorContainer `protobuf:"bytes,5,rep,name=containers,proto3" json:"containers,omitempty"`
	Ready                      bool                     `protobuf:"varint,6,opt,name=ready,proto3" json:"ready,omitempty"`
	Phase                      string                   `protobuf:"bytes,7,opt,name=phase,proto3" json:"phase,omitempty"`
	Ip                         string                   `protobuf:"bytes,8,opt,name=ip,proto3" json:"ip,omitempty"`
	PriorityClass              string                   `protobuf:"bytes,9,opt,name=priorityClass,proto3" json:"priorityClass,omitempty"`
	QosClass                   string                   `protobuf:"bytes,10,opt,name=qosClass,proto3" json:"qosClass,omitempty"`
	KubeServices               []string                 `protobuf:"bytes,11,rep,name=kubeServices,proto3" json:"kubeServices,omitempty"`
	NamespaceLabels            map[string]string        `protobuf:"bytes,12,rep,name=namespaceLabels,proto3" json:"namespaceLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InitContainers             []*OrchestratorContainer `protobuf:"bytes,13,rep,name=InitContainers,proto3" json:"InitContainers,omitempty"`
	RuntimeClass               string                   `protobuf:"bytes,14,opt,name=runtimeClass,proto3" json:"runtimeClass,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *KubernetesPod) Reset() {
	*x = KubernetesPod{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPod) ProtoMessage() {}

func (x *KubernetesPod) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPod.ProtoReflect.Descriptor instead.
func (*KubernetesPod) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{11}
}

func (x *KubernetesPod) GetEntityId() *WorkloadmetaEntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *KubernetesPod) GetEntityMeta() *EntityMeta {
	if x != nil {
		return x.EntityMeta
	}
	return nil
}

func (x *KubernetesPod) GetOwners() []*KubernetesPodOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *KubernetesPod) GetPersistentVolumeClaimNames() []string {
	if x != nil {
		return x.PersistentVolumeClaimNames
	}
	return nil
}

func (x *KubernetesPod) GetContainers() []*OrchestratorContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *KubernetesPod) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *KubernetesPod) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *KubernetesPod) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *KubernetesPod) GetPriorityClass() string {
	if x != nil {
		return x.PriorityClass
	}
	return ""
}

func (x *KubernetesPod) GetQosClass() string {
	if x != nil {
		return x.QosClass
	}
	return ""
}

func (x *KubernetesPod) GetKubeServices() []string {
	if x != nil {
		return x.KubeServices
	}
	return nil
}

func (x *KubernetesPod) GetNamespaceLabels() map[string]string {
	if x != nil {
		return x.NamespaceLabels
	}
	return nil
}

func (x *KubernetesPod) GetInitContainers() []*OrchestratorContainer {
	if x != nil {
		return x.InitContainers
	}
	return nil
}

func (x *KubernetesPod) GetRuntimeClass() string {
	if x != nil {
		return x.RuntimeClass
	}
	return ""
}

type ECSTask struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	EntityId              *WorkloadmetaEntityId    `protobuf:"bytes,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
	EntityMeta            *EntityMeta              `protobuf:"bytes,2,opt,name=entityMeta,proto3" json:"entityMeta,omitempty"`
	Tags                  map[string]string        `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContainerInstanceTags map[string]string        `protobuf:"bytes,4,rep,name=containerInstanceTags,proto3" json:"containerInstanceTags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ClusterName           string                   `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Region                string                   `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	AvailabilityZone      string                   `protobuf:"bytes,7,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
	Family                string                   `protobuf:"bytes,8,opt,name=family,proto3" json:"family,omitempty"`
	Version               string                   `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	LaunchType            ECSLaunchType            `protobuf:"varint,10,opt,name=launchType,proto3,enum=datadog.workloadmeta.ECSLaunchType" json:"launchType,omitempty"`
	Containers            []*OrchestratorContainer `protobuf:"bytes,11,rep,name=containers,proto3" json:"containers,omitempty"`
	AwsAccountID          int64                    `protobuf:"varint,12,opt,name=awsAccountID,proto3" json:"awsAccountID,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ECSTask) Reset() {
	*x = ECSTask{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECSTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTask) ProtoMessage() {}

func (x *ECSTask) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTask.ProtoReflect.Descriptor instead.
func (*ECSTask) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{12}
}

func (x *ECSTask) GetEntityId() *WorkloadmetaEntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *ECSTask) GetEntityMeta() *EntityMeta {
	if x != nil {
		return x.EntityMeta
	}
	return nil
}

func (x *ECSTask) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ECSTask) GetContainerInstanceTags() map[string]string {
	if x != nil {
		return x.ContainerInstanceTags
	}
	return nil
}

func (x *ECSTask) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ECSTask) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ECSTask) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *ECSTask) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *ECSTask) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ECSTask) GetLaunchType() ECSLaunchType {
	if x != nil {
		return x.LaunchType
	}
	return ECSLaunchType_EC2
}

func (x *ECSTask) GetContainers() []*OrchestratorContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ECSTask) GetAwsAccountID() int64 {
	if x != nil {
		return x.AwsAccountID
	}
	return 0
}

type WorkloadmetaEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          WorkloadmetaEventType  `protobuf:"varint,1,opt,name=type,proto3,enum=datadog.workloadmeta.WorkloadmetaEventType" json:"type,omitempty"`
	Container     *Container             `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	KubernetesPod *KubernetesPod         `protobuf:"bytes,3,opt,name=kubernetesPod,proto3" json:"kubernetesPod,omitempty"`
	EcsTask       *ECSTask               `protobuf:"bytes,4,opt,name=ecsTask,proto3" json:"ecsTask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadmetaEvent) Reset() {
	*x = WorkloadmetaEvent{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadmetaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadmetaEvent) ProtoMessage() {}

func (x *WorkloadmetaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadmetaEvent.ProtoReflect.Descriptor instead.
func (*WorkloadmetaEvent) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{13}
}

func (x *WorkloadmetaEvent) GetType() WorkloadmetaEventType {
	if x != nil {
		return x.Type
	}
	return WorkloadmetaEventType_EVENT_TYPE_ALL
}

func (x *WorkloadmetaEvent) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *WorkloadmetaEvent) GetKubernetesPod() *KubernetesPod {
	if x != nil {
		return x.KubernetesPod
	}
	return nil
}

func (x *WorkloadmetaEvent) GetEcsTask() *ECSTask {
	if x != nil {
		return x.EcsTask
	}
	return nil
}

type WorkloadmetaStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*WorkloadmetaEvent   `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadmetaStreamResponse) Reset() {
	*x = WorkloadmetaStreamResponse{}
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadmetaStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadmetaStreamResponse) ProtoMessage() {}

func (x *WorkloadmetaStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_workloadmeta_workloadmeta_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadmetaStreamResponse.ProtoReflect.Descriptor instead.
func (*WorkloadmetaStreamResponse) Descriptor() ([]byte, []int) {
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP(), []int{14}
}

func (x *WorkloadmetaStreamResponse) GetEvents() []*WorkloadmetaEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_datadog_workloadmeta_workloadmeta_proto protoreflect.FileDescriptor

const file_datadog_workloadmeta_workloadmeta_proto_rawDesc = "" +
	"\n" +
	"'datadog/workloadmeta/workloadmeta.proto\x12\x14datadog.workloadmeta\"\xdf\x01\n" +
	"\x12WorkloadmetaFilter\x12<\n" +
	"\x05kinds\x18\x01 \x03(\x0e2&.datadog.workloadmeta.WorkloadmetaKindR\x05kinds\x12@\n" +
	"\x06source\x18\x02 \x01(\x0e2(.datadog.workloadmeta.WorkloadmetaSourceR\x06source\x12I\n" +
	"\teventType\x18\x03 \x01(\x0e2+.datadog.workloadmeta.WorkloadmetaEventTypeR\teventType\"]\n" +
	"\x19WorkloadmetaStreamRequest\x12@\n" +
	"\x06filter\x18\x01 \x01(\v2(.datadog.workloadmeta.WorkloadmetaFilterR\x06filter\"b\n" +
	"\x14WorkloadmetaEntityId\x12:\n" +
	"\x04kind\x18\x01 \x01(\x0e2&.datadog.workloadmeta.WorkloadmetaKindR\x04kind\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\xd4\x02\n" +
	"\n" +
	"EntityMeta\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12S\n" +
	"\vannotations\x18\x03 \x03(\v21.datadog.workloadmeta.EntityMeta.AnnotationsEntryR\vannotations\x12D\n" +
	"\x06labels\x18\x04 \x03(\v2,.datadog.workloadmeta.EntityMeta.LabelsEntryR\x06labels\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x0eContainerImage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\arawName\x18\x02 \x01(\tR\arawName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tshortName\x18\x04 \x01(\tR\tshortName\x12\x10\n" +
	"\x03tag\x18\x05 \x01(\tR\x03tag\x12\x1f\n" +
	"\vrepo_digest\x18\x06 \x01(\tR\n" +
	"repoDigest\"S\n" +
	"\rContainerPort\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"\xa0\x02\n" +
	"\x0eContainerState\x12\x18\n" +
	"\arunning\x18\x01 \x01(\bR\arunning\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.datadog.workloadmeta.ContainerStatusR\x06status\x12=\n" +
	"\x06health\x18\x03 \x01(\x0e2%.datadog.workloadmeta.ContainerHealthR\x06health\x12\x1c\n" +
	"\tcreatedAt\x18\x04 \x01(\x03R\tcreatedAt\x12\x1c\n" +
	"\tstartedAt\x18\x05 \x01(\x03R\tstartedAt\x12\x1e\n" +
	"\n" +
	"finishedAt\x18\x06 \x01(\x03R\n" +
	"finishedAt\x12\x1a\n" +
	"\bexitCode\x18\a \x01(\x03R\bexitCode\"@\n" +
	"\x1aContainerAllocatedResource\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x0e\n" +
	"\x02ID\x18\x02 \x01(\tR\x02ID\"\xeb\x06\n" +
	"\tContainer\x12F\n" +
	"\bentityId\x18\x01 \x01(\v2*.datadog.workloadmeta.WorkloadmetaEntityIdR\bentityId\x12@\n" +
	"\n" +
	"entityMeta\x18\x02 \x01(\v2 .datadog.workloadmeta.EntityMetaR\n" +
	"entityMeta\x12F\n" +
	"\aenvVars\x18\x03 \x03(\v2,.datadog.workloadmeta.Container.EnvVarsEntryR\aenvVars\x12\x1a\n" +
	"\bhostname\x18\x04 \x01(\tR\bhostname\x12:\n" +
	"\x05image\x18\x05 \x01(\v2$.datadog.workloadmeta.ContainerImageR\x05image\x12O\n" +
	"\n" +
	"networkIps\x18\x06 \x03(\v2/.datadog.workloadmeta.Container.NetworkIpsEntryR\n" +
	"networkIps\x12\x10\n" +
	"\x03pid\x18\a \x01(\x05R\x03pid\x129\n" +
	"\x05ports\x18\b \x03(\v2#.datadog.workloadmeta.ContainerPortR\x05ports\x127\n" +
	"\aruntime\x18\t \x01(\x0e2\x1d.datadog.workloadmeta.RuntimeR\aruntime\x12:\n" +
	"\x05state\x18\n" +
	" \x01(\v2$.datadog.workloadmeta.ContainerStateR\x05state\x12$\n" +
	"\rcollectorTags\x18\v \x03(\tR\rcollectorTags\x12\x1e\n" +
	"\n" +
	"cgroupPath\x18\f \x01(\tR\n" +
	"cgroupPath\x12`\n" +
	"\x12allocatedResources\x18\r \x03(\v20.datadog.workloadmeta.ContainerAllocatedResourceR\x12allocatedResources\x1a:\n" +
	"\fEnvVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fNetworkIpsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\x12KubernetesPodOwner\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"w\n" +
	"\x15OrchestratorContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12:\n" +
	"\x05image\x18\x03 \x01(\v2$.datadog.workloadmeta.ContainerImageR\x05image\"\xab\x06\n" +
	"\rKubernetesPod\x12F\n" +
	"\bentityId\x18\x01 \x01(\v2*.datadog.workloadmeta.WorkloadmetaEntityIdR\bentityId\x12@\n" +
	"\n" +
	"entityMeta\x18\x02 \x01(\v2 .datadog.workloadmeta.EntityMetaR\n" +
	"entityMeta\x12@\n" +
	"\x06owners\x18\x03 \x03(\v2(.datadog.workloadmeta.KubernetesPodOwnerR\x06owners\x12>\n" +
	"\x1apersistentVolumeClaimNames\x18\x04 \x03(\tR\x1apersistentVolumeClaimNames\x12K\n" +
	"\n" +
	"containers\x18\x05 \x03(\v2+.datadog.workloadmeta.OrchestratorContainerR\n" +
	"containers\x12\x14\n" +
	"\x05ready\x18\x06 \x01(\bR\x05ready\x12\x14\n" +
	"\x05phase\x18\a \x01(\tR\x05phase\x12\x0e\n" +
	"\x02ip\x18\b \x01(\tR\x02ip\x12$\n" +
	"\rpriorityClass\x18\t \x01(\tR\rpriorityClass\x12\x1a\n" +
	"\bqosClass\x18\n" +
	" \x01(\tR\bqosClass\x12\"\n" +
	"\fkubeServices\x18\v \x03(\tR\fkubeServices\x12b\n" +
	"\x0fnamespaceLabels\x18\f \x03(\v28.datadog.workloadmeta.KubernetesPod.NamespaceLabelsEntryR\x0fnamespaceLabels\x12S\n" +
	"\x0eInitContainers\x18\r \x03(\v2+.datadog.workloadmeta.OrchestratorContainerR\x0eInitContainers\x12\"\n" +
	"\fruntimeClass\x18\x0e \x01(\tR\fruntimeClass\x1aB\n" +
	"\x14NamespaceLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x06\n" +
	"\aECSTask\x12F\n" +
	"\bentityId\x18\x01 \x01(\v2*.datadog.workloadmeta.WorkloadmetaEntityIdR\bentityId\x12@\n" +
	"\n" +
	"entityMeta\x18\x02 \x01(\v2 .datadog.workloadmeta.EntityMetaR\n" +
	"entityMeta\x12;\n" +
	"\x04tags\x18\x03 \x03(\v2'.datadog.workloadmeta.ECSTask.TagsEntryR\x04tags\x12n\n" +
	"\x15containerInstanceTags\x18\x04 \x03(\v28.datadog.workloadmeta.ECSTask.ContainerInstanceTagsEntryR\x15containerInstanceTags\x12 \n" +
	"\vclusterName\x18\x05 \x01(\tR\vclusterName\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12*\n" +
	"\x10availabilityZone\x18\a \x01(\tR\x10availabilityZone\x12\x16\n" +
	"\x06family\x18\b \x01(\tR\x06family\x12\x18\n" +
	"\aversion\x18\t \x01(\tR\aversion\x12C\n" +
	"\n" +
	"launchType\x18\n" +
	" \x01(\x0e2#.datadog.workloadmeta.ECSLaunchTypeR\n" +
	"launchType\x12K\n" +
	"\n" +
	"containers\x18\v \x03(\v2+.datadog.workloadmeta.OrchestratorContainerR\n" +
	"containers\x12\"\n" +
	"\fawsAccountID\x18\f \x01(\x03R\fawsAccountID\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aH\n" +
	"\x1aContainerInstanceTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x02\n" +
	"\x11WorkloadmetaEvent\x12?\n" +
	"\x04type\x18\x01 \x01(\x0e2+.datadog.workloadmeta.WorkloadmetaEventTypeR\x04type\x12=\n" +
	"\tcontainer\x18\x02 \x01(\v2\x1f.datadog.workloadmeta.ContainerR\tcontainer\x12I\n" +
	"\rkubernetesPod\x18\x03 \x01(\v2#.datadog.workloadmeta.KubernetesPodR\rkubernetesPod\x127\n" +
	"\aecsTask\x18\x04 \x01(\v2\x1d.datadog.workloadmeta.ECSTaskR\aecsTask\"]\n" +
	"\x1aWorkloadmetaStreamResponse\x12?\n" +
	"\x06events\x18\x01 \x03(\v2'.datadog.workloadmeta.WorkloadmetaEventR\x06events*C\n" +
	"\x10WorkloadmetaKind\x12\r\n" +
	"\tCONTAINER\x10\x00\x12\x12\n" +
	"\x0eKUBERNETES_POD\x10\x01\x12\f\n" +
	"\bECS_TASK\x10\x02*[\n" +
	"\x12WorkloadmetaSource\x12\a\n" +
	"\x03ALL\x10\x00\x12\v\n" +
	"\aRUNTIME\x10\x01\x12\x15\n" +
	"\x11NODE_ORCHESTRATOR\x10\x02\x12\x18\n" +
	"\x14CLUSTER_ORCHESTRATOR\x10\x03*U\n" +
	"\x15WorkloadmetaEventType\x12\x12\n" +
	"\x0eEVENT_TYPE_ALL\x10\x00\x12\x12\n" +
	"\x0eEVENT_TYPE_SET\x10\x01\x12\x14\n" +
	"\x10EVENT_TYPE_UNSET\x10\x02*e\n" +
	"\aRuntime\x12\n" +
	"\n" +
	"\x06DOCKER\x10\x00\x12\x0e\n" +
	"\n" +
	"CONTAINERD\x10\x01\x12\n" +
	"\n" +
	"\x06PODMAN\x10\x02\x12\b\n" +
	"\x04CRIO\x10\x03\x12\n" +
	"\n" +
	"\x06GARDEN\x10\x04\x12\x0f\n" +
	"\vECS_FARGATE\x10\x05\x12\v\n" +
	"\aUNKNOWN\x10\x06*\xc7\x01\n" +
	"\x0fContainerStatus\x12\x1c\n" +
	"\x18CONTAINER_STATUS_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18CONTAINER_STATUS_CREATED\x10\x01\x12\x1c\n" +
	"\x18CONTAINER_STATUS_RUNNING\x10\x02\x12\x1f\n" +
	"\x1bCONTAINER_STATUS_RESTARTING\x10\x03\x12\x1b\n" +
	"\x17CONTAINER_STATUS_PAUSED\x10\x04\x12\x1c\n" +
	"\x18CONTAINER_STATUS_STOPPED\x10\x05*m\n" +
	"\x0fContainerHealth\x12\x1c\n" +
	"\x18CONTAINER_HEALTH_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18CONTAINER_HEALTH_HEALTHY\x10\x01\x12\x1e\n" +
	"\x1aCONTAINER_HEALTH_UNHEALTHY\x10\x02*%\n" +
	"\rECSLaunchType\x12\a\n" +
	"\x03EC2\x10\x00\x12\v\n" +
	"\aFARGATE\x10\x01B\x15Z\x13pkg/proto/pbgo/coreb\x06proto3"

var (
	file_datadog_workloadmeta_workloadmeta_proto_rawDescOnce sync.Once
	file_datadog_workloadmeta_workloadmeta_proto_rawDescData []byte
)

func file_datadog_workloadmeta_workloadmeta_proto_rawDescGZIP() []byte {
	file_datadog_workloadmeta_workloadmeta_proto_rawDescOnce.Do(func() {
		file_datadog_workloadmeta_workloadmeta_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_datadog_workloadmeta_workloadmeta_proto_rawDesc), len(file_datadog_workloadmeta_workloadmeta_proto_rawDesc)))
	})
	return file_datadog_workloadmeta_workloadmeta_proto_rawDescData
}

var file_datadog_workloadmeta_workloadmeta_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_datadog_workloadmeta_workloadmeta_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_datadog_workloadmeta_workloadmeta_proto_goTypes = []any{
	(WorkloadmetaKind)(0),              // 0: datadog.workloadmeta.WorkloadmetaKind
	(WorkloadmetaSource)(0),            // 1: datadog.workloadmeta.WorkloadmetaSource
	(WorkloadmetaEventType)(0),         // 2: datadog.workloadmeta.WorkloadmetaEventType
	(Runtime)(0),                       // 3: datadog.workloadmeta.Runtime
	(ContainerStatus)(0),               // 4: datadog.workloadmeta.ContainerStatus
	(ContainerHealth)(0),               // 5: datadog.workloadmeta.ContainerHealth
	(ECSLaunchType)(0),                 // 6: datadog.workloadmeta.ECSLaunchType
	(*WorkloadmetaFilter)(nil),         // 7: datadog.workloadmeta.WorkloadmetaFilter
	(*WorkloadmetaStreamRequest)(nil),  // 8: datadog.workloadmeta.WorkloadmetaStreamRequest
	(*WorkloadmetaEntityId)(nil),       // 9: datadog.workloadmeta.WorkloadmetaEntityId
	(*EntityMeta)(nil),                 // 10: datadog.workloadmeta.EntityMeta
	(*ContainerImage)(nil),             // 11: datadog.workloadmeta.ContainerImage
	(*ContainerPort)(nil),              // 12: datadog.workloadmeta.ContainerPort
	(*ContainerState)(nil),             // 13: datadog.workloadmeta.ContainerState
	(*ContainerAllocatedResource)(nil), // 14: datadog.workloadmeta.ContainerAllocatedResource
	(*Container)(nil),                  // 15: datadog.workloadmeta.Container
	(*KubernetesPodOwner)(nil),         // 16: datadog.workloadmeta.KubernetesPodOwner
	(*OrchestratorContainer)(nil),      // 17: datadog.workloadmeta.OrchestratorContainer
	(*KubernetesPod)(nil),              // 18: datadog.workloadmeta.KubernetesPod
	(*ECSTask)(nil),                    // 19: datadog.workloadmeta.ECSTask
	(*WorkloadmetaEvent)(nil),          // 20: datadog.workloadmeta.WorkloadmetaEvent
	(*WorkloadmetaStreamResponse)(nil), // 21: datadog.workloadmeta.WorkloadmetaStreamResponse
	nil,                                // 22: datadog.workloadmeta.EntityMeta.AnnotationsEntry
	nil,                                // 23: datadog.workloadmeta.EntityMeta.LabelsEntry
	nil,                                // 24: datadog.workloadmeta.Container.EnvVarsEntry
	nil,                                // 25: datadog.workloadmeta.Container.NetworkIpsEntry
	nil,                                // 26: datadog.workloadmeta.KubernetesPod.NamespaceLabelsEntry
	nil,                                // 27: datadog.workloadmeta.ECSTask.TagsEntry
	nil,                                // 28: datadog.workloadmeta.ECSTask.ContainerInstanceTagsEntry
}
var file_datadog_workloadmeta_workloadmeta_proto_depIdxs = []int32{
	0,  // 0: datadog.workloadmeta.WorkloadmetaFilter.kinds:type_name -> datadog.workloadmeta.WorkloadmetaKind
	1,  // 1: datadog.workloadmeta.WorkloadmetaFilter.source:type_name -> datadog.workloadmeta.WorkloadmetaSource
	2,  // 2: datadog.workloadmeta.WorkloadmetaFilter.eventType:type_name -> datadog.workloadmeta.WorkloadmetaEventType
	7,  // 3: datadog.workloadmeta.WorkloadmetaStreamRequest.filter:type_name -> datadog.workloadmeta.WorkloadmetaFilter
	0,  // 4: datadog.workloadmeta.WorkloadmetaEntityId.kind:type_name -> datadog.workloadmeta.WorkloadmetaKind
	22, // 5: datadog.workloadmeta.EntityMeta.annotations:type_name -> datadog.workloadmeta.EntityMeta.AnnotationsEntry
	23, // 6: datadog.workloadmeta.EntityMeta.labels:type_name -> datadog.workloadmeta.EntityMeta.LabelsEntry
	4,  // 7: datadog.workloadmeta.ContainerState.status:type_name -> datadog.workloadmeta.ContainerStatus
	5,  // 8: datadog.workloadmeta.ContainerState.health:type_name -> datadog.workloadmeta.ContainerHealth
	9,  // 9: datadog.workloadmeta.Container.entityId:type_name -> datadog.workloadmeta.WorkloadmetaEntityId
	10, // 10: datadog.workloadmeta.Container.entityMeta:type_name -> datadog.workloadmeta.EntityMeta
	24, // 11: datadog.workloadmeta.Container.envVars:type_name -> datadog.workloadmeta.Container.EnvVarsEntry
	11, // 12: datadog.workloadmeta.Container.image:type_name -> datadog.workloadmeta.ContainerImage
	25, // 13: datadog.workloadmeta.Container.networkIps:type_name -> datadog.workloadmeta.Container.NetworkIpsEntry
	12, // 14: datadog.workloadmeta.Container.ports:type_name -> datadog.workloadmeta.ContainerPort
	3,  // 15: datadog.workloadmeta.Container.runtime:type_name -> datadog.workloadmeta.Runtime
	13, // 16: datadog.workloadmeta.Container.state:type_name -> datadog.workloadmeta.ContainerState
	14, // 17: datadog.workloadmeta.Container.allocatedResources:type_name -> datadog.workloadmeta.ContainerAllocatedResource
	11, // 18: datadog.workloadmeta.OrchestratorContainer.image:type_name -> datadog.workloadmeta.ContainerImage
	9,  // 19: datadog.workloadmeta.KubernetesPod.entityId:type_name -> datadog.workloadmeta.WorkloadmetaEntityId
	10, // 20: datadog.workloadmeta.KubernetesPod.entityMeta:type_name -> datadog.workloadmeta.EntityMeta
	16, // 21: datadog.workloadmeta.KubernetesPod.owners:type_name -> datadog.workloadmeta.KubernetesPodOwner
	17, // 22: datadog.workloadmeta.KubernetesPod.containers:type_name -> datadog.workloadmeta.OrchestratorContainer
	26, // 23: datadog.workloadmeta.KubernetesPod.namespaceLabels:type_name -> datadog.workloadmeta.KubernetesPod.NamespaceLabelsEntry
	17, // 24: datadog.workloadmeta.KubernetesPod.InitContainers:type_name -> datadog.workloadmeta.OrchestratorContainer
	9,  // 25: datadog.workloadmeta.ECSTask.entityId:type_name -> datadog.workloadmeta.WorkloadmetaEntityId
	10, // 26: datadog.workloadmeta.ECSTask.entityMeta:type_name -> datadog.workloadmeta.EntityMeta
	27, // 27: datadog.workloadmeta.ECSTask.tags:type_name -> datadog.workloadmeta.ECSTask.TagsEntry
	28, // 28: datadog.workloadmeta.ECSTask.containerInstanceTags:type_name -> datadog.workloadmeta.ECSTask.ContainerInstanceTagsEntry
	6,  // 29: datadog.workloadmeta.ECSTask.launchType:type_name -> datadog.workloadmeta.ECSLaunchType
	17, // 30: datadog.workloadmeta.ECSTask.containers:type_name -> datadog.workloadmeta.OrchestratorContainer
	2,  // 31: datadog.workloadmeta.WorkloadmetaEvent.type:type_name -> datadog.workloadmeta.WorkloadmetaEventType
	15, // 32: datadog.workloadmeta.WorkloadmetaEvent.container:type_name -> datadog.workloadmeta.Container
	18, // 33: datadog.workloadmeta.WorkloadmetaEvent.kubernetesPod:type_name -> datadog.workloadmeta.KubernetesPod
	19, // 34: datadog.workloadmeta.WorkloadmetaEvent.ecsTask:type_name -> datadog.workloadmeta.ECSTask
	20, // 35: datadog.workloadmeta.WorkloadmetaStreamResponse.events:type_name -> datadog.workloadmeta.WorkloadmetaEvent
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_datadog_workloadmeta_workloadmeta_proto_init() }
func file_datadog_workloadmeta_workloadmeta_proto_init() {
	if File_datadog_workloadmeta_workloadmeta_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datadog_workloadmeta_workloadmeta_proto_rawDesc), len(file_datadog_workloadmeta_workloadmeta_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datadog_workloadmeta_workloadmeta_proto_goTypes,
		DependencyIndexes: file_datadog_workloadmeta_workloadmeta_proto_depIdxs,
		EnumInfos:         file_datadog_workloadmeta_workloadmeta_proto_enumTypes,
		MessageInfos:      file_datadog_workloadmeta_workloadmeta_proto_msgTypes,
	}.Build()
	File_datadog_workloadmeta_workloadmeta_proto = out.File
	file_datadog_workloadmeta_workloadmeta_proto_goTypes = nil
	file_datadog_workloadmeta_workloadmeta_proto_depIdxs = nil
}
