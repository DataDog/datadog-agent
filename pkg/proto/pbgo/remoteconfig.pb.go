// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: datadog/remoteconfig/remoteconfig.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigMetas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots            []*TopMeta       `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
	Timestamp        *TopMeta         `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Snapshot         *TopMeta         `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	TopTargets       *TopMeta         `protobuf:"bytes,4,opt,name=topTargets,proto3" json:"topTargets,omitempty"`
	DelegatedTargets []*DelegatedMeta `protobuf:"bytes,5,rep,name=delegatedTargets,proto3" json:"delegatedTargets,omitempty"`
}

func (x *ConfigMetas) Reset() {
	*x = ConfigMetas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMetas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMetas) ProtoMessage() {}

func (x *ConfigMetas) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMetas.ProtoReflect.Descriptor instead.
func (*ConfigMetas) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigMetas) GetRoots() []*TopMeta {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *ConfigMetas) GetTimestamp() *TopMeta {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ConfigMetas) GetSnapshot() *TopMeta {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *ConfigMetas) GetTopTargets() *TopMeta {
	if x != nil {
		return x.TopTargets
	}
	return nil
}

func (x *ConfigMetas) GetDelegatedTargets() []*DelegatedMeta {
	if x != nil {
		return x.DelegatedTargets
	}
	return nil
}

type DirectorMetas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots     []*TopMeta `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
	Timestamp *TopMeta   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Snapshot  *TopMeta   `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Targets   *TopMeta   `protobuf:"bytes,4,opt,name=targets,proto3" json:"targets,omitempty"`
}

func (x *DirectorMetas) Reset() {
	*x = DirectorMetas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectorMetas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectorMetas) ProtoMessage() {}

func (x *DirectorMetas) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectorMetas.ProtoReflect.Descriptor instead.
func (*DirectorMetas) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{1}
}

func (x *DirectorMetas) GetRoots() []*TopMeta {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *DirectorMetas) GetTimestamp() *TopMeta {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DirectorMetas) GetSnapshot() *TopMeta {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *DirectorMetas) GetTargets() *TopMeta {
	if x != nil {
		return x.Targets
	}
	return nil
}

type DelegatedMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Role    string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Raw     []byte `protobuf:"bytes,3,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *DelegatedMeta) Reset() {
	*x = DelegatedMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatedMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedMeta) ProtoMessage() {}

func (x *DelegatedMeta) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatedMeta.ProtoReflect.Descriptor instead.
func (*DelegatedMeta) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{2}
}

func (x *DelegatedMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DelegatedMeta) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *DelegatedMeta) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type TopMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Raw     []byte `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *TopMeta) Reset() {
	*x = TopMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMeta) ProtoMessage() {}

func (x *TopMeta) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMeta.ProtoReflect.Descriptor instead.
func (*TopMeta) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{3}
}

func (x *TopMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TopMeta) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Raw  []byte `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{4}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type LatestConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname     string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AgentVersion string `protobuf:"bytes,2,opt,name=agentVersion,proto3" json:"agentVersion,omitempty"`
	// timestamp and snapshot versions move in tandem so they are the same.
	CurrentConfigSnapshotVersion uint64    `protobuf:"varint,3,opt,name=current_config_snapshot_version,json=currentConfigSnapshotVersion,proto3" json:"current_config_snapshot_version,omitempty"`
	CurrentConfigRootVersion     uint64    `protobuf:"varint,9,opt,name=current_config_root_version,json=currentConfigRootVersion,proto3" json:"current_config_root_version,omitempty"`
	CurrentDirectorRootVersion   uint64    `protobuf:"varint,8,opt,name=current_director_root_version,json=currentDirectorRootVersion,proto3" json:"current_director_root_version,omitempty"`
	Products                     []string  `protobuf:"bytes,4,rep,name=products,proto3" json:"products,omitempty"`
	NewProducts                  []string  `protobuf:"bytes,5,rep,name=new_products,json=newProducts,proto3" json:"new_products,omitempty"`
	ActiveClients                []*Client `protobuf:"bytes,6,rep,name=active_clients,json=activeClients,proto3" json:"active_clients,omitempty"`
	BackendClientState           []byte    `protobuf:"bytes,10,opt,name=backend_client_state,json=backendClientState,proto3" json:"backend_client_state,omitempty"`
	HasError                     bool      `protobuf:"varint,11,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	Error                        string    `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	TraceAgentEnv                string    `protobuf:"bytes,13,opt,name=trace_agent_env,json=traceAgentEnv,proto3" json:"trace_agent_env,omitempty"`
	OrgUuid                      string    `protobuf:"bytes,14,opt,name=org_uuid,json=orgUuid,proto3" json:"org_uuid,omitempty"`
}

func (x *LatestConfigsRequest) Reset() {
	*x = LatestConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigsRequest) ProtoMessage() {}

func (x *LatestConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigsRequest.ProtoReflect.Descriptor instead.
func (*LatestConfigsRequest) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{5}
}

func (x *LatestConfigsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *LatestConfigsRequest) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *LatestConfigsRequest) GetCurrentConfigSnapshotVersion() uint64 {
	if x != nil {
		return x.CurrentConfigSnapshotVersion
	}
	return 0
}

func (x *LatestConfigsRequest) GetCurrentConfigRootVersion() uint64 {
	if x != nil {
		return x.CurrentConfigRootVersion
	}
	return 0
}

func (x *LatestConfigsRequest) GetCurrentDirectorRootVersion() uint64 {
	if x != nil {
		return x.CurrentDirectorRootVersion
	}
	return 0
}

func (x *LatestConfigsRequest) GetProducts() []string {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *LatestConfigsRequest) GetNewProducts() []string {
	if x != nil {
		return x.NewProducts
	}
	return nil
}

func (x *LatestConfigsRequest) GetActiveClients() []*Client {
	if x != nil {
		return x.ActiveClients
	}
	return nil
}

func (x *LatestConfigsRequest) GetBackendClientState() []byte {
	if x != nil {
		return x.BackendClientState
	}
	return nil
}

func (x *LatestConfigsRequest) GetHasError() bool {
	if x != nil {
		return x.HasError
	}
	return false
}

func (x *LatestConfigsRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LatestConfigsRequest) GetTraceAgentEnv() string {
	if x != nil {
		return x.TraceAgentEnv
	}
	return ""
}

func (x *LatestConfigsRequest) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

type LatestConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigMetas   *ConfigMetas   `protobuf:"bytes,1,opt,name=config_metas,json=configMetas,proto3" json:"config_metas,omitempty"`
	DirectorMetas *DirectorMetas `protobuf:"bytes,2,opt,name=director_metas,json=directorMetas,proto3" json:"director_metas,omitempty"`
	TargetFiles   []*File        `protobuf:"bytes,3,rep,name=target_files,json=targetFiles,proto3" json:"target_files,omitempty"`
}

func (x *LatestConfigsResponse) Reset() {
	*x = LatestConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigsResponse) ProtoMessage() {}

func (x *LatestConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigsResponse.ProtoReflect.Descriptor instead.
func (*LatestConfigsResponse) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{6}
}

func (x *LatestConfigsResponse) GetConfigMetas() *ConfigMetas {
	if x != nil {
		return x.ConfigMetas
	}
	return nil
}

func (x *LatestConfigsResponse) GetDirectorMetas() *DirectorMetas {
	if x != nil {
		return x.DirectorMetas
	}
	return nil
}

func (x *LatestConfigsResponse) GetTargetFiles() []*File {
	if x != nil {
		return x.TargetFiles
	}
	return nil
}

type OrgDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *OrgDataResponse) Reset() {
	*x = OrgDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgDataResponse) ProtoMessage() {}

func (x *OrgDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgDataResponse.ProtoReflect.Descriptor instead.
func (*OrgDataResponse) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{7}
}

func (x *OrgDataResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        *ClientState  `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Id           string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Products     []string      `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	IsTracer     bool          `protobuf:"varint,6,opt,name=is_tracer,json=isTracer,proto3" json:"is_tracer,omitempty"`
	ClientTracer *ClientTracer `protobuf:"bytes,7,opt,name=client_tracer,json=clientTracer,proto3" json:"client_tracer,omitempty"`
	IsAgent      bool          `protobuf:"varint,8,opt,name=is_agent,json=isAgent,proto3" json:"is_agent,omitempty"`
	ClientAgent  *ClientAgent  `protobuf:"bytes,9,opt,name=client_agent,json=clientAgent,proto3" json:"client_agent,omitempty"`
	LastSeen     uint64        `protobuf:"varint,10,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Capabilities []byte        `protobuf:"bytes,11,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{8}
}

func (x *Client) GetState() *ClientState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Client) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Client) GetProducts() []string {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Client) GetIsTracer() bool {
	if x != nil {
		return x.IsTracer
	}
	return false
}

func (x *Client) GetClientTracer() *ClientTracer {
	if x != nil {
		return x.ClientTracer
	}
	return nil
}

func (x *Client) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *Client) GetClientAgent() *ClientAgent {
	if x != nil {
		return x.ClientAgent
	}
	return nil
}

func (x *Client) GetLastSeen() uint64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *Client) GetCapabilities() []byte {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type ClientTracer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId     string   `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Language      string   `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	TracerVersion string   `protobuf:"bytes,3,opt,name=tracer_version,json=tracerVersion,proto3" json:"tracer_version,omitempty"`
	Service       string   `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Env           string   `protobuf:"bytes,5,opt,name=env,proto3" json:"env,omitempty"`
	AppVersion    string   `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Tags          []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ClientTracer) Reset() {
	*x = ClientTracer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientTracer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientTracer) ProtoMessage() {}

func (x *ClientTracer) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientTracer.ProtoReflect.Descriptor instead.
func (*ClientTracer) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{9}
}

func (x *ClientTracer) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ClientTracer) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ClientTracer) GetTracerVersion() string {
	if x != nil {
		return x.TracerVersion
	}
	return ""
}

func (x *ClientTracer) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ClientTracer) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ClientTracer) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ClientTracer) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ClientAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ClusterName string `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *ClientAgent) Reset() {
	*x = ClientAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientAgent) ProtoMessage() {}

func (x *ClientAgent) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientAgent.ProtoReflect.Descriptor instead.
func (*ClientAgent) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{10}
}

func (x *ClientAgent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientAgent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClientAgent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type ConfigState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version    uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Product    string `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	ApplyState uint64 `protobuf:"varint,4,opt,name=apply_state,json=applyState,proto3" json:"apply_state,omitempty"`
	ApplyError string `protobuf:"bytes,5,opt,name=apply_error,json=applyError,proto3" json:"apply_error,omitempty"`
}

func (x *ConfigState) Reset() {
	*x = ConfigState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigState) ProtoMessage() {}

func (x *ConfigState) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigState.ProtoReflect.Descriptor instead.
func (*ConfigState) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigState) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigState) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *ConfigState) GetApplyState() uint64 {
	if x != nil {
		return x.ApplyState
	}
	return 0
}

func (x *ConfigState) GetApplyError() string {
	if x != nil {
		return x.ApplyError
	}
	return ""
}

type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootVersion        uint64         `protobuf:"varint,1,opt,name=root_version,json=rootVersion,proto3" json:"root_version,omitempty"`
	TargetsVersion     uint64         `protobuf:"varint,2,opt,name=targets_version,json=targetsVersion,proto3" json:"targets_version,omitempty"`
	ConfigStates       []*ConfigState `protobuf:"bytes,3,rep,name=config_states,json=configStates,proto3" json:"config_states,omitempty"`
	HasError           bool           `protobuf:"varint,4,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	Error              string         `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	BackendClientState []byte         `protobuf:"bytes,6,opt,name=backend_client_state,json=backendClientState,proto3" json:"backend_client_state,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

func (x *ClientState) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{12}
}

func (x *ClientState) GetRootVersion() uint64 {
	if x != nil {
		return x.RootVersion
	}
	return 0
}

func (x *ClientState) GetTargetsVersion() uint64 {
	if x != nil {
		return x.TargetsVersion
	}
	return 0
}

func (x *ClientState) GetConfigStates() []*ConfigState {
	if x != nil {
		return x.ConfigStates
	}
	return nil
}

func (x *ClientState) GetHasError() bool {
	if x != nil {
		return x.HasError
	}
	return false
}

func (x *ClientState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ClientState) GetBackendClientState() []byte {
	if x != nil {
		return x.BackendClientState
	}
	return nil
}

type TargetFileHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Hash      string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TargetFileHash) Reset() {
	*x = TargetFileHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetFileHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetFileHash) ProtoMessage() {}

func (x *TargetFileHash) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetFileHash.ProtoReflect.Descriptor instead.
func (*TargetFileHash) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{13}
}

func (x *TargetFileHash) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *TargetFileHash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TargetFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Length int64             `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Hashes []*TargetFileHash `protobuf:"bytes,3,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *TargetFileMeta) Reset() {
	*x = TargetFileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetFileMeta) ProtoMessage() {}

func (x *TargetFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetFileMeta.ProtoReflect.Descriptor instead.
func (*TargetFileMeta) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{14}
}

func (x *TargetFileMeta) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TargetFileMeta) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *TargetFileMeta) GetHashes() []*TargetFileHash {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type ClientGetConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client            *Client           `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	CachedTargetFiles []*TargetFileMeta `protobuf:"bytes,2,rep,name=cached_target_files,json=cachedTargetFiles,proto3" json:"cached_target_files,omitempty"`
}

func (x *ClientGetConfigsRequest) Reset() {
	*x = ClientGetConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetConfigsRequest) ProtoMessage() {}

func (x *ClientGetConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetConfigsRequest.ProtoReflect.Descriptor instead.
func (*ClientGetConfigsRequest) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{15}
}

func (x *ClientGetConfigsRequest) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ClientGetConfigsRequest) GetCachedTargetFiles() []*TargetFileMeta {
	if x != nil {
		return x.CachedTargetFiles
	}
	return nil
}

type ClientGetConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots         [][]byte `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
	Targets       []byte   `protobuf:"bytes,2,opt,name=targets,proto3" json:"targets,omitempty"`
	TargetFiles   []*File  `protobuf:"bytes,3,rep,name=target_files,json=targetFiles,proto3" json:"target_files,omitempty"`
	ClientConfigs []string `protobuf:"bytes,4,rep,name=client_configs,json=clientConfigs,proto3" json:"client_configs,omitempty"`
}

func (x *ClientGetConfigsResponse) Reset() {
	*x = ClientGetConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetConfigsResponse) ProtoMessage() {}

func (x *ClientGetConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetConfigsResponse.ProtoReflect.Descriptor instead.
func (*ClientGetConfigsResponse) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{16}
}

func (x *ClientGetConfigsResponse) GetRoots() [][]byte {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *ClientGetConfigsResponse) GetTargets() []byte {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ClientGetConfigsResponse) GetTargetFiles() []*File {
	if x != nil {
		return x.TargetFiles
	}
	return nil
}

func (x *ClientGetConfigsResponse) GetClientConfigs() []string {
	if x != nil {
		return x.ClientConfigs
	}
	return nil
}

type FileMetaState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Hash    string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *FileMetaState) Reset() {
	*x = FileMetaState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetaState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaState) ProtoMessage() {}

func (x *FileMetaState) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaState.ProtoReflect.Descriptor instead.
func (*FileMetaState) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{17}
}

func (x *FileMetaState) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FileMetaState) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetStateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigState     map[string]*FileMetaState `protobuf:"bytes,1,rep,name=config_state,json=configState,proto3" json:"config_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DirectorState   map[string]*FileMetaState `protobuf:"bytes,2,rep,name=director_state,json=directorState,proto3" json:"director_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TargetFilenames map[string]string         `protobuf:"bytes,3,rep,name=target_filenames,json=targetFilenames,proto3" json:"target_filenames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ActiveClients   []*Client                 `protobuf:"bytes,4,rep,name=active_clients,json=activeClients,proto3" json:"active_clients,omitempty"`
}

func (x *GetStateConfigResponse) Reset() {
	*x = GetStateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateConfigResponse) ProtoMessage() {}

func (x *GetStateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateConfigResponse.ProtoReflect.Descriptor instead.
func (*GetStateConfigResponse) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{18}
}

func (x *GetStateConfigResponse) GetConfigState() map[string]*FileMetaState {
	if x != nil {
		return x.ConfigState
	}
	return nil
}

func (x *GetStateConfigResponse) GetDirectorState() map[string]*FileMetaState {
	if x != nil {
		return x.DirectorState
	}
	return nil
}

func (x *GetStateConfigResponse) GetTargetFilenames() map[string]string {
	if x != nil {
		return x.TargetFilenames
	}
	return nil
}

func (x *GetStateConfigResponse) GetActiveClients() []*Client {
	if x != nil {
		return x.ActiveClients
	}
	return nil
}

type TracerPredicateV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID      string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Service       string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Environment   string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	AppVersion    string `protobuf:"bytes,4,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	TracerVersion string `protobuf:"bytes,5,opt,name=tracerVersion,proto3" json:"tracerVersion,omitempty"`
	Language      string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	RuntimeID     string `protobuf:"bytes,7,opt,name=runtimeID,proto3" json:"runtimeID,omitempty"`
}

func (x *TracerPredicateV1) Reset() {
	*x = TracerPredicateV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracerPredicateV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerPredicateV1) ProtoMessage() {}

func (x *TracerPredicateV1) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerPredicateV1.ProtoReflect.Descriptor instead.
func (*TracerPredicateV1) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{19}
}

func (x *TracerPredicateV1) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *TracerPredicateV1) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *TracerPredicateV1) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *TracerPredicateV1) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *TracerPredicateV1) GetTracerVersion() string {
	if x != nil {
		return x.TracerVersion
	}
	return ""
}

func (x *TracerPredicateV1) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TracerPredicateV1) GetRuntimeID() string {
	if x != nil {
		return x.RuntimeID
	}
	return ""
}

type TracerPredicates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TracerPredicatesV1 []*TracerPredicateV1 `protobuf:"bytes,1,rep,name=tracer_predicates_v1,json=tracerPredicatesV1,proto3" json:"tracer_predicates_v1,omitempty"`
}

func (x *TracerPredicates) Reset() {
	*x = TracerPredicates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracerPredicates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerPredicates) ProtoMessage() {}

func (x *TracerPredicates) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_remoteconfig_remoteconfig_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerPredicates.ProtoReflect.Descriptor instead.
func (*TracerPredicates) Descriptor() ([]byte, []int) {
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP(), []int{20}
}

func (x *TracerPredicates) GetTracerPredicatesV1() []*TracerPredicateV1 {
	if x != nil {
		return x.TracerPredicatesV1
	}
	return nil
}

var File_datadog_remoteconfig_remoteconfig_proto protoreflect.FileDescriptor

var file_datadog_remoteconfig_remoteconfig_proto_rawDesc = []byte{
	0x0a, 0x27, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x64,
	0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xac, 0x02, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64,
	0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64,
	0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x49, 0x0a,
	0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f,
	0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f,
	0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f,
	0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x35, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x22, 0x2c, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0xc5,
	0x04, 0x0a, 0x14, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d,
	0x0a, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a,
	0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x6f, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x3d, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f,
	0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x67, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x15, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x73,
	0x12, 0x44, 0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64,
	0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22,
	0x25, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x12, 0x41, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x04,
	0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xd1, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x5e, 0x0a, 0x0b,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x80, 0x02, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22,
	0x74, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x36, 0x0a,
	0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x4e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x11,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x72,
	0x6f, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x37,
	0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x3d,
	0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x81, 0x05,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x60, 0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5d, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a,
	0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xeb, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x56, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x22,
	0x67, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x56, 0x31, 0x52, 0x12, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x56, 0x31, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_datadog_remoteconfig_remoteconfig_proto_rawDescOnce sync.Once
	file_datadog_remoteconfig_remoteconfig_proto_rawDescData = file_datadog_remoteconfig_remoteconfig_proto_rawDesc
)

func file_datadog_remoteconfig_remoteconfig_proto_rawDescGZIP() []byte {
	file_datadog_remoteconfig_remoteconfig_proto_rawDescOnce.Do(func() {
		file_datadog_remoteconfig_remoteconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_datadog_remoteconfig_remoteconfig_proto_rawDescData)
	})
	return file_datadog_remoteconfig_remoteconfig_proto_rawDescData
}

var file_datadog_remoteconfig_remoteconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_datadog_remoteconfig_remoteconfig_proto_goTypes = []interface{}{
	(*ConfigMetas)(nil),              // 0: datadog.config.ConfigMetas
	(*DirectorMetas)(nil),            // 1: datadog.config.DirectorMetas
	(*DelegatedMeta)(nil),            // 2: datadog.config.DelegatedMeta
	(*TopMeta)(nil),                  // 3: datadog.config.TopMeta
	(*File)(nil),                     // 4: datadog.config.File
	(*LatestConfigsRequest)(nil),     // 5: datadog.config.LatestConfigsRequest
	(*LatestConfigsResponse)(nil),    // 6: datadog.config.LatestConfigsResponse
	(*OrgDataResponse)(nil),          // 7: datadog.config.OrgDataResponse
	(*Client)(nil),                   // 8: datadog.config.Client
	(*ClientTracer)(nil),             // 9: datadog.config.ClientTracer
	(*ClientAgent)(nil),              // 10: datadog.config.ClientAgent
	(*ConfigState)(nil),              // 11: datadog.config.ConfigState
	(*ClientState)(nil),              // 12: datadog.config.ClientState
	(*TargetFileHash)(nil),           // 13: datadog.config.TargetFileHash
	(*TargetFileMeta)(nil),           // 14: datadog.config.TargetFileMeta
	(*ClientGetConfigsRequest)(nil),  // 15: datadog.config.ClientGetConfigsRequest
	(*ClientGetConfigsResponse)(nil), // 16: datadog.config.ClientGetConfigsResponse
	(*FileMetaState)(nil),            // 17: datadog.config.FileMetaState
	(*GetStateConfigResponse)(nil),   // 18: datadog.config.GetStateConfigResponse
	(*TracerPredicateV1)(nil),        // 19: datadog.config.TracerPredicateV1
	(*TracerPredicates)(nil),         // 20: datadog.config.TracerPredicates
	nil,                              // 21: datadog.config.GetStateConfigResponse.ConfigStateEntry
	nil,                              // 22: datadog.config.GetStateConfigResponse.DirectorStateEntry
	nil,                              // 23: datadog.config.GetStateConfigResponse.TargetFilenamesEntry
}
var file_datadog_remoteconfig_remoteconfig_proto_depIdxs = []int32{
	3,  // 0: datadog.config.ConfigMetas.roots:type_name -> datadog.config.TopMeta
	3,  // 1: datadog.config.ConfigMetas.timestamp:type_name -> datadog.config.TopMeta
	3,  // 2: datadog.config.ConfigMetas.snapshot:type_name -> datadog.config.TopMeta
	3,  // 3: datadog.config.ConfigMetas.topTargets:type_name -> datadog.config.TopMeta
	2,  // 4: datadog.config.ConfigMetas.delegatedTargets:type_name -> datadog.config.DelegatedMeta
	3,  // 5: datadog.config.DirectorMetas.roots:type_name -> datadog.config.TopMeta
	3,  // 6: datadog.config.DirectorMetas.timestamp:type_name -> datadog.config.TopMeta
	3,  // 7: datadog.config.DirectorMetas.snapshot:type_name -> datadog.config.TopMeta
	3,  // 8: datadog.config.DirectorMetas.targets:type_name -> datadog.config.TopMeta
	8,  // 9: datadog.config.LatestConfigsRequest.active_clients:type_name -> datadog.config.Client
	0,  // 10: datadog.config.LatestConfigsResponse.config_metas:type_name -> datadog.config.ConfigMetas
	1,  // 11: datadog.config.LatestConfigsResponse.director_metas:type_name -> datadog.config.DirectorMetas
	4,  // 12: datadog.config.LatestConfigsResponse.target_files:type_name -> datadog.config.File
	12, // 13: datadog.config.Client.state:type_name -> datadog.config.ClientState
	9,  // 14: datadog.config.Client.client_tracer:type_name -> datadog.config.ClientTracer
	10, // 15: datadog.config.Client.client_agent:type_name -> datadog.config.ClientAgent
	11, // 16: datadog.config.ClientState.config_states:type_name -> datadog.config.ConfigState
	13, // 17: datadog.config.TargetFileMeta.hashes:type_name -> datadog.config.TargetFileHash
	8,  // 18: datadog.config.ClientGetConfigsRequest.client:type_name -> datadog.config.Client
	14, // 19: datadog.config.ClientGetConfigsRequest.cached_target_files:type_name -> datadog.config.TargetFileMeta
	4,  // 20: datadog.config.ClientGetConfigsResponse.target_files:type_name -> datadog.config.File
	21, // 21: datadog.config.GetStateConfigResponse.config_state:type_name -> datadog.config.GetStateConfigResponse.ConfigStateEntry
	22, // 22: datadog.config.GetStateConfigResponse.director_state:type_name -> datadog.config.GetStateConfigResponse.DirectorStateEntry
	23, // 23: datadog.config.GetStateConfigResponse.target_filenames:type_name -> datadog.config.GetStateConfigResponse.TargetFilenamesEntry
	8,  // 24: datadog.config.GetStateConfigResponse.active_clients:type_name -> datadog.config.Client
	19, // 25: datadog.config.TracerPredicates.tracer_predicates_v1:type_name -> datadog.config.TracerPredicateV1
	17, // 26: datadog.config.GetStateConfigResponse.ConfigStateEntry.value:type_name -> datadog.config.FileMetaState
	17, // 27: datadog.config.GetStateConfigResponse.DirectorStateEntry.value:type_name -> datadog.config.FileMetaState
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_datadog_remoteconfig_remoteconfig_proto_init() }
func file_datadog_remoteconfig_remoteconfig_proto_init() {
	if File_datadog_remoteconfig_remoteconfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMetas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectorMetas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatedMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientTracer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetFileHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetFileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetaState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracerPredicateV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_remoteconfig_remoteconfig_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracerPredicates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datadog_remoteconfig_remoteconfig_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datadog_remoteconfig_remoteconfig_proto_goTypes,
		DependencyIndexes: file_datadog_remoteconfig_remoteconfig_proto_depIdxs,
		MessageInfos:      file_datadog_remoteconfig_remoteconfig_proto_msgTypes,
	}.Build()
	File_datadog_remoteconfig_remoteconfig_proto = out.File
	file_datadog_remoteconfig_remoteconfig_proto_rawDesc = nil
	file_datadog_remoteconfig_remoteconfig_proto_goTypes = nil
	file_datadog_remoteconfig_remoteconfig_proto_depIdxs = nil
}
