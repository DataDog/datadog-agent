// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: datadog/trace/telemetry.proto

package trace

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Optional fields, when unset, will be sent to intake with a value of "unknown"
// protoc-gen-c does not support optional fields, so for now, set the fields
// marked optional to the empty string.
type Telemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType        string    `protobuf:"bytes,1,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	SeqId              uint32    `protobuf:"varint,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	RuntimeId          string    `protobuf:"bytes,3,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	TracerTimeUnix     uint64    `protobuf:"varint,4,opt,name=tracer_time_unix,json=tracerTimeUnix,proto3" json:"tracer_time_unix,omitempty"`
	PayloadNamespace   string    `protobuf:"bytes,5,opt,name=payload_namespace,json=payloadNamespace,proto3" json:"payload_namespace,omitempty"`
	Series             []*Metric `protobuf:"bytes,6,rep,name=series,proto3" json:"series,omitempty"`
	AppServiceName     string    `protobuf:"bytes,7,opt,name=app_service_name,json=appServiceName,proto3" json:"app_service_name,omitempty"`              // optional
	AppTracerVersion   string    `protobuf:"bytes,8,opt,name=app_tracer_version,json=appTracerVersion,proto3" json:"app_tracer_version,omitempty"`        // optional
	AppLanguageName    string    `protobuf:"bytes,9,opt,name=app_language_name,json=appLanguageName,proto3" json:"app_language_name,omitempty"`           // optional
	AppLanguageVersion string    `protobuf:"bytes,10,opt,name=app_language_version,json=appLanguageVersion,proto3" json:"app_language_version,omitempty"` // optional
	Hostname           string    `protobuf:"bytes,11,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                 // optional
}

func (x *Telemetry) Reset() {
	*x = Telemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_trace_telemetry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Telemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telemetry) ProtoMessage() {}

func (x *Telemetry) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_trace_telemetry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telemetry.ProtoReflect.Descriptor instead.
func (*Telemetry) Descriptor() ([]byte, []int) {
	return file_datadog_trace_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *Telemetry) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *Telemetry) GetSeqId() uint32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Telemetry) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *Telemetry) GetTracerTimeUnix() uint64 {
	if x != nil {
		return x.TracerTimeUnix
	}
	return 0
}

func (x *Telemetry) GetPayloadNamespace() string {
	if x != nil {
		return x.PayloadNamespace
	}
	return ""
}

func (x *Telemetry) GetSeries() []*Metric {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Telemetry) GetAppServiceName() string {
	if x != nil {
		return x.AppServiceName
	}
	return ""
}

func (x *Telemetry) GetAppTracerVersion() string {
	if x != nil {
		return x.AppTracerVersion
	}
	return ""
}

func (x *Telemetry) GetAppLanguageName() string {
	if x != nil {
		return x.AppLanguageName
	}
	return ""
}

func (x *Telemetry) GetAppLanguageVersion() string {
	if x != nil {
		return x.AppLanguageVersion
	}
	return ""
}

func (x *Telemetry) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric string   `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Type   string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Common bool     `protobuf:"varint,3,opt,name=common,proto3" json:"common,omitempty"`
	Tags   []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Points []uint64 `protobuf:"varint,5,rep,packed,name=points,proto3" json:"points,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datadog_trace_telemetry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_trace_telemetry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_datadog_trace_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *Metric) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *Metric) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Metric) GetCommon() bool {
	if x != nil {
		return x.Common
	}
	return false
}

func (x *Metric) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Metric) GetPoints() []uint64 {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_datadog_trace_telemetry_proto protoreflect.FileDescriptor

var file_datadog_trace_telemetry_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0xbc,
	0x03, 0x0a, 0x09, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12,
	0x2b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datadog_trace_telemetry_proto_rawDescOnce sync.Once
	file_datadog_trace_telemetry_proto_rawDescData = file_datadog_trace_telemetry_proto_rawDesc
)

func file_datadog_trace_telemetry_proto_rawDescGZIP() []byte {
	file_datadog_trace_telemetry_proto_rawDescOnce.Do(func() {
		file_datadog_trace_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(file_datadog_trace_telemetry_proto_rawDescData)
	})
	return file_datadog_trace_telemetry_proto_rawDescData
}

var file_datadog_trace_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_datadog_trace_telemetry_proto_goTypes = []interface{}{
	(*Telemetry)(nil), // 0: datadog.trace.Telemetry
	(*Metric)(nil),    // 1: datadog.trace.Metric
}
var file_datadog_trace_telemetry_proto_depIdxs = []int32{
	1, // 0: datadog.trace.Telemetry.series:type_name -> datadog.trace.Metric
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_datadog_trace_telemetry_proto_init() }
func file_datadog_trace_telemetry_proto_init() {
	if File_datadog_trace_telemetry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datadog_trace_telemetry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Telemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datadog_trace_telemetry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datadog_trace_telemetry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datadog_trace_telemetry_proto_goTypes,
		DependencyIndexes: file_datadog_trace_telemetry_proto_depIdxs,
		MessageInfos:      file_datadog_trace_telemetry_proto_msgTypes,
	}.Build()
	File_datadog_trace_telemetry_proto = out.File
	file_datadog_trace_telemetry_proto_rawDesc = nil
	file_datadog_trace_telemetry_proto_goTypes = nil
	file_datadog_trace_telemetry_proto_depIdxs = nil
}
