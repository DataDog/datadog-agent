// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: datadog/languagedetection/api.proto

package languagedetection

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Process struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Cmdline       []string               `protobuf:"bytes,3,rep,name=cmdline,proto3" json:"cmdline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Process) Reset() {
	*x = Process{}
	mi := &file_datadog_languagedetection_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_languagedetection_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_datadog_languagedetection_api_proto_rawDescGZIP(), []int{0}
}

func (x *Process) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Process) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Process) GetCmdline() []string {
	if x != nil {
		return x.Cmdline
	}
	return nil
}

// Should closely match `languagemodels.Language`
type Language struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_datadog_languagedetection_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_languagedetection_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_datadog_languagedetection_api_proto_rawDescGZIP(), []int{1}
}

func (x *Language) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Language) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DetectLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Processes     []*Process             `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectLanguageRequest) Reset() {
	*x = DetectLanguageRequest{}
	mi := &file_datadog_languagedetection_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectLanguageRequest) ProtoMessage() {}

func (x *DetectLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_languagedetection_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectLanguageRequest.ProtoReflect.Descriptor instead.
func (*DetectLanguageRequest) Descriptor() ([]byte, []int) {
	return file_datadog_languagedetection_api_proto_rawDescGZIP(), []int{2}
}

func (x *DetectLanguageRequest) GetProcesses() []*Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

type DetectLanguageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []*Language            `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectLanguageResponse) Reset() {
	*x = DetectLanguageResponse{}
	mi := &file_datadog_languagedetection_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectLanguageResponse) ProtoMessage() {}

func (x *DetectLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datadog_languagedetection_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectLanguageResponse.ProtoReflect.Descriptor instead.
func (*DetectLanguageResponse) Descriptor() ([]byte, []int) {
	return file_datadog_languagedetection_api_proto_rawDescGZIP(), []int{3}
}

func (x *DetectLanguageResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

var File_datadog_languagedetection_api_proto protoreflect.FileDescriptor

const file_datadog_languagedetection_api_proto_rawDesc = "" +
	"\n" +
	"#datadog/languagedetection/api.proto\x12\x19datadog.languagedetection\"O\n" +
	"\aProcess\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x18\n" +
	"\acmdline\x18\x03 \x03(\tR\acmdline\"8\n" +
	"\bLanguage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"Y\n" +
	"\x15DetectLanguageRequest\x12@\n" +
	"\tprocesses\x18\x01 \x03(\v2\".datadog.languagedetection.ProcessR\tprocesses\"[\n" +
	"\x16DetectLanguageResponse\x12A\n" +
	"\tlanguages\x18\x01 \x03(\v2#.datadog.languagedetection.LanguageR\tlanguagesB\"Z pkg/proto/pbgo/languagedetectionb\x06proto3"

var (
	file_datadog_languagedetection_api_proto_rawDescOnce sync.Once
	file_datadog_languagedetection_api_proto_rawDescData []byte
)

func file_datadog_languagedetection_api_proto_rawDescGZIP() []byte {
	file_datadog_languagedetection_api_proto_rawDescOnce.Do(func() {
		file_datadog_languagedetection_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_datadog_languagedetection_api_proto_rawDesc), len(file_datadog_languagedetection_api_proto_rawDesc)))
	})
	return file_datadog_languagedetection_api_proto_rawDescData
}

var file_datadog_languagedetection_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_datadog_languagedetection_api_proto_goTypes = []any{
	(*Process)(nil),                // 0: datadog.languagedetection.Process
	(*Language)(nil),               // 1: datadog.languagedetection.Language
	(*DetectLanguageRequest)(nil),  // 2: datadog.languagedetection.DetectLanguageRequest
	(*DetectLanguageResponse)(nil), // 3: datadog.languagedetection.DetectLanguageResponse
}
var file_datadog_languagedetection_api_proto_depIdxs = []int32{
	0, // 0: datadog.languagedetection.DetectLanguageRequest.processes:type_name -> datadog.languagedetection.Process
	1, // 1: datadog.languagedetection.DetectLanguageResponse.languages:type_name -> datadog.languagedetection.Language
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_datadog_languagedetection_api_proto_init() }
func file_datadog_languagedetection_api_proto_init() {
	if File_datadog_languagedetection_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datadog_languagedetection_api_proto_rawDesc), len(file_datadog_languagedetection_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datadog_languagedetection_api_proto_goTypes,
		DependencyIndexes: file_datadog_languagedetection_api_proto_depIdxs,
		MessageInfos:      file_datadog_languagedetection_api_proto_msgTypes,
	}.Build()
	File_datadog_languagedetection_api_proto = out.File
	file_datadog_languagedetection_api_proto_goTypes = nil
	file_datadog_languagedetection_api_proto_depIdxs = nil
}
