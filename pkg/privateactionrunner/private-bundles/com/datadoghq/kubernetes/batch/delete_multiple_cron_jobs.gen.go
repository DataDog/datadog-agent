package com_datadoghq_kubernetes_batch

// DO NOT EDIT THIS FILE MANUALLY!// This file was autogenerated by the golang kubernetes generator.
// You can regenerate it by running `bzl run //domains/workflow/actionplatform/apps/tools/golang_action_generator:generate`.

import (
	"context"

	support "github.com/DataDog/datadog-agent/pkg/privateactionrunner/bundle-support/kubernetes"
	"github.com/DataDog/datadog-agent/pkg/privateactionrunner/types"
)

type DeleteMultipleCronJobsHandler struct{}

func NewDeleteMultipleCronJobsHandler() *DeleteMultipleCronJobsHandler {
	return &DeleteMultipleCronJobsHandler{}
}

type DeleteMultipleCronJobsInputs struct {
	*support.DeleteFields
	*support.ListFields
	Namespace string `json:"namespace,omitempty"`
}

type DeleteMultipleCronJobsOutputs struct{}

func (h *DeleteMultipleCronJobsHandler) Run(
	ctx context.Context,
	task *types.Task,
	credential interface{},
) (outputs interface{}, err error) {
	inputs, err := types.ExtractInputs[DeleteMultipleCronJobsInputs](task)
	if err != nil {
		return nil, err
	}

	client, err := support.KubeClient(credential)
	if err != nil {
		return nil, err
	}

	err = client.BatchV1().CronJobs(inputs.Namespace).DeleteCollection(ctx, support.MetaDelete(inputs.DeleteFields), support.MetaList(inputs.ListFields))
	if err != nil {
		return nil, err
	}

	return &DeleteMultipleCronJobsOutputs{}, nil
}
