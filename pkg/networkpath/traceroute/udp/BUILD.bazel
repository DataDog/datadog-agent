load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "udp",
    srcs = [
        "udp_driver.go",
        "udp_traceroute.go",
        "udp_traceroute_linux.go",
        "udp_traceroute_nolinux.go",
        "udpv4.go",
        "udpv4_unix.go",
        "udpv4_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/networkpath/traceroute/udp",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/networkpath/traceroute/common",
        "//pkg/networkpath/traceroute/icmp",
        "//pkg/networkpath/traceroute/packets",
        "//pkg/util/log",
        "@com_github_google_gopacket//:gopacket",
        "@com_github_google_gopacket//layers",
        "@org_golang_x_net//ipv4",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//pkg/networkpath/traceroute/winconn",
            "@org_golang_x_sys//windows",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "udp_test",
    srcs = [
        "udp_driver_test.go",
        "udpv4_test.go",
    ],
    embed = [":udp"],
    deps = [
        "//pkg/networkpath/traceroute/common",
        "//pkg/networkpath/traceroute/packets",
        "@com_github_golang_mock//gomock",
        "@com_github_google_gopacket//:gopacket",
        "@com_github_google_gopacket//layers",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_net//ipv4",
    ],
)
