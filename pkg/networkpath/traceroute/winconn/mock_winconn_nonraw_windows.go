// Code generated by MockGen. DO NOT EDIT.
// Source: .\winconn_nonraw_windows.go

// Package winconn is a generated GoMock package.
package winconn

import (
	net "net"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockConnWrapper is a mock of ConnWrapper interface.
type MockConnWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockConnWrapperMockRecorder
}

// MockConnWrapperMockRecorder is the mock recorder for MockConnWrapper.
type MockConnWrapperMockRecorder struct {
	mock *MockConnWrapper
}

// NewMockConnWrapper creates a new mock instance.
func NewMockConnWrapper(ctrl *gomock.Controller) *MockConnWrapper {
	mock := &MockConnWrapper{ctrl: ctrl}
	mock.recorder = &MockConnWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnWrapper) EXPECT() *MockConnWrapperMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockConnWrapper) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockConnWrapperMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockConnWrapper)(nil).Close))
}

// GetHop mocks base method.
func (m *MockConnWrapper) GetHop(timeout time.Duration, destIP net.IP, destPort uint16) (net.IP, time.Time, uint8, uint8, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHop", timeout, destIP, destPort)
	ret0, _ := ret[0].(net.IP)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(uint8)
	ret3, _ := ret[3].(uint8)
	ret4, _ := ret[4].(error)
	return ret0, ret1, ret2, ret3, ret4
}

// GetHop indicates an expected call of GetHop.
func (mr *MockConnWrapperMockRecorder) GetHop(timeout, destIP, destPort interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHop", reflect.TypeOf((*MockConnWrapper)(nil).GetHop), timeout, destIP, destPort)
}

// SetTTL mocks base method.
func (m *MockConnWrapper) SetTTL(ttl int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTTL", ttl)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTTL indicates an expected call of SetTTL.
func (mr *MockConnWrapperMockRecorder) SetTTL(ttl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTTL", reflect.TypeOf((*MockConnWrapper)(nil).SetTTL), ttl)
}
