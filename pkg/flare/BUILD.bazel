load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "flare",
    srcs = [
        "archive.go",
        "archive_docker.go",
        "archive_k8s.go",
        "archive_linux.go",
        "archive_nix.go",
        "archive_nolinux.go",
        "archive_win.go",
        "config_check.go",
        "flare.go",
        "remote_config.go",
        "service_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/flare",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/system-probe/api/client",
        "//comp/core/autodiscovery/integration",
        "//comp/core/flare/helpers",
        "//comp/core/flare/types",
        "//comp/core/workloadmeta/def",
        "//pkg/api/security",
        "//pkg/api/util",
        "//pkg/collector/check/id",
        "//pkg/config/env",
        "//pkg/config/model",
        "//pkg/config/setup",
        "//pkg/config/utils",
        "//pkg/diagnose",
        "//pkg/diagnose/diagnosis",
        "//pkg/flare/common",
        "//pkg/flare/priviledged",
        "//pkg/proto/pbgo/core",
        "//pkg/status/health",
        "//pkg/status/systemprobe",
        "//pkg/util/cloudproviders",
        "//pkg/util/containers/metrics",
        "//pkg/util/docker",
        "//pkg/util/ecs",
        "//pkg/util/filesystem",
        "//pkg/util/grpc",
        "//pkg/util/installinfo",
        "//pkg/util/kubernetes/kubelet",
        "//pkg/util/log",
        "//pkg/util/option",
        "@com_github_docker_docker//api/types/container",
        "@com_github_fatih_color//:color",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@io_etcd_go_bbolt//:bbolt",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_protobuf//types/known/emptypb",
    ] + select({
        "@rules_go//go/platform:android": [
            "//cmd/system-probe/config",
        ],
        "@rules_go//go/platform:linux": [
            "//cmd/system-probe/config",
        ],
        "@rules_go//go/platform:windows": [
            "//pkg/util/winutil",
            "@org_golang_x_sys//windows",
            "@org_golang_x_sys//windows/svc",
            "@org_golang_x_sys//windows/svc/mgr",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "flare_test",
    srcs = [
        "archive_docker_test.go",
        "archive_test.go",
        "config_check_test.go",
        "service_windows_test.go",
    ],
    embed = [":flare"],
    deps = [
        "//comp/core/autodiscovery/integration",
        "//comp/core/flare/helpers",
        "//comp/core/tagger/types",
        "//comp/core/workloadmeta/def",
        "//pkg/config/mock",
        "//pkg/config/model",
        "@com_github_datadog_agent_payload_v5//process",
        "@com_github_fatih_color//:color",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//pkg/util/winutil",
            "@org_golang_x_sys//windows",
        ],
        "//conditions:default": [],
    }),
)
