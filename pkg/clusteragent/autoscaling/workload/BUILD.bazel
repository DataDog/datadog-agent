load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "workload",
    srcs = [
        "config_retriever.go",
        "config_retriever_settings.go",
        "config_retriever_values.go",
        "controller.go",
        "controller_horizontal.go",
        "controller_vertical.go",
        "doc.go",
        "pod_patcher.go",
        "pod_watcher.go",
        "scaler.go",
        "scaler_fake.go",
        "telemetry.go",
        "utils.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/clusteragent/autoscaling/workload",
    visibility = ["//visibility:public"],
    deps = [
        "//comp/core/workloadmeta/def",
        "//pkg/aggregator/sender",
        "//pkg/clusteragent/autoscaling",
        "//pkg/clusteragent/autoscaling/workload/common",
        "//pkg/clusteragent/autoscaling/workload/model",
        "//pkg/config/remote/data",
        "//pkg/remoteconfig/state",
        "//pkg/telemetry",
        "//pkg/util/kubernetes",
        "//pkg/util/kubernetes/apiserver/common",
        "//pkg/util/kubernetes/apiserver/leaderelection/metrics",
        "//pkg/util/log",
        "//pkg/util/pointer",
        "//pkg/util/workqueue/telemetry",
        "@com_github_datadog_agent_payload_v5//autoscaling/kubernetes",
        "@com_github_datadog_datadog_operator_api//datadoghq/common",
        "@com_github_datadog_datadog_operator_api//datadoghq/v1alpha2",
        "@com_github_hashicorp_go_multierror//:go-multierror",
        "@com_github_stretchr_testify//mock",
        "@io_k8s_api//autoscaling/v1:autoscaling",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/api/meta",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//scale",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_client_go//util/workqueue",
        "@io_k8s_utils//clock",
    ],
)

go_test(
    name = "workload_test",
    srcs = [
        "config_retriever_settings_test.go",
        "config_retriever_test.go",
        "config_retriever_values_test.go",
        "controller_horizontal_test.go",
        "controller_test.go",
        "pod_patcher_test.go",
        "pod_watcher_test.go",
    ],
    embed = [":workload"],
    deps = [
        "//comp/core/config",
        "//comp/core/log/def",
        "//comp/core/log/mock",
        "//comp/core/workloadmeta/def",
        "//comp/core/workloadmeta/fx-mock",
        "//comp/core/workloadmeta/mock",
        "//pkg/clusteragent/autoscaling",
        "//pkg/clusteragent/autoscaling/workload/common",
        "//pkg/clusteragent/autoscaling/workload/model",
        "//pkg/config/remote/data",
        "//pkg/remoteconfig/state",
        "//pkg/util/fxutil",
        "//pkg/util/kubernetes",
        "//pkg/util/kubernetes/apiserver/common",
        "//pkg/util/pointer",
        "//pkg/util/testutil",
        "@com_github_datadog_agent_payload_v5//autoscaling/kubernetes",
        "@com_github_datadog_datadog_operator_api//datadoghq/common",
        "@com_github_datadog_datadog_operator_api//datadoghq/v1alpha1",
        "@com_github_datadog_datadog_operator_api//datadoghq/v1alpha2",
        "@com_github_google_go_cmp//cmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//autoscaling/v1:autoscaling",
        "@io_k8s_api//autoscaling/v2:autoscaling",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/util/uuid",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//dynamic/fake",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_utils//clock",
        "@io_k8s_utils//clock/testing",
        "@org_uber_go_fx//:fx",
    ],
)
