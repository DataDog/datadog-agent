load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "autoscaling",
    srcs = [
        "controller.go",
        "controller_fake.go",
        "controller_testutils.go",
        "doc.go",
        "max_heap.go",
        "processor.go",
        "store.go",
        "utils.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/clusteragent/autoscaling",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/clusteragent/autoscaling/workload/model",
        "//pkg/util/log",
        "@com_github_datadog_datadog_operator_api//datadoghq/v1alpha2",
        "@com_github_google_go_cmp//cmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_twmb_murmur3//:murmur3",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/conversion",
        "@io_k8s_apimachinery//pkg/fields",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/util/dump",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//dynamic/fake",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//testing",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//util/workqueue",
    ],
)
