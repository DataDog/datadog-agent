load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = [
        "apm_inject.go",
        "apm_inject_windows.go",
        "datadog_agent.go",
        "datadog_agent_windows.go",
        "datadog_installer.go",
        "datadog_installer_windows.go",
        "docker.go",
        "file.go",
        "systemd.go",
        "systemd_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/fleet/installer/service",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:android": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:darwin": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:freebsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:illumos": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:ios": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:js": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:netbsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:openbsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:plan9": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:solaris": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "service_test",
    srcs = [
        "apm_inject_test.go",
        "docker_test.go",
        "file_test.go",
    ],
    embed = [":service"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:darwin": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:dragonfly": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:freebsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:illumos": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:ios": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:js": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:netbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:openbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:plan9": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:solaris": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
