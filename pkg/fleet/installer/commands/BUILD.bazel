load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "installer",
    srcs = [
        "apm.go",
        "command.go",
        "umask_nix.go",
        "umask_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/cmd/installer/subcommands/installer",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/installer/command",
        "//pkg/fleet/bootstrapper",
        "//pkg/fleet/installer",
        "//pkg/fleet/installer/env",
        "//pkg/fleet/installer/setup",
        "//pkg/fleet/telemetry",
        "//pkg/version",
        "@com_github_spf13_cobra//:cobra",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
)

go_test(
    name = "installer_test",
    srcs = ["command_test.go"],
    embed = [":installer"],
)

go_library(
    name = "commands",
    srcs = [
        "apm.go",
        "bootstrapper.go",
        "command.go",
        "command_mock.go",
        "status.go",
        "umask_nix.go",
        "umask_windows.go",
    ],
    embedsrcs = ["status.tmpl"],
    importpath = "github.com/DataDog/datadog-agent/pkg/fleet/installer/commands",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/fleet/installer",
        "//pkg/fleet/installer/bootstrap",
        "//pkg/fleet/installer/env",
        "//pkg/fleet/installer/repository",
        "//pkg/fleet/installer/setup",
        "//pkg/fleet/installer/telemetry",
        "//pkg/version",
        "@com_github_fatih_color//:color",
        "@com_github_spf13_cobra//:cobra",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
)

go_test(
    name = "commands_test",
    srcs = ["command_test.go"],
    embed = [":commands"],
    deps = [
        "//pkg/fleet/installer/env",
        "//pkg/fleet/installer/exec",
        "//pkg/fleet/installer/repository",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_stretchr_testify//assert",
    ],
)
