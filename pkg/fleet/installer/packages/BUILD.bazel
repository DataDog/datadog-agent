load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = [
        "apm_inject.go",
        "apm_inject_windows.go",
        "datadog_agent.go",
        "datadog_agent_windows.go",
        "datadog_installer.go",
        "datadog_installer_windows.go",
        "docker.go",
        "file.go",
        "systemd.go",
        "systemd_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/fleet/installer/service",
    visibility = ["//visibility:public"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:android": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:darwin": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:freebsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:illumos": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:ios": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:js": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:netbsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:openbsd": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:plan9": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "@rules_go//go/platform:solaris": [
            "//pkg/config/setup",
            "//pkg/util/installinfo",
            "//pkg/util/log",
            "@in_gopkg_datadog_dd_trace_go_v1//ddtrace/tracer",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "service_test",
    srcs = [
        "apm_inject_test.go",
        "docker_test.go",
        "file_test.go",
    ],
    embed = [":service"],
    deps = select({
        "@rules_go//go/platform:aix": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:darwin": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:dragonfly": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:freebsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:illumos": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:ios": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:js": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:netbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:openbsd": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:plan9": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:solaris": [
            "@com_github_stretchr_testify//assert",
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)

go_library(
    name = "packages",
    srcs = [
        "apm_inject_linux.go",
        "apm_library_dotnet_windows.go",
        "datadog_agent_linux.go",
        "datadog_agent_windows.go",
        "datadog_installer_linux.go",
        "packages.go",
        "packages_darwin.go",
        "packages_linux.go",
        "packages_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/fleet/installer/packages",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/fleet/installer/env",
        "//pkg/fleet/installer/exec",
        "//pkg/fleet/installer/repository",
        "//pkg/fleet/installer/telemetry",
    ] + select({
        "@rules_go//go/platform:android": [
            "//pkg/fleet/installer/installinfo",
            "//pkg/fleet/installer/packages/apminject",
            "//pkg/fleet/installer/packages/embedded",
            "//pkg/fleet/installer/packages/file",
            "//pkg/fleet/installer/packages/integrations",
            "//pkg/fleet/installer/packages/packagemanager",
            "//pkg/fleet/installer/packages/selinux",
            "//pkg/fleet/installer/packages/service",
            "//pkg/fleet/installer/packages/service/systemd",
            "//pkg/fleet/installer/packages/service/sysvinit",
            "//pkg/fleet/installer/packages/service/upstart",
            "//pkg/fleet/installer/packages/user",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:linux": [
            "//pkg/fleet/installer/installinfo",
            "//pkg/fleet/installer/packages/apminject",
            "//pkg/fleet/installer/packages/embedded",
            "//pkg/fleet/installer/packages/file",
            "//pkg/fleet/installer/packages/integrations",
            "//pkg/fleet/installer/packages/packagemanager",
            "//pkg/fleet/installer/packages/selinux",
            "//pkg/fleet/installer/packages/service",
            "//pkg/fleet/installer/packages/service/systemd",
            "//pkg/fleet/installer/packages/service/sysvinit",
            "//pkg/fleet/installer/packages/service/upstart",
            "//pkg/fleet/installer/packages/user",
            "//pkg/util/log",
        ],
        "@rules_go//go/platform:windows": [
            "//pkg/fleet/installer/msi",
            "//pkg/fleet/installer/packages/exec",
            "//pkg/fleet/installer/paths",
            "//pkg/util/log",
            "//pkg/util/winutil",
            "@org_golang_x_sys//windows",
            "@org_golang_x_sys//windows/registry",
            "@org_golang_x_sys//windows/svc",
        ],
        "//conditions:default": [],
    }),
)
