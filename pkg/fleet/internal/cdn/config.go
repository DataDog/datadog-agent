// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2016-present Datadog, Inc.

package cdn

import (
	"bytes"

	"gopkg.in/yaml.v2"
)

const (
	layerKeys           = "__fleet_layers"
	doNotEditDisclaimer = `# This configuration was generated by Datadog's Fleet Automation. DO NOT EDIT.`
)

// config is a configuration for the package.
type config map[interface{}]interface{}

// layer is a config layer that can be merged with other layers into a config.
type layer struct {
	ID      string
	Content map[interface{}]interface{}
}

// newConfig creates a new config from a list of layers.
func newConfig(layers ...layer) (config, error) {
	config := make(map[interface{}]interface{})
	var layerIDs []string
	for _, l := range layers {
		merged, err := merge(config, l.Content)
		if err != nil {
			return nil, err
		}
		config = merged.(map[interface{}]interface{})
		layerIDs = append(layerIDs, l.ID)
	}
	config[layerKeys] = layerIDs
	return config, nil
}

// Marshal marshals the config as YAML.
func (c *config) Marshal() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString(doNotEditDisclaimer)
	b.WriteString("\n")
	rawConfig, err := yaml.Marshal(c)
	if err != nil {
		return nil, err
	}
	b.Write(rawConfig)
	return b.Bytes(), nil
}
