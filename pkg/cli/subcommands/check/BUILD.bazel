load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "check",
    srcs = [
        "command.go",
        "command_notwindows.go",
        "command_windows.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/cli/subcommands/check",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/agent/common",
        "//cmd/agent/common/path",
        "//comp/agent/jmxlogger",
        "//comp/agent/jmxlogger/jmxloggerimpl",
        "//comp/aggregator/demultiplexer",
        "//comp/aggregator/demultiplexer/demultiplexerimpl",
        "//comp/api/api",
        "//comp/api/api/apiimpl",
        "//comp/api/authtoken/createandfetchimpl",
        "//comp/collector/collector",
        "//comp/core",
        "//comp/core/autodiscovery",
        "//comp/core/autodiscovery/autodiscoveryimpl",
        "//comp/core/autodiscovery/integration",
        "//comp/core/config",
        "//comp/core/flare",
        "//comp/core/gui",
        "//comp/core/log/logimpl",
        "//comp/core/secrets",
        "//comp/core/settings",
        "//comp/core/settings/settingsimpl",
        "//comp/core/status",
        "//comp/core/status/statusimpl",
        "//comp/core/sysprobeconfig/sysprobeconfigimpl",
        "//comp/core/tagger",
        "//comp/core/tagger/taggerimpl",
        "//comp/core/workloadmeta",
        "//comp/core/workloadmeta/collectors",
        "//comp/core/workloadmeta/defaults",
        "//comp/dogstatsd/pidmap",
        "//comp/dogstatsd/replay",
        "//comp/dogstatsd/server",
        "//comp/dogstatsd/serverDebug",
        "//comp/forwarder",
        "//comp/forwarder/defaultforwarder",
        "//comp/forwarder/eventplatform/eventplatformimpl",
        "//comp/forwarder/eventplatformreceiver/eventplatformreceiverimpl",
        "//comp/forwarder/orchestrator/orchestratorimpl",
        "//comp/logs/agent",
        "//comp/metadata/host",
        "//comp/metadata/inventoryagent",
        "//comp/metadata/inventorychecks",
        "//comp/metadata/inventorychecks/inventorychecksimpl",
        "//comp/metadata/inventoryhost",
        "//comp/metadata/packagesigning",
        "//comp/remote-config/rcservice",
        "//comp/remote-config/rcservicemrf",
        "//comp/serializer/compression/compressionimpl",
        "//pkg/aggregator",
        "//pkg/cli/standalone",
        "//pkg/collector",
        "//pkg/collector/check",
        "//pkg/collector/check/stats",
        "//pkg/collector/python",
        "//pkg/commonchecks",
        "//pkg/config",
        "//pkg/config/model",
        "//pkg/serializer",
        "//pkg/status/collector",
        "//pkg/util/fxutil",
        "//pkg/util/optional",
        "//pkg/util/scrubber",
        "@com_github_fatih_color//:color",
        "@com_github_spf13_cobra//:cobra",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@org_uber_go_fx//:fx",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//comp/checks/windowseventlog",
            "//comp/checks/windowseventlog/windowseventlogimpl",
            "//comp/checks/winregistry",
            "//comp/checks/winregistry/impl",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "check_test",
    srcs = ["command_test.go"],
    embed = [":check"],
    deps = [
        "//comp/core",
        "//comp/core/secrets",
        "//pkg/util/fxutil",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_stretchr_testify//require",
    ],
)
