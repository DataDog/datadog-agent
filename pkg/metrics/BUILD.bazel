load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "metrics",
    srcs = [
        "check_metrics.go",
        "context_metrics.go",
        "context_metrics_flusher.go",
        "count.go",
        "counter.go",
        "gauge.go",
        "histogram.go",
        "histogram_bucket.go",
        "historate.go",
        "iterable_metrics.go",
        "iterable_series.go",
        "iterable_skeches.go",
        "metric.go",
        "metric_sample.go",
        "metric_sample_pool.go",
        "metric_with_timestamp.go",
        "metricsource.go",
        "monotonic_count.go",
        "rate.go",
        "series.go",
        "set.go",
        "sketch_series.go",
        "test_helper.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/aggregator/ckey",
        "//pkg/config/model",
        "//pkg/tagger/types",
        "//pkg/tagset",
        "//pkg/telemetry",
        "//pkg/util/buf",
        "//pkg/util/log",
        "@com_github_datadog_opentelemetry_mapping_go_pkg_quantile//:quantile",
        "@com_github_stretchr_testify//assert",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "metrics_test",
    srcs = [
        "check_metrics_test.go",
        "context_metrics_flusher_test.go",
        "context_metrics_test.go",
        "count_test.go",
        "counter_test.go",
        "gauge_test.go",
        "histogram_test.go",
        "historate_test.go",
        "iterable_series_test.go",
        "metric_sample_test.go",
        "metric_test.go",
        "metric_with_timestamp_test.go",
        "monotonic_count_test.go",
        "rate_test.go",
        "set_test.go",
        "sketch_series_test.go",
        "test_helper_test.go",
    ],
    embed = [":metrics"],
    deps = [
        "//pkg/aggregator/ckey",
        "//pkg/config/model",
        "//pkg/tagset",
        "@com_github_datadog_opentelemetry_mapping_go_pkg_quantile//:quantile",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)
