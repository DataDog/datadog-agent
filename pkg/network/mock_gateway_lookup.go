// Code generated by MockGen. DO NOT EDIT.
// Source: gateway_lookup.go

// Package network is a generated GoMock package.
package network

import (
	reflect "reflect"

	util "github.com/DataDog/datadog-agent/pkg/process/util"
	gomock "github.com/golang/mock/gomock"
)

// MockGatewayLookup is a mock of GatewayLookup interface.
type MockGatewayLookup struct {
	ctrl     *gomock.Controller
	recorder *MockGatewayLookupMockRecorder
}

// MockGatewayLookupMockRecorder is the mock recorder for MockGatewayLookup.
type MockGatewayLookupMockRecorder struct {
	mock *MockGatewayLookup
}

// NewMockGatewayLookup creates a new mock instance.
func NewMockGatewayLookup(ctrl *gomock.Controller) *MockGatewayLookup {
	mock := &MockGatewayLookup{ctrl: ctrl}
	mock.recorder = &MockGatewayLookupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGatewayLookup) EXPECT() *MockGatewayLookupMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockGatewayLookup) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockGatewayLookupMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockGatewayLookup)(nil).Close))
}

// Lookup mocks base method.
func (m *MockGatewayLookup) Lookup(cs *ConnectionStats) *Via {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Lookup", cs)
	ret0, _ := ret[0].(*Via)
	return ret0
}

// Lookup indicates an expected call of Lookup.
func (mr *MockGatewayLookupMockRecorder) Lookup(cs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lookup", reflect.TypeOf((*MockGatewayLookup)(nil).Lookup), cs)
}

// LookupWithIPs mocks base method.
func (m *MockGatewayLookup) LookupWithIPs(source, dest util.Address, netns uint32) *Via {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupWithIPs", source, dest, netns)
	ret0, _ := ret[0].(*Via)
	return ret0
}

// LookupWithIPs indicates an expected call of LookupWithIPs.
func (mr *MockGatewayLookupMockRecorder) LookupWithIPs(source, dest, netns interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupWithIPs", reflect.TypeOf((*MockGatewayLookup)(nil).LookupWithIPs), source, dest, netns)
}
