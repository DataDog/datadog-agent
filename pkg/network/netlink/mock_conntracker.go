// Code generated by MockGen. DO NOT EDIT.
// Source: conntracker.go

// Package netlink is a generated GoMock package.
package netlink

import (
	network "github.com/DataDog/datadog-agent/pkg/network"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConntracker is a mock of Conntracker interface
type MockConntracker struct {
	ctrl     *gomock.Controller
	recorder *MockConntrackerMockRecorder
}

// MockConntrackerMockRecorder is the mock recorder for MockConntracker
type MockConntrackerMockRecorder struct {
	mock *MockConntracker
}

// NewMockConntracker creates a new mock instance
func NewMockConntracker(ctrl *gomock.Controller) *MockConntracker {
	mock := &MockConntracker{ctrl: ctrl}
	mock.recorder = &MockConntrackerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConntracker) EXPECT() *MockConntrackerMockRecorder {
	return m.recorder
}

// GetTranslationForConn mocks base method
func (m *MockConntracker) GetTranslationForConn(arg0 network.ConnectionStats) *network.IPTranslation {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslationForConn", arg0)
	ret0, _ := ret[0].(*network.IPTranslation)
	return ret0
}

// GetTranslationForConn indicates an expected call of GetTranslationForConn
func (mr *MockConntrackerMockRecorder) GetTranslationForConn(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslationForConn", reflect.TypeOf((*MockConntracker)(nil).GetTranslationForConn), arg0)
}

// DeleteTranslation mocks base method
func (m *MockConntracker) DeleteTranslation(arg0 network.ConnectionStats) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteTranslation", arg0)
}

// DeleteTranslation indicates an expected call of DeleteTranslation
func (mr *MockConntrackerMockRecorder) DeleteTranslation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTranslation", reflect.TypeOf((*MockConntracker)(nil).DeleteTranslation), arg0)
}

// GetStats mocks base method
func (m *MockConntracker) GetStats() map[string]int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats")
	ret0, _ := ret[0].(map[string]int64)
	return ret0
}

// GetStats indicates an expected call of GetStats
func (mr *MockConntrackerMockRecorder) GetStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockConntracker)(nil).GetStats))
}

// Close mocks base method
func (m *MockConntracker) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close
func (mr *MockConntrackerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockConntracker)(nil).Close))
}
