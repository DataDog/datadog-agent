# Tests multiple programs queued for compilation. Only one should be processed
# at a time (currentlyCompiling), while others remain queued.
- !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/app1}
      probes:
        - {type: LOG_PROBE, id: probe1, where: {methodName: main}, captureSnapshot: true}
    - process_id: {pid: 1002}
      executable: {path: /usr/bin/app2}
      probes:
        - {type: LOG_PROBE, id: probe2, where: {methodName: main}, captureSnapshot: true}
    - process_id: {pid: 1003}
      executable: {path: /usr/bin/app3}
      probes:
        - {type: LOG_PROBE, id: probe3, where: {methodName: main}, captureSnapshot: true}
- !processes-updated
  updated:
    - process_id: {pid: 1002}
      executable: {path: /usr/bin/app2}
      probes:
        - {type: LOG_PROBE, id: probe2, version: 2, where: {methodName: main}, captureSnapshot: true}
- !loaded {program_id: 1}
- !attached {program_id: 1, process_id: 1001} 
- !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/app3}
      probes:
        - {type: LOG_PROBE, id: probe4, where: {methodName: main}, captureSnapshot: true}
- !detached {program_id: 1, process_id: 1001}
- !loaded {program_id: 3}
- !attached {program_id: 3, process_id: 1003}
- !unloaded {program_id: 1}
---
event: !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/app1}
      probes:
        - {type: LOG_PROBE, id: probe1, where: {methodName: main}, captureSnapshot: true}
    - process_id: {pid: 1002}
      executable: {path: /usr/bin/app2}
      probes:
        - {type: LOG_PROBE, id: probe2, where: {methodName: main}, captureSnapshot: true}
    - process_id: {pid: 1003}
      executable: {path: /usr/bin/app3}
      probes:
        - {type: LOG_PROBE, id: probe3, where: {methodName: main}, captureSnapshot: true}
effects:
  - !spawn-bpf-loading {executable: /usr/bin/app1@0.0m0.0, probes: [probe1], process_id: 1001, program_id: 1}
state:
  currently_loading: <nil> -> 1
  queued_programs: '[] -> [2 3]'
  processes:
    1001: <nil> -> WaitingForProgram (prog 1)
    1002: <nil> -> WaitingForProgram (prog 2)
    1003: <nil> -> WaitingForProgram (prog 3)
  programs:
    1: <nil> -> Loading (proc 1001)
    2: <nil> -> Queued (proc 1002)
    3: <nil> -> Queued (proc 1003)
---
event: !processes-updated
  updated:
    - process_id: {pid: 1002}
      executable: {path: /usr/bin/app2}
      probes:
        - {type: LOG_PROBE, id: probe2, version: 2, where: {methodName: main}, captureSnapshot: true}
state:
  currently_loading: "1"
  queued_programs: '[2 3] -> [3 4]'
  processes:
    1001: WaitingForProgram (prog 1)
    1002: WaitingForProgram (prog 2) -> WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3)
  programs:
    1: Loading (proc 1001)
    2: Queued (proc 1002) -> <nil>
    3: Queued (proc 1003)
    4: <nil> -> Queued (proc 1002)
---
event: !loaded {program_id: 1}
effects:
  - !attach-to-process {executable: /usr/bin/app1@0.0m0.0, process_id: 1001, program_id: 1}
  - !spawn-bpf-loading {executable: /usr/bin/app3@0.0m0.0, probes: [probe3], process_id: 1003, program_id: 3}
state:
  currently_loading: 1 -> 3
  queued_programs: '[3 4] -> [4]'
  processes:
    1001: WaitingForProgram (prog 1) -> Attaching (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3)
  programs:
    1: Loading (proc 1001) -> Loaded (proc 1001)
    3: Queued (proc 1003) -> Loading (proc 1003)
    4: Queued (proc 1002)
---
event: !attached {program_id: 1, process_id: 1001}
state:
  currently_loading: "3"
  queued_programs: '[4]'
  processes:
    1001: Attaching (prog 1) -> Attached (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3)
  programs:
    1: Loaded (proc 1001)
    3: Loading (proc 1003)
    4: Queued (proc 1002)
---
event: !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/app3}
      probes:
        - {type: LOG_PROBE, id: probe4, where: {methodName: main}, captureSnapshot: true}
effects:
  - !detach-from-process {process_id: 1001, program_id: 1}
state:
  currently_loading: "3"
  queued_programs: '[4]'
  processes:
    1001: Attached (prog 1) -> Detaching (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3)
  programs:
    1: Loaded (proc 1001) -> Draining (proc 1001)
    3: Loading (proc 1003)
    4: Queued (proc 1002)
---
event: !detached {program_id: 1, process_id: 1001}
effects:
  - !unload-program {program_id: 1}
state:
  currently_loading: "3"
  queued_programs: '[4]'
  processes:
    1001: Detaching (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3)
  programs:
    1: Draining (proc 1001) -> Unloading (proc 1001)
    3: Loading (proc 1003)
    4: Queued (proc 1002)
---
event: !loaded {program_id: 3}
effects:
  - !attach-to-process {executable: /usr/bin/app3@0.0m0.0, process_id: 1003, program_id: 3}
  - !spawn-bpf-loading {executable: /usr/bin/app2@0.0m0.0, probes: [probe2], process_id: 1002, program_id: 4}
state:
  currently_loading: 3 -> 4
  queued_programs: '[4] -> []'
  processes:
    1001: Detaching (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: WaitingForProgram (prog 3) -> Attaching (prog 3)
  programs:
    1: Unloading (proc 1001)
    3: Loading (proc 1003) -> Loaded (proc 1003)
    4: Queued (proc 1002) -> Loading (proc 1002)
---
event: !attached {program_id: 3, process_id: 1003}
state:
  currently_loading: "4"
  queued_programs: '[]'
  processes:
    1001: Detaching (prog 1)
    1002: WaitingForProgram (prog 4)
    1003: Attaching (prog 3) -> Attached (prog 3)
  programs:
    1: Unloading (proc 1001)
    3: Loaded (proc 1003)
    4: Loading (proc 1002)
---
event: !unloaded {program_id: 1}
state:
  currently_loading: "4"
  queued_programs: '[] -> [5]'
  processes:
    1001: Detaching (prog 1) -> WaitingForProgram (prog 5)
    1002: WaitingForProgram (prog 4)
    1003: Attached (prog 3)
  programs:
    1: Unloading (proc 1001) -> <nil>
    3: Loaded (proc 1003)
    4: Loading (proc 1002)
    5: <nil> -> Queued (proc 1001)
