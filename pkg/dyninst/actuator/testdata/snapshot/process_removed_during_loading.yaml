# Tests process removal while program is loading. The program should be marked
# as aborted. Since loading doesn't have a completion event in our test framework,
# we'll test the removal during loading state.
- !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/test}
      probes:
        - {type: LOG_PROBE, id: probe1, where: {methodName: main}, captureSnapshot: true}
- !processes-updated {removed: [1001]} 
- !loading-failed {program_id: 1, process_id: 1001, error: "eBPF loading failed"}
---
event: !processes-updated
  updated:
    - process_id: {pid: 1001}
      executable: {path: /usr/bin/test}
      probes:
        - {type: LOG_PROBE, id: probe1, where: {methodName: main}, captureSnapshot: true}
effects:
  - !spawn-bpf-loading {executable: /usr/bin/test@0.0m0.0, probes: [probe1], process_id: 1001, program_id: 1}
state:
  currently_loading: <nil> -> 1
  queued_programs: '[]'
  processes:
    1001: <nil> -> WaitingForProgram (prog 1)
  programs:
    1: <nil> -> Loading (proc 1001)
---
event: !processes-updated {removed: [1001]}
state:
  currently_loading: "1"
  queued_programs: '[]'
  processes:
    1001: WaitingForProgram (prog 1)
  programs:
    1: Loading (proc 1001) -> LoadingAborted (proc 1001)
---
event: !loading-failed {program_id: 1, process_id: 1001, error: "eBPF loading failed"}
state:
  currently_loading: 1 -> <nil>
  queued_programs: '[]'
  processes:
    1001: WaitingForProgram (prog 1) -> <nil>
  programs:
    1: LoadingAborted (proc 1001) -> <nil>
