// Code generated by "stringer -type=Opcode -trimprefix=Opcode"; DO NOT EDIT.

package compiler

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpcodeInvalid-0]
	_ = x[OpcodeCall-1]
	_ = x[OpcodeReturn-2]
	_ = x[OpcodeIllegal-3]
	_ = x[OpcodeIncrementOutputOffset-4]
	_ = x[OpcodeExprPrepare-5]
	_ = x[OpcodeExprSave-6]
	_ = x[OpcodeExprDereferenceCfa-7]
	_ = x[OpcodeExprReadRegister-8]
	_ = x[OpcodeExprDereferencePtr-9]
	_ = x[OpcodeProcessPointer-10]
	_ = x[OpcodeProcessSlice-11]
	_ = x[OpcodeProcessArrayDataPrep-12]
	_ = x[OpcodeProcessSliceDataPrep-13]
	_ = x[OpcodeProcessSliceDataRepeat-14]
	_ = x[OpcodeProcessString-15]
	_ = x[OpcodeProcessGoEmptyInterface-16]
	_ = x[OpcodeProcessGoInterface-17]
	_ = x[OpcodeProcessGoHmap-18]
	_ = x[OpcodeProcessGoSwissMap-19]
	_ = x[OpcodeProcessGoSwissMapGroups-20]
	_ = x[OpcodeChasePointers-21]
	_ = x[OpcodePrepareEventRoot-22]
}

const _Opcode_name = "InvalidCallReturnIllegalIncrementOutputOffsetExprPrepareExprSaveExprDereferenceCfaExprReadRegisterExprDereferencePtrProcessPointerProcessSliceProcessArrayDataPrepProcessSliceDataPrepProcessSliceDataRepeatProcessStringProcessGoEmptyInterfaceProcessGoInterfaceProcessGoHmapProcessGoSwissMapProcessGoSwissMapGroupsChasePointersPrepareEventRoot"

var _Opcode_index = [...]uint16{0, 7, 11, 17, 24, 45, 56, 64, 82, 98, 116, 130, 142, 162, 182, 204, 217, 240, 258, 271, 288, 311, 324, 340}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
