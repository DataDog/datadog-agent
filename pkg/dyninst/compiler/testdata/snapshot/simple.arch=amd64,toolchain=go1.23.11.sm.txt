// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0x4a6006.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 40 02 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@4a6006]
	PrepareEventRoot 4e 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a6006.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6050.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 52 02 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@4a6050]
	PrepareEventRoot 4f 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6050.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0x4a64f3.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 7a 03 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@4a64f3]
	PrepareEventRoot 4c 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a64f3.expr[0]]
	Return 
// 0x81: ProcessExpression[Probe[main.inlined]@0x4a63ca.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x97: ProcessEvent[Probe[main.inlined]@4a63ca]
	PrepareEventRoot 4d 00 00 00 09 00 00 00 
	Call 81 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a63ca.expr[0]]
	Return 
// 0xa6: ProcessExpression[Probe[main.inlined]@0x4a5dce.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xb6: ProcessEvent[Probe[main.inlined]@4a5dce]
	PrepareEventRoot 4d 00 00 00 09 00 00 00 
	Call a6 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a5dce.expr[0]]
	Return 
// 0xc5: ProcessExpression[Probe[main.intArg]@0x4a60aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xdb: ProcessEvent[Probe[main.intArg]@4a60aa]
	PrepareEventRoot 44 00 00 00 09 00 00 00 
	Call c5 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a60aa.expr[0]]
	Return 
// 0xea: ProcessExpression[Probe[main.intArrayArg]@0x4a622a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x106: ProcessEvent[Probe[main.intArrayArg]@4a622a]
	PrepareEventRoot 47 00 00 00 19 00 00 00 
	Call ea 00 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a622a.expr[0]]
	Return 
// 0x115: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a63a0.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call c4 02 00 00 // ProcessType[[3]string]
	Return 
// 0x136: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a63a0]
	PrepareEventRoot 4a 00 00 00 31 00 00 00 
	Call 15 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a63a0.expr[0]]
	Return 
// 0x145: ProcessExpression[Probe[main.intSliceArg]@0x4a61aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call ec 02 00 00 // ProcessType[[]int]
	Return 
// 0x16e: ProcessEvent[Probe[main.intSliceArg]@4a61aa]
	PrepareEventRoot 46 00 00 00 19 00 00 00 
	Call 45 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a61aa.expr[0]]
	Return 
// 0x17d: ProcessExpression[Probe[main.mapArg]@0x4a648a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 74 03 00 00 // ProcessType[map[string]int]
	Return 
// 0x198: ProcessEvent[Probe[main.mapArg]@4a648a]
	PrepareEventRoot 4b 00 00 00 09 00 00 00 
	Call 7d 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a648a.expr[0]]
	Return 
// 0x1a7: ProcessExpression[Probe[main.stringArg]@0x4a612a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 80 03 00 00 // ProcessType[string]
	Return 
// 0x1c9: ProcessEvent[Probe[main.stringArg]@4a612a]
	PrepareEventRoot 45 00 00 00 11 00 00 00 
	Call a7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a612a.expr[0]]
	Return 
// 0x1d8: ProcessExpression[Probe[main.stringArrayArg]@0x4a632a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call c4 02 00 00 // ProcessType[[3]string]
	Return 
// 0x1f9: ProcessEvent[Probe[main.stringArrayArg]@4a632a]
	PrepareEventRoot 49 00 00 00 31 00 00 00 
	Call d8 01 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a632a.expr[0]]
	Return 
// 0x208: ProcessExpression[Probe[main.stringSliceArg]@0x4a62aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 06 03 00 00 // ProcessType[[]string]
	Return 
// 0x231: ProcessEvent[Probe[main.stringSliceArg]@4a62aa]
	PrepareEventRoot 48 00 00 00 19 00 00 00 
	Call 08 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a62aa.expr[0]]
	Return 
// 0x240: ProcessType[*****int]
	ProcessPointer 32 00 00 00 
	Return 
// 0x246: ProcessType[****int]
	ProcessPointer 42 00 00 00 
	Return 
// 0x24c: ProcessType[***int]
	ProcessPointer 33 00 00 00 
	Return 
// 0x252: ProcessType[**int]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x258: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x25e: ProcessType[*bucket<string,int>]
	ProcessPointer 29 00 00 00 
	Return 
// 0x264: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 30 00 00 00 
	Return 
// 0x26a: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x270: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x276: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x27c: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x282: ProcessType[*int32]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x288: ProcessType[*int64]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x28e: ProcessType[*main.bigStruct]
	ProcessPointer 40 00 00 00 
	Return 
// 0x294: ProcessType[*runtime.mapextra]
	ProcessPointer 2b 00 00 00 
	Return 
// 0x29a: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x2a0: ProcessType[*uint]
	ProcessPointer 0f 00 00 00 
	Return 
// 0x2a6: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x2ac: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x2b2: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x2b8: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x2be: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x2c4: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 80 03 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x2d4: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call 2c 03 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x2e0: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call 41 03 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x2ec: ProcessType[[]int]
	ProcessSlice 36 00 00 00 08 00 00 00 
	Return 
// 0x2f6: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 80 03 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x306: ProcessType[[]string]
	ProcessSlice 38 00 00 00 10 00 00 00 
	Return 
// 0x310: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 80 03 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x31c: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 8e 02 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x32c: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call f6 02 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 5e 02 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x341: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call f6 02 00 00 // ProcessType[[]key<string>]
	Call 1c 03 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 64 02 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x356: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x358: ProcessType[hash<string,int>]
	ProcessGoHmap 3d 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x366: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 41 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x374: ProcessType[map[string]int]
	ProcessPointer 27 00 00 00 
	Return 
// 0x37a: ProcessType[map[string]main.bigStruct]
	ProcessPointer 2e 00 00 00 
	Return 
// 0x380: ProcessType[string]
	ProcessString 34 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 600
ID: 6 Len: 8 Enqueue: 696
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 702
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 896
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 4 Enqueue: 0
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 1 Enqueue: 0
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 854
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 642
ID: 21 Len: 8 Enqueue: 684
ID: 22 Len: 8 Enqueue: 666
ID: 23 Len: 8 Enqueue: 0
ID: 24 Len: 16 Enqueue: 0
ID: 25 Len: 8 Enqueue: 630
ID: 26 Len: 8 Enqueue: 648
ID: 27 Len: 8 Enqueue: 636
ID: 28 Len: 8 Enqueue: 690
ID: 29 Len: 8 Enqueue: 618
ID: 30 Len: 8 Enqueue: 624
ID: 31 Len: 8 Enqueue: 672
ID: 32 Len: 8 Enqueue: 678
ID: 33 Len: 24 Enqueue: 748
ID: 34 Len: 24 Enqueue: 0
ID: 35 Len: 24 Enqueue: 774
ID: 36 Len: 48 Enqueue: 708
ID: 37 Len: 8 Enqueue: 884
ID: 38 Len: 8 Enqueue: 0
ID: 39 Len: 48 Enqueue: 856
ID: 40 Len: 8 Enqueue: 606
ID: 41 Len: 208 Enqueue: 812
ID: 42 Len: 8 Enqueue: 660
ID: 43 Len: 8 Enqueue: 0
ID: 44 Len: 8 Enqueue: 890
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 48 Enqueue: 870
ID: 47 Len: 8 Enqueue: 612
ID: 48 Len: 208 Enqueue: 833
ID: 49 Len: 8 Enqueue: 576
ID: 50 Len: 8 Enqueue: 582
ID: 51 Len: 8 Enqueue: 594
ID: 52 Len: 2048 Enqueue: 0
ID: 53 Len: 8 Enqueue: 0
ID: 54 Len: 2048 Enqueue: 0
ID: 55 Len: 8 Enqueue: 0
ID: 56 Len: 2048 Enqueue: 784
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 128 Enqueue: 758
ID: 60 Len: 64 Enqueue: 0
ID: 61 Len: 2048 Enqueue: 724
ID: 62 Len: 64 Enqueue: 796
ID: 63 Len: 8 Enqueue: 654
ID: 64 Len: 184 Enqueue: 0
ID: 65 Len: 2048 Enqueue: 736
ID: 66 Len: 8 Enqueue: 588
ID: 67 Len: 128 Enqueue: 0
ID: 68 Len: 9 Enqueue: 0
ID: 69 Len: 17 Enqueue: 0
ID: 70 Len: 25 Enqueue: 0
ID: 71 Len: 25 Enqueue: 0
ID: 72 Len: 25 Enqueue: 0
ID: 73 Len: 49 Enqueue: 0
ID: 74 Len: 49 Enqueue: 0
ID: 75 Len: 9 Enqueue: 0
ID: 76 Len: 9 Enqueue: 0
ID: 77 Len: 9 Enqueue: 0
ID: 78 Len: 9 Enqueue: 0
ID: 79 Len: 9 Enqueue: 0
