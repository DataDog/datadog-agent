// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0x4a6046.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call e2 02 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@4a6046]
	PrepareEventRoot b8 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a6046.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6090.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call f4 02 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@4a6090]
	PrepareEventRoot b9 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6090.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0x4a6553.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 22 05 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@4a6553]
	PrepareEventRoot b0 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a6553.expr[0]]
	Return 
// 0x81: ProcessEvent[Probe[main.bigMapArg]Return@4a65de]
	PrepareEventRoot b1 00 00 00 00 00 00 00 
	Return 
// 0x8b: ProcessExpression[Probe[main.inlined]@0x4a5e0e.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x9b: ProcessEvent[Probe[main.inlined]@4a5e0e]
	PrepareEventRoot b6 00 00 00 09 00 00 00 
	Call 8b 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a5e0e.expr[0]]
	Return 
// 0xaa: ProcessExpression[Probe[main.inlined]@0x4a642a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc0: ProcessEvent[Probe[main.inlined]@4a642a]
	PrepareEventRoot b6 00 00 00 09 00 00 00 
	Call aa 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a642a.expr[0]]
	Return 
// 0xcf: ProcessEvent[Probe[main.inlined]Return@4a646a]
	PrepareEventRoot b7 00 00 00 00 00 00 00 
	Return 
// 0xd9: ProcessExpression[Probe[main.intArg]@0x4a610a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xef: ProcessEvent[Probe[main.intArg]@4a610a]
	PrepareEventRoot a1 00 00 00 09 00 00 00 
	Call d9 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a610a.expr[0]]
	Return 
// 0xfe: ProcessEvent[Probe[main.intArg]Return@4a614a]
	PrepareEventRoot a2 00 00 00 00 00 00 00 
	Return 
// 0x108: ProcessExpression[Probe[main.intArrayArg]@0x4a628a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x124: ProcessEvent[Probe[main.intArrayArg]@4a628a]
	PrepareEventRoot a7 00 00 00 19 00 00 00 
	Call 08 01 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a628a.expr[0]]
	Return 
// 0x133: ProcessEvent[Probe[main.intArrayArg]Return@4a62d6]
	PrepareEventRoot a8 00 00 00 00 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6400.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call c4 03 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a6400]
	PrepareEventRoot ad 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6400.expr[0]]
	Return 
// 0x16d: ProcessExpression[Probe[main.intSliceArg]@0x4a620a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 10 04 00 00 // ProcessType[[]int]
	Return 
// 0x196: ProcessEvent[Probe[main.intSliceArg]@4a620a]
	PrepareEventRoot a5 00 00 00 19 00 00 00 
	Call 6d 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a620a.expr[0]]
	Return 
// 0x1a5: ProcessEvent[Probe[main.intSliceArg]Return@4a624f]
	PrepareEventRoot a6 00 00 00 00 00 00 00 
	Return 
// 0x1af: ProcessExpression[Probe[main.mapArg]@0x4a64ea.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 1c 05 00 00 // ProcessType[map[string]int]
	Return 
// 0x1ca: ProcessEvent[Probe[main.mapArg]@4a64ea]
	PrepareEventRoot ae 00 00 00 09 00 00 00 
	Call af 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a64ea.expr[0]]
	Return 
// 0x1d9: ProcessEvent[Probe[main.mapArg]Return@4a651f]
	PrepareEventRoot af 00 00 00 00 00 00 00 
	Return 
// 0x1e3: ProcessEvent[Probe[main.noArgs]@4a660a]
	PrepareEventRoot b2 00 00 00 00 00 00 00 
	Return 
// 0x1ed: ProcessEvent[Probe[main.noArgs]Return@4a6646]
	PrepareEventRoot b3 00 00 00 00 00 00 00 
	Return 
// 0x1f7: ProcessExpression[Probe[main.stringArg]@0x4a618a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 0a 06 00 00 // ProcessType[string]
	Return 
// 0x219: ProcessEvent[Probe[main.stringArg]@4a618a]
	PrepareEventRoot a3 00 00 00 11 00 00 00 
	Call f7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a618a.expr[0]]
	Return 
// 0x228: ProcessEvent[Probe[main.stringArg]Return@4a61cf]
	PrepareEventRoot a4 00 00 00 00 00 00 00 
	Return 
// 0x232: ProcessExpression[Probe[main.stringArrayArg]@0x4a638a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call c4 03 00 00 // ProcessType[[3]string]
	Return 
// 0x253: ProcessEvent[Probe[main.stringArrayArg]@4a638a]
	PrepareEventRoot ab 00 00 00 31 00 00 00 
	Call 32 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a638a.expr[0]]
	Return 
// 0x262: ProcessEvent[Probe[main.stringArrayArg]Return@4a63d6]
	PrepareEventRoot ac 00 00 00 00 00 00 00 
	Return 
// 0x26c: ProcessExpression[Probe[main.stringSliceArg]@0x4a630a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 2a 04 00 00 // ProcessType[[]string]
	Return 
// 0x295: ProcessEvent[Probe[main.stringSliceArg]@4a630a]
	PrepareEventRoot a9 00 00 00 19 00 00 00 
	Call 6c 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a630a.expr[0]]
	Return 
// 0x2a4: ProcessEvent[Probe[main.stringSliceArg]Return@4a634f]
	PrepareEventRoot aa 00 00 00 00 00 00 00 
	Return 
// 0x2ae: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@4a6676]
	PrepareEventRoot b4 00 00 00 00 00 00 00 
	Return 
// 0x2b8: ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0x4a682e.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 2e 05 00 00 // ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x2d3: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@4a682e]
	PrepareEventRoot b5 00 00 00 09 00 00 00 
	Call b8 02 00 00 // ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0x4a682e.expr[0]]
	Return 
// 0x2e2: ProcessType[*****int]
	ProcessPointer 7e 00 00 00 
	Return 
// 0x2e8: ProcessType[****int]
	ProcessPointer 9f 00 00 00 
	Return 
// 0x2ee: ProcessType[***int]
	ProcessPointer 7f 00 00 00 
	Return 
// 0x2f4: ProcessType[**int]
	ProcessPointer 5d 00 00 00 
	Return 
// 0x2fa: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x300: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x306: ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer 98 00 00 00 
	Return 
// 0x30c: ProcessType[*bucket<string,int>]
	ProcessPointer 6b 00 00 00 
	Return 
// 0x312: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 72 00 00 00 
	Return 
// 0x318: ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 7c 00 00 00 
	Return 
// 0x31e: ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 77 00 00 00 
	Return 
// 0x324: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x32a: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x330: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x336: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x33c: ProcessType[*int32]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x342: ProcessType[*int64]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x348: ProcessType[*main.bigStruct]
	ProcessPointer 90 00 00 00 
	Return 
// 0x34e: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x354: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x35a: ProcessType[*runtime.cgoCallers]
	ProcessPointer 3d 00 00 00 
	Return 
// 0x360: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x366: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x36c: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x372: ProcessType[*runtime.mapextra]
	ProcessPointer 6d 00 00 00 
	Return 
// 0x378: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x37e: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x384: ProcessType[*runtime.traceBuf]
	ProcessPointer 49 00 00 00 
	Return 
// 0x38a: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x390: ProcessType[*uint]
	ProcessPointer 0f 00 00 00 
	Return 
// 0x396: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x39c: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x3a2: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x3a8: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x3ae: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x3b4: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call 84 03 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x3c4: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 0a 06 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x3d4: ProcessType[[]bucket<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 74 04 00 00 // ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x3e0: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call 7f 04 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x3ec: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call 94 04 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x3f8: ProcessType[[]bucket<string,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call a9 04 00 00 // ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x404: ProcessType[[]bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call be 04 00 00 // ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x410: ProcessType[[]int]
	ProcessSlice 86 00 00 00 08 00 00 00 
	Return 
// 0x41a: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 0a 06 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x42a: ProcessType[[]string]
	ProcessSlice 88 00 00 00 10 00 00 00 
	Return 
// 0x434: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 0a 06 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x440: ProcessType[[]uint8]
	ProcessSlice 82 00 00 00 01 00 00 00 
	Return 
// 0x44a: ProcessType[[]uintptr]
	ProcessSlice 84 00 00 00 08 00 00 00 
	Return 
// 0x454: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 48 03 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x464: ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 16 05 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x474: ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 88 00 00 00 
	Call 06 03 00 00 // ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x47f: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 1a 04 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 0c 03 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x494: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 1a 04 00 00 // ProcessType[[]key<string>]
	Call 54 04 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 12 03 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x4a9: ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 08 00 00 00 
	Call 1a 04 00 00 // ProcessType[[]key<string>]
	Call 64 04 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 18 03 00 00 // ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x4be: ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call 64 04 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 1e 03 00 00 // ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x4ce: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x4d0: ProcessType[hash<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9e 00 00 00 90 00 00 00 08 09 10 18 
	Return 
// 0x4de: ProcessType[hash<string,int>]
	ProcessGoHmap 8d 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x4ec: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 91 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x4fa: ProcessType[hash<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9a 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x508: ProcessType[hash<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 99 00 00 00 58 00 00 00 08 09 10 18 
	Return 
// 0x516: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 96 00 00 00 
	Return 
// 0x51c: ProcessType[map[string]int]
	ProcessPointer 69 00 00 00 
	Return 
// 0x522: ProcessType[map[string]main.bigStruct]
	ProcessPointer 70 00 00 00 
	Return 
// 0x528: ProcessType[map[string]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 7a 00 00 00 
	Return 
// 0x52e: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 75 00 00 00 
	Return 
// 0x534: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call 54 03 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call 4e 03 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call 6c 03 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b8 00 00 00 
	Call 40 04 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call fa 02 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call 78 03 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call 4a 04 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call 7e 03 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call 60 03 00 00 // ProcessType[*runtime.coro]
	Return 
// 0x58f: ProcessType[runtime.m]
	Call 66 03 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 50 00 00 00 
	Call 66 03 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call 66 03 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call 0a 06 00 00 // ProcessType[string]
	IncrementOutputOffset 40 00 00 00 
	Call 5a 03 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call 6c 03 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 28 01 00 00 
	Call ef 05 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 38 00 00 00 
	Call 4a 04 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call 6c 03 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call fa 05 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x5ef: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call 4a 04 00 00 // ProcessType[[]uintptr]
	Return 
// 0x5fa: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call b4 03 00 00 // ProcessType[[2]*runtime.traceBuf]
	Call 6c 03 00 00 // ProcessType[*runtime.m]
	Return 
// 0x60a: ProcessType[string]
	ProcessString 80 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 768
ID: 6 Len: 8 Enqueue: 936
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 942
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 1546
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 4 Enqueue: 0
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 1 Enqueue: 0
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 1230
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 828
ID: 21 Len: 8 Enqueue: 924
ID: 22 Len: 432 Enqueue: 1332
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 852
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 846
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 876
ID: 29 Len: 1760 Enqueue: 1423
ID: 30 Len: 56 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 1088
ID: 39 Len: 8 Enqueue: 762
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 888
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1098
ID: 44 Len: 8 Enqueue: 894
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 864
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 32 Enqueue: 0
ID: 50 Len: 32 Enqueue: 0
ID: 51 Len: 12 Enqueue: 0
ID: 52 Len: 16 Enqueue: 0
ID: 53 Len: 8 Enqueue: 870
ID: 54 Len: 40 Enqueue: 0
ID: 55 Len: 8 Enqueue: 0
ID: 56 Len: 48 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 4 Enqueue: 0
ID: 60 Len: 8 Enqueue: 858
ID: 61 Len: 8 Enqueue: 0
ID: 62 Len: 8 Enqueue: 0
ID: 63 Len: 256 Enqueue: 0
ID: 64 Len: 64 Enqueue: 1519
ID: 65 Len: 8 Enqueue: 0
ID: 66 Len: 0 Enqueue: 0
ID: 67 Len: 8 Enqueue: 0
ID: 68 Len: 1 Enqueue: 0
ID: 69 Len: 32 Enqueue: 1530
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 16 Enqueue: 948
ID: 72 Len: 8 Enqueue: 900
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 48 Enqueue: 0
ID: 75 Len: 0 Enqueue: 0
ID: 76 Len: 392 Enqueue: 0
ID: 77 Len: 384 Enqueue: 0
ID: 78 Len: 192 Enqueue: 0
ID: 79 Len: 24 Enqueue: 0
ID: 80 Len: 0 Enqueue: 0
ID: 81 Len: 8 Enqueue: 0
ID: 82 Len: 304 Enqueue: 0
ID: 83 Len: 256 Enqueue: 0
ID: 84 Len: 32 Enqueue: 0
ID: 85 Len: 160 Enqueue: 0
ID: 86 Len: 16 Enqueue: 0
ID: 87 Len: 8 Enqueue: 0
ID: 88 Len: 8 Enqueue: 906
ID: 89 Len: 8 Enqueue: 0
ID: 90 Len: 16 Enqueue: 0
ID: 91 Len: 8 Enqueue: 816
ID: 92 Len: 8 Enqueue: 834
ID: 93 Len: 8 Enqueue: 822
ID: 94 Len: 8 Enqueue: 930
ID: 95 Len: 8 Enqueue: 804
ID: 96 Len: 8 Enqueue: 810
ID: 97 Len: 8 Enqueue: 912
ID: 98 Len: 8 Enqueue: 918
ID: 99 Len: 24 Enqueue: 1040
ID: 100 Len: 24 Enqueue: 0
ID: 101 Len: 24 Enqueue: 1066
ID: 102 Len: 48 Enqueue: 964
ID: 103 Len: 8 Enqueue: 1308
ID: 104 Len: 8 Enqueue: 0
ID: 105 Len: 48 Enqueue: 1246
ID: 106 Len: 8 Enqueue: 780
ID: 107 Len: 208 Enqueue: 1151
ID: 108 Len: 8 Enqueue: 882
ID: 109 Len: 8 Enqueue: 0
ID: 110 Len: 8 Enqueue: 1314
ID: 111 Len: 8 Enqueue: 0
ID: 112 Len: 48 Enqueue: 1260
ID: 113 Len: 8 Enqueue: 786
ID: 114 Len: 208 Enqueue: 1172
ID: 115 Len: 8 Enqueue: 1326
ID: 116 Len: 8 Enqueue: 0
ID: 117 Len: 48 Enqueue: 1288
ID: 118 Len: 8 Enqueue: 798
ID: 119 Len: 88 Enqueue: 1214
ID: 120 Len: 8 Enqueue: 1320
ID: 121 Len: 8 Enqueue: 0
ID: 122 Len: 48 Enqueue: 1274
ID: 123 Len: 8 Enqueue: 792
ID: 124 Len: 208 Enqueue: 1193
ID: 125 Len: 8 Enqueue: 738
ID: 126 Len: 8 Enqueue: 744
ID: 127 Len: 8 Enqueue: 756
ID: 128 Len: 1 Enqueue: 0
ID: 129 Len: 8 Enqueue: 0
ID: 130 Len: 1 Enqueue: 0
ID: 131 Len: 8 Enqueue: 0
ID: 132 Len: 8 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 8 Enqueue: 0
ID: 136 Len: 16 Enqueue: 1076
ID: 137 Len: 8 Enqueue: 0
ID: 138 Len: 8 Enqueue: 0
ID: 139 Len: 128 Enqueue: 1050
ID: 140 Len: 64 Enqueue: 0
ID: 141 Len: 208 Enqueue: 992
ID: 142 Len: 64 Enqueue: 1108
ID: 143 Len: 8 Enqueue: 840
ID: 144 Len: 184 Enqueue: 0
ID: 145 Len: 208 Enqueue: 1004
ID: 146 Len: 8 Enqueue: 0
ID: 147 Len: 64 Enqueue: 1124
ID: 148 Len: 8 Enqueue: 1302
ID: 149 Len: 8 Enqueue: 0
ID: 150 Len: 48 Enqueue: 1232
ID: 151 Len: 8 Enqueue: 774
ID: 152 Len: 144 Enqueue: 1140
ID: 153 Len: 88 Enqueue: 1028
ID: 154 Len: 208 Enqueue: 1016
ID: 155 Len: 64 Enqueue: 0
ID: 156 Len: 64 Enqueue: 0
ID: 157 Len: 8 Enqueue: 0
ID: 158 Len: 144 Enqueue: 980
ID: 159 Len: 8 Enqueue: 750
ID: 160 Len: 128 Enqueue: 0
ID: 161 Len: 9 Enqueue: 0
ID: 162 Len: 0 Enqueue: 0
ID: 163 Len: 17 Enqueue: 0
ID: 164 Len: 0 Enqueue: 0
ID: 165 Len: 25 Enqueue: 0
ID: 166 Len: 0 Enqueue: 0
ID: 167 Len: 25 Enqueue: 0
ID: 168 Len: 0 Enqueue: 0
ID: 169 Len: 25 Enqueue: 0
ID: 170 Len: 0 Enqueue: 0
ID: 171 Len: 49 Enqueue: 0
ID: 172 Len: 0 Enqueue: 0
ID: 173 Len: 49 Enqueue: 0
ID: 174 Len: 9 Enqueue: 0
ID: 175 Len: 0 Enqueue: 0
ID: 176 Len: 9 Enqueue: 0
ID: 177 Len: 0 Enqueue: 0
ID: 178 Len: 0 Enqueue: 0
ID: 179 Len: 0 Enqueue: 0
ID: 180 Len: 0 Enqueue: 0
ID: 181 Len: 9 Enqueue: 0
ID: 182 Len: 9 Enqueue: 0
ID: 183 Len: 0 Enqueue: 0
ID: 184 Len: 9 Enqueue: 0
ID: 185 Len: 9 Enqueue: 0
