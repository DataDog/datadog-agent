// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessType[*****int]
	ProcessPointer 03 00 00 00 
	Return 
// 0x9: ProcessExpression[Probe[main.PointerChainArg]@0x4a6006.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 03 00 00 00 // ProcessType[*****int]
	Return 
// 0x24: ProcessEvent[Probe[main.PointerChainArg]@4a6006]
	PrepareEventRoot 55 00 00 00 09 00 00 00 
	Call 09 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a6006.expr[0]]
	Return 
// 0x33: ProcessType[**int]
	ProcessPointer 06 00 00 00 
	Return 
// 0x39: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6050.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 33 00 00 00 // ProcessType[**int]
	Return 
// 0x54: ProcessEvent[Probe[main.PointerSmallChainArg]@4a6050]
	PrepareEventRoot 56 00 00 00 09 00 00 00 
	Call 39 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6050.expr[0]]
	Return 
// 0x63: ProcessType[map[string]main.bigStruct]
	ProcessPointer 23 00 00 00 
	Return 
// 0x69: ProcessExpression[Probe[main.bigMapArg]@0x4a64f3.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 63 00 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x84: ProcessEvent[Probe[main.bigMapArg]@4a64f3]
	PrepareEventRoot 53 00 00 00 09 00 00 00 
	Call 69 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a64f3.expr[0]]
	Return 
// 0x93: ProcessExpression[Probe[main.inlined]@0x4a63ca.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xa9: ProcessEvent[Probe[main.inlined]@4a63ca]
	PrepareEventRoot 54 00 00 00 09 00 00 00 
	Call 93 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a63ca.expr[0]]
	Return 
// 0xb8: ProcessExpression[Probe[main.inlined]@0x4a5dce.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc8: ProcessEvent[Probe[main.inlined]@4a5dce]
	PrepareEventRoot 54 00 00 00 09 00 00 00 
	Call b8 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a5dce.expr[0]]
	Return 
// 0xd7: ProcessExpression[Probe[main.intArg]@0x4a60aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xed: ProcessEvent[Probe[main.intArg]@4a60aa]
	PrepareEventRoot 4b 00 00 00 09 00 00 00 
	Call d7 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a60aa.expr[0]]
	Return 
// 0xfc: ProcessExpression[Probe[main.intArrayArg]@0x4a622a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x118: ProcessEvent[Probe[main.intArrayArg]@4a622a]
	PrepareEventRoot 4e 00 00 00 19 00 00 00 
	Call fc 00 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a622a.expr[0]]
	Return 
// 0x127: ProcessType[string]
	ProcessString 41 00 00 00 
	Return 
// 0x12d: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 27 01 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a63a0.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 2d 01 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a63a0]
	PrepareEventRoot 51 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a63a0.expr[0]]
	Return 
// 0x16d: ProcessType[[]int]
	ProcessSlice 43 00 00 00 08 00 00 00 
	Return 
// 0x177: ProcessExpression[Probe[main.intSliceArg]@0x4a61aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 6d 01 00 00 // ProcessType[[]int]
	Return 
// 0x1a0: ProcessEvent[Probe[main.intSliceArg]@4a61aa]
	PrepareEventRoot 4d 00 00 00 19 00 00 00 
	Call 77 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a61aa.expr[0]]
	Return 
// 0x1af: ProcessType[map[string]int]
	ProcessPointer 11 00 00 00 
	Return 
// 0x1b5: ProcessExpression[Probe[main.mapArg]@0x4a648a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call af 01 00 00 // ProcessType[map[string]int]
	Return 
// 0x1d0: ProcessEvent[Probe[main.mapArg]@4a648a]
	PrepareEventRoot 52 00 00 00 09 00 00 00 
	Call b5 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a648a.expr[0]]
	Return 
// 0x1df: ProcessExpression[Probe[main.stringArg]@0x4a612a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 27 01 00 00 // ProcessType[string]
	Return 
// 0x201: ProcessEvent[Probe[main.stringArg]@4a612a]
	PrepareEventRoot 4c 00 00 00 11 00 00 00 
	Call df 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a612a.expr[0]]
	Return 
// 0x210: ProcessExpression[Probe[main.stringArrayArg]@0x4a632a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 2d 01 00 00 // ProcessType[[3]string]
	Return 
// 0x231: ProcessEvent[Probe[main.stringArrayArg]@4a632a]
	PrepareEventRoot 50 00 00 00 31 00 00 00 
	Call 10 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a632a.expr[0]]
	Return 
// 0x240: ProcessType[[]string]
	ProcessSlice 45 00 00 00 10 00 00 00 
	Return 
// 0x24a: ProcessExpression[Probe[main.stringSliceArg]@0x4a62aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 40 02 00 00 // ProcessType[[]string]
	Return 
// 0x273: ProcessEvent[Probe[main.stringSliceArg]@4a62aa]
	PrepareEventRoot 4f 00 00 00 19 00 00 00 
	Call 4a 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a62aa.expr[0]]
	Return 
// 0x282: ProcessType[****int]
	ProcessPointer 04 00 00 00 
	Return 
// 0x288: ProcessType[***int]
	ProcessPointer 05 00 00 00 
	Return 
// 0x28e: ProcessType[*int]
	ProcessPointer 01 00 00 00 
	Return 
// 0x294: ProcessType[*uint8]
	ProcessPointer 09 00 00 00 
	Return 
// 0x29a: ProcessType[*string]
	ProcessPointer 07 00 00 00 
	Return 
// 0x2a0: ProcessType[hash<string,int>]
	ProcessGoHmap 47 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x2ae: ProcessType[*runtime.mapextra]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x2b4: ProcessType[*[]*runtime.bmap]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x2ba: ProcessType[*runtime.bmap]
	ProcessPointer 20 00 00 00 
	Return 
// 0x2c0: ProcessType[runtime.mapextra]
	Call b4 02 00 00 // ProcessType[*[]*runtime.bmap]
	IncrementOutputOffset 08 00 00 00 
	Call b4 02 00 00 // ProcessType[*[]*runtime.bmap]
	IncrementOutputOffset 08 00 00 00 
	Call ba 02 00 00 // ProcessType[*runtime.bmap]
	Return 
// 0x2da: ProcessType[[]*runtime.bmap]
	ProcessSlice 48 00 00 00 08 00 00 00 
	Return 
// 0x2e4: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 4a 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x2f2: ProcessType[*main.bigStruct]
	ProcessPointer 28 00 00 00 
	Return 
// 0x2f8: ProcessType[*bool]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x2fe: ProcessType[*uintptr]
	ProcessPointer 19 00 00 00 
	Return 
// 0x304: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x306: ProcessType[*int32]
	ProcessPointer 2e 00 00 00 
	Return 
// 0x30c: ProcessType[*uint32]
	ProcessPointer 13 00 00 00 
	Return 
// 0x312: ProcessType[*float64]
	ProcessPointer 33 00 00 00 
	Return 
// 0x318: ProcessType[*int64]
	ProcessPointer 2f 00 00 00 
	Return 
// 0x31e: ProcessType[*uint64]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x324: ProcessType[*error]
	ProcessPointer 34 00 00 00 
	Return 
// 0x32a: ProcessType[*float32]
	ProcessPointer 32 00 00 00 
	Return 
// 0x330: ProcessType[*uint]
	ProcessPointer 31 00 00 00 
	Return 
// 0x336: ProcessType[*uint16]
	ProcessPointer 12 00 00 00 
	Return 
// 0x33c: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 27 01 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x348: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 27 01 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x358: ProcessType[*bucket<string,int>]
	ProcessPointer 15 00 00 00 
	Return 
// 0x35e: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 48 03 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 58 03 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x373: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call 5e 03 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x37f: ProcessType[[]*runtime.bmap.array]
	ProcessSliceDataPrep 
	Call ba 02 00 00 // ProcessType[*runtime.bmap]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x38b: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call f2 02 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x39b: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 25 00 00 00 
	Return 
// 0x3a1: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 48 03 00 00 // ProcessType[[]key<string>]
	Call 8b 03 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 9b 03 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x3b6: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call a1 03 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 8 Enqueue: 3
ID: 3 Len: 8 Enqueue: 642
ID: 4 Len: 8 Enqueue: 648
ID: 5 Len: 8 Enqueue: 51
ID: 6 Len: 8 Enqueue: 654
ID: 7 Len: 16 Enqueue: 295
ID: 8 Len: 8 Enqueue: 660
ID: 9 Len: 1 Enqueue: 0
ID: 10 Len: 24 Enqueue: 365
ID: 11 Len: 24 Enqueue: 0
ID: 12 Len: 24 Enqueue: 576
ID: 13 Len: 8 Enqueue: 666
ID: 14 Len: 48 Enqueue: 301
ID: 15 Len: 8 Enqueue: 431
ID: 16 Len: 8 Enqueue: 0
ID: 17 Len: 48 Enqueue: 672
ID: 18 Len: 2 Enqueue: 0
ID: 19 Len: 4 Enqueue: 0
ID: 20 Len: 8 Enqueue: 856
ID: 21 Len: 208 Enqueue: 862
ID: 22 Len: 8 Enqueue: 0
ID: 23 Len: 128 Enqueue: 840
ID: 24 Len: 64 Enqueue: 0
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 686
ID: 27 Len: 24 Enqueue: 704
ID: 28 Len: 8 Enqueue: 692
ID: 29 Len: 24 Enqueue: 730
ID: 30 Len: 8 Enqueue: 0
ID: 31 Len: 8 Enqueue: 698
ID: 32 Len: 8 Enqueue: 0
ID: 33 Len: 8 Enqueue: 99
ID: 34 Len: 8 Enqueue: 0
ID: 35 Len: 48 Enqueue: 740
ID: 36 Len: 8 Enqueue: 923
ID: 37 Len: 208 Enqueue: 929
ID: 38 Len: 64 Enqueue: 907
ID: 39 Len: 8 Enqueue: 754
ID: 40 Len: 184 Enqueue: 0
ID: 41 Len: 128 Enqueue: 0
ID: 42 Len: 1 Enqueue: 0
ID: 43 Len: 8 Enqueue: 760
ID: 44 Len: 8 Enqueue: 766
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 0
ID: 48 Len: 1 Enqueue: 0
ID: 49 Len: 8 Enqueue: 0
ID: 50 Len: 4 Enqueue: 0
ID: 51 Len: 8 Enqueue: 0
ID: 52 Len: 16 Enqueue: 772
ID: 53 Len: 8 Enqueue: 0
ID: 54 Len: 8 Enqueue: 774
ID: 55 Len: 8 Enqueue: 780
ID: 56 Len: 8 Enqueue: 0
ID: 57 Len: 16 Enqueue: 0
ID: 58 Len: 8 Enqueue: 786
ID: 59 Len: 8 Enqueue: 792
ID: 60 Len: 8 Enqueue: 798
ID: 61 Len: 8 Enqueue: 804
ID: 62 Len: 8 Enqueue: 810
ID: 63 Len: 8 Enqueue: 816
ID: 64 Len: 8 Enqueue: 822
ID: 65 Len: 2048 Enqueue: 0
ID: 66 Len: 8 Enqueue: 0
ID: 67 Len: 2048 Enqueue: 0
ID: 68 Len: 8 Enqueue: 0
ID: 69 Len: 2048 Enqueue: 828
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 2048 Enqueue: 883
ID: 72 Len: 2048 Enqueue: 895
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 2048 Enqueue: 950
ID: 75 Len: 9 Enqueue: 0
ID: 76 Len: 17 Enqueue: 0
ID: 77 Len: 25 Enqueue: 0
ID: 78 Len: 25 Enqueue: 0
ID: 79 Len: 25 Enqueue: 0
ID: 80 Len: 49 Enqueue: 0
ID: 81 Len: 49 Enqueue: 0
ID: 82 Len: 9 Enqueue: 0
ID: 83 Len: 9 Enqueue: 0
ID: 84 Len: 9 Enqueue: 0
ID: 85 Len: 9 Enqueue: 0
ID: 86 Len: 9 Enqueue: 0
