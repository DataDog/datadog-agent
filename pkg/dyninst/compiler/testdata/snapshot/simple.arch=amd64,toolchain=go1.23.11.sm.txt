// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0x4a6046.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 4a 02 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@4a6046]
	PrepareEventRoot 60 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a6046.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6090.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 5c 02 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@4a6090]
	PrepareEventRoot 61 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6090.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0x4a6553.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call f5 03 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@4a6553]
	PrepareEventRoot 5d 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a6553.expr[0]]
	Return 
// 0x81: ProcessExpression[Probe[main.inlined]@0x4a642a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x97: ProcessEvent[Probe[main.inlined]@4a642a]
	PrepareEventRoot 5f 00 00 00 09 00 00 00 
	Call 81 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a642a.expr[0]]
	Return 
// 0xa6: ProcessExpression[Probe[main.inlined]@0x4a5e0e.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xb6: ProcessEvent[Probe[main.inlined]@4a5e0e]
	PrepareEventRoot 5f 00 00 00 09 00 00 00 
	Call a6 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a5e0e.expr[0]]
	Return 
// 0xc5: ProcessExpression[Probe[main.intArg]@0x4a610a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xdb: ProcessEvent[Probe[main.intArg]@4a610a]
	PrepareEventRoot 55 00 00 00 09 00 00 00 
	Call c5 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a610a.expr[0]]
	Return 
// 0xea: ProcessExpression[Probe[main.intArrayArg]@0x4a628a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x106: ProcessEvent[Probe[main.intArrayArg]@4a628a]
	PrepareEventRoot 58 00 00 00 19 00 00 00 
	Call ea 00 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a628a.expr[0]]
	Return 
// 0x115: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6400.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call da 02 00 00 // ProcessType[[3]string]
	Return 
// 0x136: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a6400]
	PrepareEventRoot 5b 00 00 00 31 00 00 00 
	Call 15 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6400.expr[0]]
	Return 
// 0x145: ProcessExpression[Probe[main.intSliceArg]@0x4a620a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 1a 03 00 00 // ProcessType[[]int]
	Return 
// 0x16e: ProcessEvent[Probe[main.intSliceArg]@4a620a]
	PrepareEventRoot 57 00 00 00 19 00 00 00 
	Call 45 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a620a.expr[0]]
	Return 
// 0x17d: ProcessExpression[Probe[main.mapArg]@0x4a64ea.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call ef 03 00 00 // ProcessType[map[string]int]
	Return 
// 0x198: ProcessEvent[Probe[main.mapArg]@4a64ea]
	PrepareEventRoot 5c 00 00 00 09 00 00 00 
	Call 7d 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a64ea.expr[0]]
	Return 
// 0x1a7: ProcessExpression[Probe[main.stringArg]@0x4a618a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 01 04 00 00 // ProcessType[string]
	Return 
// 0x1c9: ProcessEvent[Probe[main.stringArg]@4a618a]
	PrepareEventRoot 56 00 00 00 11 00 00 00 
	Call a7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a618a.expr[0]]
	Return 
// 0x1d8: ProcessExpression[Probe[main.stringArrayArg]@0x4a638a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call da 02 00 00 // ProcessType[[3]string]
	Return 
// 0x1f9: ProcessEvent[Probe[main.stringArrayArg]@4a638a]
	PrepareEventRoot 5a 00 00 00 31 00 00 00 
	Call d8 01 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a638a.expr[0]]
	Return 
// 0x208: ProcessExpression[Probe[main.stringSliceArg]@0x4a630a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 34 03 00 00 // ProcessType[[]string]
	Return 
// 0x231: ProcessEvent[Probe[main.stringSliceArg]@4a630a]
	PrepareEventRoot 59 00 00 00 19 00 00 00 
	Call 08 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a630a.expr[0]]
	Return 
// 0x240: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@4a6616]
	PrepareEventRoot 5e 00 00 00 00 00 00 00 
	Return 
// 0x24a: ProcessType[*****int]
	ProcessPointer 37 00 00 00 
	Return 
// 0x250: ProcessType[****int]
	ProcessPointer 53 00 00 00 
	Return 
// 0x256: ProcessType[***int]
	ProcessPointer 38 00 00 00 
	Return 
// 0x25c: ProcessType[**int]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x262: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x268: ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer 4d 00 00 00 
	Return 
// 0x26e: ProcessType[*bucket<string,int>]
	ProcessPointer 29 00 00 00 
	Return 
// 0x274: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 30 00 00 00 
	Return 
// 0x27a: ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 35 00 00 00 
	Return 
// 0x280: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x286: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x28c: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x292: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x298: ProcessType[*int32]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x29e: ProcessType[*int64]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x2a4: ProcessType[*main.bigStruct]
	ProcessPointer 45 00 00 00 
	Return 
// 0x2aa: ProcessType[*runtime.mapextra]
	ProcessPointer 2b 00 00 00 
	Return 
// 0x2b0: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x2b6: ProcessType[*uint]
	ProcessPointer 0f 00 00 00 
	Return 
// 0x2bc: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x2c2: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x2c8: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x2ce: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x2d4: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x2da: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 01 04 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x2ea: ProcessType[[]bucket<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 6a 03 00 00 // ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x2f6: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call 75 03 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x302: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call 8a 03 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x30e: ProcessType[[]bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 9f 03 00 00 // ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x31a: ProcessType[[]int]
	ProcessSlice 3b 00 00 00 08 00 00 00 
	Return 
// 0x324: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 01 04 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x334: ProcessType[[]string]
	ProcessSlice 3d 00 00 00 10 00 00 00 
	Return 
// 0x33e: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 01 04 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x34a: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call a4 02 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x35a: ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	ProcessArrayDataPrep 40 00 00 00 
	Call e9 03 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x36a: ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 88 00 00 00 
	Call 68 02 00 00 // ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x375: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 24 03 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 6e 02 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x38a: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 24 03 00 00 // ProcessType[[]key<string>]
	Call 4a 03 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 74 02 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x39f: ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call 5a 03 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 7a 02 00 00 // ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x3af: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x3b1: ProcessType[hash<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 52 00 00 00 90 00 00 00 08 09 10 18 
	Return 
// 0x3bf: ProcessType[hash<string,int>]
	ProcessGoHmap 42 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x3cd: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 46 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x3db: ProcessType[hash<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 4e 00 00 00 58 00 00 00 08 09 10 18 
	Return 
// 0x3e9: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 4b 00 00 00 
	Return 
// 0x3ef: ProcessType[map[string]int]
	ProcessPointer 27 00 00 00 
	Return 
// 0x3f5: ProcessType[map[string]main.bigStruct]
	ProcessPointer 2e 00 00 00 
	Return 
// 0x3fb: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 33 00 00 00 
	Return 
// 0x401: ProcessType[string]
	ProcessString 39 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 610
ID: 6 Len: 8 Enqueue: 718
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 724
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 1025
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 4 Enqueue: 0
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 1 Enqueue: 0
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 943
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 664
ID: 21 Len: 8 Enqueue: 706
ID: 22 Len: 8 Enqueue: 688
ID: 23 Len: 8 Enqueue: 0
ID: 24 Len: 16 Enqueue: 0
ID: 25 Len: 8 Enqueue: 652
ID: 26 Len: 8 Enqueue: 670
ID: 27 Len: 8 Enqueue: 658
ID: 28 Len: 8 Enqueue: 712
ID: 29 Len: 8 Enqueue: 640
ID: 30 Len: 8 Enqueue: 646
ID: 31 Len: 8 Enqueue: 694
ID: 32 Len: 8 Enqueue: 700
ID: 33 Len: 24 Enqueue: 794
ID: 34 Len: 24 Enqueue: 0
ID: 35 Len: 24 Enqueue: 820
ID: 36 Len: 48 Enqueue: 730
ID: 37 Len: 8 Enqueue: 1007
ID: 38 Len: 8 Enqueue: 0
ID: 39 Len: 48 Enqueue: 959
ID: 40 Len: 8 Enqueue: 622
ID: 41 Len: 208 Enqueue: 885
ID: 42 Len: 8 Enqueue: 682
ID: 43 Len: 8 Enqueue: 0
ID: 44 Len: 8 Enqueue: 1013
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 48 Enqueue: 973
ID: 47 Len: 8 Enqueue: 628
ID: 48 Len: 208 Enqueue: 906
ID: 49 Len: 8 Enqueue: 1019
ID: 50 Len: 8 Enqueue: 0
ID: 51 Len: 48 Enqueue: 987
ID: 52 Len: 8 Enqueue: 634
ID: 53 Len: 88 Enqueue: 927
ID: 54 Len: 8 Enqueue: 586
ID: 55 Len: 8 Enqueue: 592
ID: 56 Len: 8 Enqueue: 604
ID: 57 Len: 2048 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 2048 Enqueue: 0
ID: 60 Len: 8 Enqueue: 0
ID: 61 Len: 2048 Enqueue: 830
ID: 62 Len: 8 Enqueue: 0
ID: 63 Len: 8 Enqueue: 0
ID: 64 Len: 128 Enqueue: 804
ID: 65 Len: 64 Enqueue: 0
ID: 66 Len: 2048 Enqueue: 758
ID: 67 Len: 64 Enqueue: 842
ID: 68 Len: 8 Enqueue: 676
ID: 69 Len: 184 Enqueue: 0
ID: 70 Len: 2048 Enqueue: 770
ID: 71 Len: 8 Enqueue: 0
ID: 72 Len: 64 Enqueue: 858
ID: 73 Len: 8 Enqueue: 1001
ID: 74 Len: 8 Enqueue: 0
ID: 75 Len: 48 Enqueue: 945
ID: 76 Len: 8 Enqueue: 616
ID: 77 Len: 144 Enqueue: 874
ID: 78 Len: 2048 Enqueue: 782
ID: 79 Len: 64 Enqueue: 0
ID: 80 Len: 64 Enqueue: 0
ID: 81 Len: 8 Enqueue: 0
ID: 82 Len: 2048 Enqueue: 746
ID: 83 Len: 8 Enqueue: 598
ID: 84 Len: 128 Enqueue: 0
ID: 85 Len: 9 Enqueue: 0
ID: 86 Len: 17 Enqueue: 0
ID: 87 Len: 25 Enqueue: 0
ID: 88 Len: 25 Enqueue: 0
ID: 89 Len: 25 Enqueue: 0
ID: 90 Len: 49 Enqueue: 0
ID: 91 Len: 49 Enqueue: 0
ID: 92 Len: 9 Enqueue: 0
ID: 93 Len: 9 Enqueue: 0
ID: 94 Len: 0 Enqueue: 0
ID: 95 Len: 9 Enqueue: 0
ID: 96 Len: 9 Enqueue: 0
ID: 97 Len: 9 Enqueue: 0
