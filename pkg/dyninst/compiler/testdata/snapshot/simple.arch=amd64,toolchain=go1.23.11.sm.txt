// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0x4a61e6.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 2f 04 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@4a61e6]
	PrepareEventRoot c0 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a61e6.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6230.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 41 04 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@4a6230]
	PrepareEventRoot c1 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4a6230.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0x4a6773.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 7a 06 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@4a6773]
	PrepareEventRoot b2 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a6773.expr[0]]
	Return 
// 0x81: ProcessEvent[Probe[main.bigMapArg]Return@4a67fe]
	PrepareEventRoot b3 00 00 00 00 00 00 00 
	Return 
// 0x8b: ProcessExpression[Probe[main.inlined]@0x4a5fae.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x9b: ProcessEvent[Probe[main.inlined]@4a5fae]
	PrepareEventRoot be 00 00 00 09 00 00 00 
	Call 8b 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a5fae.expr[0]]
	Return 
// 0xaa: ProcessExpression[Probe[main.inlined]@0x4a664a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc0: ProcessEvent[Probe[main.inlined]@4a664a]
	PrepareEventRoot be 00 00 00 09 00 00 00 
	Call aa 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4a664a.expr[0]]
	Return 
// 0xcf: ProcessEvent[Probe[main.inlined]Return@4a668a]
	PrepareEventRoot bf 00 00 00 00 00 00 00 
	Return 
// 0xd9: ProcessExpression[Probe[main.intArg]@0x4a632a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xef: ProcessEvent[Probe[main.intArg]@4a632a]
	PrepareEventRoot a3 00 00 00 09 00 00 00 
	Call d9 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a632a.expr[0]]
	Return 
// 0xfe: ProcessEvent[Probe[main.intArg]Return@4a636a]
	PrepareEventRoot a4 00 00 00 00 00 00 00 
	Return 
// 0x108: ProcessExpression[Probe[main.intArrayArg]@0x4a64aa.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x124: ProcessEvent[Probe[main.intArrayArg]@4a64aa]
	PrepareEventRoot a9 00 00 00 19 00 00 00 
	Call 08 01 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a64aa.expr[0]]
	Return 
// 0x133: ProcessEvent[Probe[main.intArrayArg]Return@4a64f6]
	PrepareEventRoot aa 00 00 00 00 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6620.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 11 05 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a6620]
	PrepareEventRoot af 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a6620.expr[0]]
	Return 
// 0x16d: ProcessExpression[Probe[main.intSliceArg]@0x4a642a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 5d 05 00 00 // ProcessType[[]int]
	Return 
// 0x196: ProcessEvent[Probe[main.intSliceArg]@4a642a]
	PrepareEventRoot a7 00 00 00 19 00 00 00 
	Call 6d 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a642a.expr[0]]
	Return 
// 0x1a5: ProcessEvent[Probe[main.intSliceArg]Return@4a646f]
	PrepareEventRoot a8 00 00 00 00 00 00 00 
	Return 
// 0x1af: ProcessExpression[Probe[main.mapArg]@0x4a670a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 74 06 00 00 // ProcessType[map[string]int]
	Return 
// 0x1ca: ProcessEvent[Probe[main.mapArg]@4a670a]
	PrepareEventRoot b0 00 00 00 09 00 00 00 
	Call af 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a670a.expr[0]]
	Return 
// 0x1d9: ProcessEvent[Probe[main.mapArg]Return@4a673f]
	PrepareEventRoot b1 00 00 00 00 00 00 00 
	Return 
// 0x1e3: ProcessEvent[Probe[main.noArgs]@4a682a]
	PrepareEventRoot b4 00 00 00 00 00 00 00 
	Return 
// 0x1ed: ProcessEvent[Probe[main.noArgs]Return@4a6866]
	PrepareEventRoot b5 00 00 00 00 00 00 00 
	Return 
// 0x1f7: ProcessExpression[Probe[main.stringArg]@0x4a63aa.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 62 07 00 00 // ProcessType[string]
	Return 
// 0x219: ProcessEvent[Probe[main.stringArg]@4a63aa]
	PrepareEventRoot a5 00 00 00 11 00 00 00 
	Call f7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a63aa.expr[0]]
	Return 
// 0x228: ProcessEvent[Probe[main.stringArg]Return@4a63ef]
	PrepareEventRoot a6 00 00 00 00 00 00 00 
	Return 
// 0x232: ProcessExpression[Probe[main.stringArrayArg]@0x4a65aa.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 11 05 00 00 // ProcessType[[3]string]
	Return 
// 0x253: ProcessEvent[Probe[main.stringArrayArg]@4a65aa]
	PrepareEventRoot ad 00 00 00 31 00 00 00 
	Call 32 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a65aa.expr[0]]
	Return 
// 0x262: ProcessEvent[Probe[main.stringArrayArg]Return@4a65f6]
	PrepareEventRoot ae 00 00 00 00 00 00 00 
	Return 
// 0x26c: ProcessExpression[Probe[main.stringSliceArg]@0x4a652a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 77 05 00 00 // ProcessType[[]string]
	Return 
// 0x295: ProcessEvent[Probe[main.stringSliceArg]@4a652a]
	PrepareEventRoot ab 00 00 00 19 00 00 00 
	Call 6c 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a652a.expr[0]]
	Return 
// 0x2a4: ProcessEvent[Probe[main.stringSliceArg]Return@4a656f]
	PrepareEventRoot ac 00 00 00 00 00 00 00 
	Return 
// 0x2ae: ProcessExpression[Probe[main.templateTest]@0x4a6a8e.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 63 06 00 00 // ProcessType[main.User]
	Return 
// 0x2d7: ProcessExpression[Probe[main.templateTest]@0x4a6a8e.expr[1]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 19 00 00 00 08 00 00 00 01 00 00 00 
	Return 
// 0x2ed: ProcessEvent[Probe[main.templateTest]@4a6a8e]
	PrepareEventRoot b8 00 00 00 21 00 00 00 
	Call ae 02 00 00 // ProcessExpression[Probe[main.templateTest]@0x4a6a8e.expr[0]]
	Call d7 02 00 00 // ProcessExpression[Probe[main.templateTest]@0x4a6a8e.expr[1]]
	Return 
// 0x301: ProcessEvent[Probe[main.templateTest]Return@4a6b25]
	PrepareEventRoot b9 00 00 00 00 00 00 00 
	Return 
// 0x30b: ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 63 06 00 00 // ProcessType[main.User]
	Return 
// 0x334: ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[1]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 19 00 00 00 08 00 00 00 01 00 00 00 
	Return 
// 0x34a: ProcessEvent[Probe[main.templateTest2]@4a6b60]
	PrepareEventRoot ba 00 00 00 21 00 00 00 
	Call 0b 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[0]]
	Call 34 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[1]]
	Return 
// 0x35e: ProcessExpression[Probe[main.templateTest2]Return@0x4a6b65.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 01 00 00 00 02 00 00 00 00 00 00 00 
	Return 
// 0x374: ProcessEvent[Probe[main.templateTest2]Return@4a6b65]
	PrepareEventRoot bb 00 00 00 03 00 00 00 
	Call 5e 03 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0x4a6b65.expr[0]]
	Return 
// 0x383: ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 63 06 00 00 // ProcessType[main.User]
	Return 
// 0x3ac: ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[1]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 19 00 00 00 08 00 00 00 01 00 00 00 
	Return 
// 0x3c2: ProcessEvent[Probe[main.templateTest2]@4a6b60]
	PrepareEventRoot bc 00 00 00 21 00 00 00 
	Call 83 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[0]]
	Call ac 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0x4a6b60.expr[1]]
	Return 
// 0x3d6: ProcessExpression[Probe[main.templateTest2]Return@0x4a6b65.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 01 00 00 00 02 00 00 00 00 00 00 00 
	Return 
// 0x3ec: ProcessEvent[Probe[main.templateTest2]Return@4a6b65]
	PrepareEventRoot bd 00 00 00 03 00 00 00 
	Call d6 03 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0x4a6b65.expr[0]]
	Return 
// 0x3fb: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@4a6896]
	PrepareEventRoot b6 00 00 00 00 00 00 00 
	Return 
// 0x405: ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0x4a6a4e.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 86 06 00 00 // ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x420: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@4a6a4e]
	PrepareEventRoot b7 00 00 00 09 00 00 00 
	Call 05 04 00 00 // ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0x4a6a4e.expr[0]]
	Return 
// 0x42f: ProcessType[*****int]
	ProcessPointer 80 00 00 00 
	Return 
// 0x435: ProcessType[****int]
	ProcessPointer a1 00 00 00 
	Return 
// 0x43b: ProcessType[***int]
	ProcessPointer 81 00 00 00 
	Return 
// 0x441: ProcessType[**int]
	ProcessPointer 5d 00 00 00 
	Return 
// 0x447: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x44d: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x453: ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer 9a 00 00 00 
	Return 
// 0x459: ProcessType[*bucket<string,int>]
	ProcessPointer 6c 00 00 00 
	Return 
// 0x45f: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 73 00 00 00 
	Return 
// 0x465: ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 7d 00 00 00 
	Return 
// 0x46b: ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 78 00 00 00 
	Return 
// 0x471: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x477: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x47d: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x483: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x489: ProcessType[*int32]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x48f: ProcessType[*int64]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x495: ProcessType[*main.bigStruct]
	ProcessPointer 92 00 00 00 
	Return 
// 0x49b: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x4a1: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x4a7: ProcessType[*runtime.cgoCallers]
	ProcessPointer 3d 00 00 00 
	Return 
// 0x4ad: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x4b3: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x4b9: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x4bf: ProcessType[*runtime.mapextra]
	ProcessPointer 6e 00 00 00 
	Return 
// 0x4c5: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x4cb: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x4d1: ProcessType[*runtime.traceBuf]
	ProcessPointer 49 00 00 00 
	Return 
// 0x4d7: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x4dd: ProcessType[*uint]
	ProcessPointer 0f 00 00 00 
	Return 
// 0x4e3: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x4e9: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x4ef: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x4f5: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x4fb: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x501: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call d1 04 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x511: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 62 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x521: ProcessType[[]bucket<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call c1 05 00 00 // ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x52d: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call cc 05 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x539: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call e1 05 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x545: ProcessType[[]bucket<string,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call f6 05 00 00 // ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x551: ProcessType[[]bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 0b 06 00 00 // ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x55d: ProcessType[[]int]
	ProcessSlice 88 00 00 00 08 00 00 00 
	Return 
// 0x567: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 62 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x577: ProcessType[[]string]
	ProcessSlice 8a 00 00 00 10 00 00 00 
	Return 
// 0x581: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 62 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x58d: ProcessType[[]uint8]
	ProcessSlice 84 00 00 00 01 00 00 00 
	Return 
// 0x597: ProcessType[[]uintptr]
	ProcessSlice 86 00 00 00 08 00 00 00 
	Return 
// 0x5a1: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 95 04 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x5b1: ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 6e 06 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x5c1: ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 88 00 00 00 
	Call 53 04 00 00 // ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x5cc: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 67 05 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 59 04 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x5e1: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 67 05 00 00 // ProcessType[[]key<string>]
	Call a1 05 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 5f 04 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x5f6: ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 08 00 00 00 
	Call 67 05 00 00 // ProcessType[[]key<string>]
	Call b1 05 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 65 04 00 00 // ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x60b: ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call b1 05 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 6b 04 00 00 // ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x61b: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x61d: ProcessType[hash<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap a0 00 00 00 90 00 00 00 08 09 10 18 
	Return 
// 0x62b: ProcessType[hash<string,int>]
	ProcessGoHmap 8f 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x639: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 93 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x647: ProcessType[hash<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9c 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x655: ProcessType[hash<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9b 00 00 00 58 00 00 00 08 09 10 18 
	Return 
// 0x663: ProcessType[main.User]
	IncrementOutputOffset 08 00 00 00 
	Call 62 07 00 00 // ProcessType[string]
	Return 
// 0x66e: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 98 00 00 00 
	Return 
// 0x674: ProcessType[map[string]int]
	ProcessPointer 6a 00 00 00 
	Return 
// 0x67a: ProcessType[map[string]main.bigStruct]
	ProcessPointer 71 00 00 00 
	Return 
// 0x680: ProcessType[map[string]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 7b 00 00 00 
	Return 
// 0x686: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 76 00 00 00 
	Return 
// 0x68c: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call a1 04 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call 9b 04 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call b9 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b8 00 00 00 
	Call 8d 05 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call 47 04 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call c5 04 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call 97 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call cb 04 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call ad 04 00 00 // ProcessType[*runtime.coro]
	Return 
// 0x6e7: ProcessType[runtime.m]
	Call b3 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 50 00 00 00 
	Call b3 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call b3 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call 62 07 00 00 // ProcessType[string]
	IncrementOutputOffset 40 00 00 00 
	Call a7 04 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call b9 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 28 01 00 00 
	Call 47 07 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 38 00 00 00 
	Call 97 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call b9 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call 52 07 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x747: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call 97 05 00 00 // ProcessType[[]uintptr]
	Return 
// 0x752: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call 01 05 00 00 // ProcessType[[2]*runtime.traceBuf]
	Call b9 04 00 00 // ProcessType[*runtime.m]
	Return 
// 0x762: ProcessType[string]
	ProcessString 82 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 1101
ID: 6 Len: 8 Enqueue: 1269
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 1275
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 1890
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 4 Enqueue: 0
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 1 Enqueue: 0
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 1563
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 1161
ID: 21 Len: 8 Enqueue: 1257
ID: 22 Len: 432 Enqueue: 1676
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 1185
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 1179
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 1209
ID: 29 Len: 1760 Enqueue: 1767
ID: 30 Len: 56 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 1421
ID: 39 Len: 8 Enqueue: 1095
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 1221
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1431
ID: 44 Len: 8 Enqueue: 1227
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 1197
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 32 Enqueue: 0
ID: 50 Len: 32 Enqueue: 0
ID: 51 Len: 12 Enqueue: 0
ID: 52 Len: 16 Enqueue: 0
ID: 53 Len: 8 Enqueue: 1203
ID: 54 Len: 40 Enqueue: 0
ID: 55 Len: 8 Enqueue: 0
ID: 56 Len: 48 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 4 Enqueue: 0
ID: 60 Len: 8 Enqueue: 1191
ID: 61 Len: 8 Enqueue: 0
ID: 62 Len: 8 Enqueue: 0
ID: 63 Len: 256 Enqueue: 0
ID: 64 Len: 64 Enqueue: 1863
ID: 65 Len: 8 Enqueue: 0
ID: 66 Len: 0 Enqueue: 0
ID: 67 Len: 8 Enqueue: 0
ID: 68 Len: 1 Enqueue: 0
ID: 69 Len: 32 Enqueue: 1874
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 16 Enqueue: 1281
ID: 72 Len: 8 Enqueue: 1233
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 48 Enqueue: 0
ID: 75 Len: 0 Enqueue: 0
ID: 76 Len: 392 Enqueue: 0
ID: 77 Len: 384 Enqueue: 0
ID: 78 Len: 192 Enqueue: 0
ID: 79 Len: 24 Enqueue: 0
ID: 80 Len: 0 Enqueue: 0
ID: 81 Len: 8 Enqueue: 0
ID: 82 Len: 304 Enqueue: 0
ID: 83 Len: 256 Enqueue: 0
ID: 84 Len: 32 Enqueue: 0
ID: 85 Len: 160 Enqueue: 0
ID: 86 Len: 16 Enqueue: 0
ID: 87 Len: 8 Enqueue: 0
ID: 88 Len: 8 Enqueue: 1239
ID: 89 Len: 8 Enqueue: 0
ID: 90 Len: 16 Enqueue: 0
ID: 91 Len: 8 Enqueue: 1149
ID: 92 Len: 8 Enqueue: 1167
ID: 93 Len: 8 Enqueue: 1155
ID: 94 Len: 8 Enqueue: 1263
ID: 95 Len: 8 Enqueue: 1137
ID: 96 Len: 2 Enqueue: 0
ID: 97 Len: 8 Enqueue: 1143
ID: 98 Len: 8 Enqueue: 1245
ID: 99 Len: 8 Enqueue: 1251
ID: 100 Len: 24 Enqueue: 1373
ID: 101 Len: 24 Enqueue: 0
ID: 102 Len: 24 Enqueue: 1399
ID: 103 Len: 48 Enqueue: 1297
ID: 104 Len: 8 Enqueue: 1652
ID: 105 Len: 8 Enqueue: 0
ID: 106 Len: 48 Enqueue: 1579
ID: 107 Len: 8 Enqueue: 1113
ID: 108 Len: 208 Enqueue: 1484
ID: 109 Len: 8 Enqueue: 1215
ID: 110 Len: 8 Enqueue: 0
ID: 111 Len: 8 Enqueue: 1658
ID: 112 Len: 8 Enqueue: 0
ID: 113 Len: 48 Enqueue: 1593
ID: 114 Len: 8 Enqueue: 1119
ID: 115 Len: 208 Enqueue: 1505
ID: 116 Len: 8 Enqueue: 1670
ID: 117 Len: 8 Enqueue: 0
ID: 118 Len: 48 Enqueue: 1621
ID: 119 Len: 8 Enqueue: 1131
ID: 120 Len: 88 Enqueue: 1547
ID: 121 Len: 8 Enqueue: 1664
ID: 122 Len: 8 Enqueue: 0
ID: 123 Len: 48 Enqueue: 1607
ID: 124 Len: 8 Enqueue: 1125
ID: 125 Len: 208 Enqueue: 1526
ID: 126 Len: 24 Enqueue: 1635
ID: 127 Len: 8 Enqueue: 1071
ID: 128 Len: 8 Enqueue: 1077
ID: 129 Len: 8 Enqueue: 1089
ID: 130 Len: 1 Enqueue: 0
ID: 131 Len: 8 Enqueue: 0
ID: 132 Len: 1 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 8 Enqueue: 0
ID: 136 Len: 8 Enqueue: 0
ID: 137 Len: 8 Enqueue: 0
ID: 138 Len: 16 Enqueue: 1409
ID: 139 Len: 8 Enqueue: 0
ID: 140 Len: 8 Enqueue: 0
ID: 141 Len: 128 Enqueue: 1383
ID: 142 Len: 64 Enqueue: 0
ID: 143 Len: 208 Enqueue: 1325
ID: 144 Len: 64 Enqueue: 1441
ID: 145 Len: 8 Enqueue: 1173
ID: 146 Len: 184 Enqueue: 0
ID: 147 Len: 208 Enqueue: 1337
ID: 148 Len: 8 Enqueue: 0
ID: 149 Len: 64 Enqueue: 1457
ID: 150 Len: 8 Enqueue: 1646
ID: 151 Len: 8 Enqueue: 0
ID: 152 Len: 48 Enqueue: 1565
ID: 153 Len: 8 Enqueue: 1107
ID: 154 Len: 144 Enqueue: 1473
ID: 155 Len: 88 Enqueue: 1361
ID: 156 Len: 208 Enqueue: 1349
ID: 157 Len: 64 Enqueue: 0
ID: 158 Len: 64 Enqueue: 0
ID: 159 Len: 8 Enqueue: 0
ID: 160 Len: 144 Enqueue: 1313
ID: 161 Len: 8 Enqueue: 1083
ID: 162 Len: 128 Enqueue: 0
ID: 163 Len: 9 Enqueue: 0
ID: 164 Len: 0 Enqueue: 0
ID: 165 Len: 17 Enqueue: 0
ID: 166 Len: 0 Enqueue: 0
ID: 167 Len: 25 Enqueue: 0
ID: 168 Len: 0 Enqueue: 0
ID: 169 Len: 25 Enqueue: 0
ID: 170 Len: 0 Enqueue: 0
ID: 171 Len: 25 Enqueue: 0
ID: 172 Len: 0 Enqueue: 0
ID: 173 Len: 49 Enqueue: 0
ID: 174 Len: 0 Enqueue: 0
ID: 175 Len: 49 Enqueue: 0
ID: 176 Len: 9 Enqueue: 0
ID: 177 Len: 0 Enqueue: 0
ID: 178 Len: 9 Enqueue: 0
ID: 179 Len: 0 Enqueue: 0
ID: 180 Len: 0 Enqueue: 0
ID: 181 Len: 0 Enqueue: 0
ID: 182 Len: 0 Enqueue: 0
ID: 183 Len: 9 Enqueue: 0
ID: 184 Len: 33 Enqueue: 0
ID: 185 Len: 0 Enqueue: 0
ID: 186 Len: 33 Enqueue: 0
ID: 187 Len: 3 Enqueue: 0
ID: 188 Len: 33 Enqueue: 0
ID: 189 Len: 3 Enqueue: 0
ID: 190 Len: 9 Enqueue: 0
ID: 191 Len: 0 Enqueue: 0
ID: 192 Len: 9 Enqueue: 0
ID: 193 Len: 9 Enqueue: 0
