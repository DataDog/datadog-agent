// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0xb520c.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 09 04 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@b520c]
	PrepareEventRoot d4 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0xb520c.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0xb5244.expr[0]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 1b 04 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@b5244]
	PrepareEventRoot d5 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0xb5244.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0xb56f0.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call fb 05 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@b56f0]
	PrepareEventRoot cc 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0xb56f0.expr[0]]
	Return 
// 0x81: ProcessEvent[Probe[main.bigMapArg]Return@b5764]
	PrepareEventRoot cd 00 00 00 00 00 00 00 
	Return 
// 0x8b: ProcessExpression[Probe[main.inlined]@0xb502c.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x9b: ProcessEvent[Probe[main.inlined]@b502c]
	PrepareEventRoot d2 00 00 00 09 00 00 00 
	Call 8b 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb502c.expr[0]]
	Return 
// 0xaa: ProcessExpression[Probe[main.inlined]@0xb55b8.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc0: ProcessEvent[Probe[main.inlined]@b55b8]
	PrepareEventRoot d2 00 00 00 09 00 00 00 
	Call aa 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb55b8.expr[0]]
	Return 
// 0xcf: ProcessEvent[Probe[main.inlined]Return@b55f0]
	PrepareEventRoot d3 00 00 00 00 00 00 00 
	Return 
// 0xd9: ProcessExpression[Probe[main.intArg]@0xb52b8.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xef: ProcessEvent[Probe[main.intArg]@b52b8]
	PrepareEventRoot b3 00 00 00 09 00 00 00 
	Call d9 00 00 00 // ProcessExpression[Probe[main.intArg]@0xb52b8.expr[0]]
	Return 
// 0xfe: ProcessEvent[Probe[main.intArg]Return@b52f0]
	PrepareEventRoot b4 00 00 00 00 00 00 00 
	Return 
// 0x108: ProcessExpression[Probe[main.intArrayArg]@0xb5428.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x124: ProcessEvent[Probe[main.intArrayArg]@b5428]
	PrepareEventRoot c3 00 00 00 19 00 00 00 
	Call 08 01 00 00 // ProcessExpression[Probe[main.intArrayArg]@0xb5428.expr[0]]
	Return 
// 0x133: ProcessEvent[Probe[main.intArrayArg]Return@b546c]
	PrepareEventRoot c4 00 00 00 00 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5590.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call f5 04 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@b5590]
	PrepareEventRoot c9 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5590.expr[0]]
	Return 
// 0x16d: ProcessExpression[Probe[main.intSliceArg]@0xb53a8.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 35 05 00 00 // ProcessType[[]int]
	Return 
// 0x196: ProcessEvent[Probe[main.intSliceArg]@b53a8]
	PrepareEventRoot c1 00 00 00 19 00 00 00 
	Call 6d 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0xb53a8.expr[0]]
	Return 
// 0x1a5: ProcessEvent[Probe[main.intSliceArg]Return@b53e4]
	PrepareEventRoot c2 00 00 00 00 00 00 00 
	Return 
// 0x1af: ProcessExpression[Probe[main.mapArg]@0xb5678.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call f5 05 00 00 // ProcessType[map[string]int]
	Return 
// 0x1ca: ProcessEvent[Probe[main.mapArg]@b5678]
	PrepareEventRoot ca 00 00 00 09 00 00 00 
	Call af 01 00 00 // ProcessExpression[Probe[main.mapArg]@0xb5678.expr[0]]
	Return 
// 0x1d9: ProcessEvent[Probe[main.mapArg]Return@b56a8]
	PrepareEventRoot cb 00 00 00 00 00 00 00 
	Return 
// 0x1e3: ProcessEvent[Probe[main.noArgs]@b57a8]
	PrepareEventRoot ce 00 00 00 00 00 00 00 
	Return 
// 0x1ed: ProcessEvent[Probe[main.noArgs]Return@b57e0]
	PrepareEventRoot cf 00 00 00 00 00 00 00 
	Return 
// 0x1f7: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x219: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot b5 00 00 00 11 00 00 00 
	Call f7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x228: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot b6 00 00 00 00 00 00 00 
	Return 
// 0x232: ProcessExpression[Probe[main.stringArrayArg]@0xb5528.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call f5 04 00 00 // ProcessType[[3]string]
	Return 
// 0x253: ProcessEvent[Probe[main.stringArrayArg]@b5528]
	PrepareEventRoot c7 00 00 00 31 00 00 00 
	Call 32 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0xb5528.expr[0]]
	Return 
// 0x262: ProcessEvent[Probe[main.stringArrayArg]Return@b556c]
	PrepareEventRoot c8 00 00 00 00 00 00 00 
	Return 
// 0x26c: ProcessExpression[Probe[main.stringSliceArg]@0xb54a8.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 63 05 00 00 // ProcessType[[]string]
	Return 
// 0x295: ProcessEvent[Probe[main.stringSliceArg]@b54a8]
	PrepareEventRoot c5 00 00 00 19 00 00 00 
	Call 6c 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0xb54a8.expr[0]]
	Return 
// 0x2a4: ProcessEvent[Probe[main.stringSliceArg]Return@b54e4]
	PrepareEventRoot c6 00 00 00 00 00 00 00 
	Return 
// 0x2ae: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x2d0: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot b7 00 00 00 11 00 00 00 
	Call ae 02 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x2df: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot b8 00 00 00 00 00 00 00 
	Return 
// 0x2e9: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x30b: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot b9 00 00 00 11 00 00 00 
	Call e9 02 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x31a: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot ba 00 00 00 00 00 00 00 
	Return 
// 0x324: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x346: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot bb 00 00 00 11 00 00 00 
	Call 24 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x355: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot bc 00 00 00 00 00 00 00 
	Return 
// 0x35f: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x381: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot bd 00 00 00 11 00 00 00 
	Call 5f 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x390: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot be 00 00 00 00 00 00 00 
	Return 
// 0x39a: ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x3bc: ProcessEvent[Probe[main.stringArg]@b5328]
	PrepareEventRoot bf 00 00 00 11 00 00 00 
	Call 9a 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5328.expr[0]]
	Return 
// 0x3cb: ProcessEvent[Probe[main.stringArg]Return@b5364]
	PrepareEventRoot c0 00 00 00 00 00 00 00 
	Return 
// 0x3d5: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@b5820]
	PrepareEventRoot d0 00 00 00 00 00 00 00 
	Return 
// 0x3df: ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb59a0.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 01 06 00 00 // ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x3fa: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@b59a0]
	PrepareEventRoot d1 00 00 00 09 00 00 00 
	Call df 03 00 00 // ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb59a0.expr[0]]
	Return 
// 0x409: ProcessType[*****int]
	ProcessPointer 7d 00 00 00 
	Return 
// 0x40f: ProcessType[****int]
	ProcessPointer b1 00 00 00 
	Return 
// 0x415: ProcessType[***int]
	ProcessPointer 7e 00 00 00 
	Return 
// 0x41b: ProcessType[**int]
	ProcessPointer 63 00 00 00 
	Return 
// 0x421: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x427: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x42d: ProcessType[*error]
	ProcessPointer 0e 00 00 00 
	Return 
// 0x433: ProcessType[*float32]
	ProcessPointer 11 00 00 00 
	Return 
// 0x439: ProcessType[*float64]
	ProcessPointer 12 00 00 00 
	Return 
// 0x43f: ProcessType[*int]
	ProcessPointer 07 00 00 00 
	Return 
// 0x445: ProcessType[*int32]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x44b: ProcessType[*int64]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x451: ProcessType[*main.bigStruct]
	ProcessPointer 98 00 00 00 
	Return 
// 0x457: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x45d: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x463: ProcessType[*runtime.cgoCallers]
	ProcessPointer 3f 00 00 00 
	Return 
// 0x469: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x46f: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x475: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x47b: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x481: ProcessType[*runtime.synctestGroup]
	ProcessPointer 32 00 00 00 
	Return 
// 0x487: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x48d: ProcessType[*runtime.traceBuf]
	ProcessPointer 4d 00 00 00 
	Return 
// 0x493: ProcessType[*string]
	ProcessPointer 09 00 00 00 
	Return 
// 0x499: ProcessType[*table<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer a8 00 00 00 
	Return 
// 0x49f: ProcessType[*table<string,int>]
	ProcessPointer 89 00 00 00 
	Return 
// 0x4a5: ProcessType[*table<string,main.bigStruct>]
	ProcessPointer 91 00 00 00 
	Return 
// 0x4ab: ProcessType[*table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 9b 00 00 00 
	Return 
// 0x4b1: ProcessType[*uint]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x4b7: ProcessType[*uint16]
	ProcessPointer 06 00 00 00 
	Return 
// 0x4bd: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x4c3: ProcessType[*uint64]
	ProcessPointer 08 00 00 00 
	Return 
// 0x4c9: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x4cf: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x4d5: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call 8d 04 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x4e5: ProcessType[[2][2]*runtime.traceBuf]
	ProcessArrayDataPrep 20 00 00 00 
	Call d5 04 00 00 // ProcessType[[2]*runtime.traceBuf]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x4f5: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x505: ProcessType[[]*table<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 99 04 00 00 // ProcessType[*table<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x511: ProcessType[[]*table<string,int>.array]
	ProcessSliceDataPrep 
	Call 9f 04 00 00 // ProcessType[*table<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x51d: ProcessType[[]*table<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call a5 04 00 00 // ProcessType[*table<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x529: ProcessType[[]*table<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call ab 04 00 00 // ProcessType[*table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x535: ProcessType[[]int]
	ProcessSlice 85 00 00 00 08 00 00 00 
	Return 
// 0x53f: ProcessType[[]noalg.map.group[string]int.array]
	ProcessSliceDataPrep 
	Call 37 06 00 00 // ProcessType[noalg.map.group[string]int]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x54b: ProcessType[[]noalg.map.group[string]main.bigStruct.array]
	ProcessSliceDataPrep 
	Call 42 06 00 00 // ProcessType[noalg.map.group[string]main.bigStruct]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x557: ProcessType[[]noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument.array]
	ProcessSliceDataPrep 
	Call 4d 06 00 00 // ProcessType[noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x563: ProcessType[[]string]
	ProcessSlice 87 00 00 00 10 00 00 00 
	Return 
// 0x56d: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 59 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x579: ProcessType[[]uint8]
	ProcessSlice 81 00 00 00 01 00 00 00 
	Return 
// 0x583: ProcessType[[]uintptr]
	ProcessSlice 83 00 00 00 08 00 00 00 
	Return 
// 0x58d: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x58f: ProcessType[groupReference<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMapGroups b0 00 00 00 88 00 00 00 00 08 
	Return 
// 0x59b: ProcessType[groupReference<string,int>]
	ProcessGoSwissMapGroups 90 00 00 00 c8 00 00 00 00 08 
	Return 
// 0x5a7: ProcessType[groupReference<string,main.bigStruct>]
	ProcessGoSwissMapGroups 9a 00 00 00 c8 00 00 00 00 08 
	Return 
// 0x5b3: ProcessType[groupReference<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMapGroups a7 00 00 00 88 00 00 00 00 08 
	Return 
// 0x5bf: ProcessType[map<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMap af 00 00 00 ab 00 00 00 10 18 
	Return 
// 0x5cb: ProcessType[map<string,int>]
	ProcessGoSwissMap 8f 00 00 00 8c 00 00 00 10 18 
	Return 
// 0x5d7: ProcessType[map<string,main.bigStruct>]
	ProcessGoSwissMap 99 00 00 00 94 00 00 00 10 18 
	Return 
// 0x5e3: ProcessType[map<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMap a6 00 00 00 9e 00 00 00 10 18 
	Return 
// 0x5ef: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer a3 00 00 00 
	Return 
// 0x5f5: ProcessType[map[string]int]
	ProcessPointer 6f 00 00 00 
	Return 
// 0x5fb: ProcessType[map[string]main.bigStruct]
	ProcessPointer 74 00 00 00 
	Return 
// 0x601: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 79 00 00 00 
	Return 
// 0x607: ProcessType[noalg.[8]struct { key string; elem *main.bigStruct }]
	ProcessArrayDataPrep c0 00 00 00 
	Call 58 06 00 00 // ProcessType[noalg.struct { key string; elem *main.bigStruct }]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x617: ProcessType[noalg.[8]struct { key string; elem int }]
	ProcessArrayDataPrep c0 00 00 00 
	Call 68 06 00 00 // ProcessType[noalg.struct { key string; elem int }]
	ProcessSliceDataRepeat 18 00 00 00 
	Return 
// 0x627: ProcessType[noalg.[8]struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	ProcessArrayDataPrep 80 00 00 00 
	Call 6e 06 00 00 // ProcessType[noalg.struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x637: ProcessType[noalg.map.group[string]int]
	IncrementOutputOffset 08 00 00 00 
	Call 17 06 00 00 // ProcessType[noalg.[8]struct { key string; elem int }]
	Return 
// 0x642: ProcessType[noalg.map.group[string]main.bigStruct]
	IncrementOutputOffset 08 00 00 00 
	Call 07 06 00 00 // ProcessType[noalg.[8]struct { key string; elem *main.bigStruct }]
	Return 
// 0x64d: ProcessType[noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument]
	IncrementOutputOffset 08 00 00 00 
	Call 27 06 00 00 // ProcessType[noalg.[8]struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	Return 
// 0x658: ProcessType[noalg.struct { key string; elem *main.bigStruct }]
	Call 59 07 00 00 // ProcessType[string]
	IncrementOutputOffset 10 00 00 00 
	Call 51 04 00 00 // ProcessType[*main.bigStruct]
	Return 
// 0x668: ProcessType[noalg.struct { key string; elem int }]
	Call 59 07 00 00 // ProcessType[string]
	Return 
// 0x66e: ProcessType[noalg.struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	IncrementOutputOffset 08 00 00 00 
	Call ef 05 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x679: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call 5d 04 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call 57 04 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call 75 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b8 00 00 00 
	Call 79 05 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call 21 04 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call 7b 04 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call 83 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call 87 04 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call 69 04 00 00 // ProcessType[*runtime.coro]
	IncrementOutputOffset 08 00 00 00 
	Call 81 04 00 00 // ProcessType[*runtime.synctestGroup]
	Return 
// 0x6de: ProcessType[runtime.m]
	Call 6f 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 50 00 00 00 
	Call 6f 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call 6f 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call 59 07 00 00 // ProcessType[string]
	IncrementOutputOffset 40 00 00 00 
	Call 63 04 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call 75 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 28 01 00 00 
	Call 3e 07 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 38 00 00 00 
	Call 83 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call 75 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call 49 07 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x73e: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call 83 05 00 00 // ProcessType[[]uintptr]
	Return 
// 0x749: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call e5 04 00 00 // ProcessType[[2][2]*runtime.traceBuf]
	Call 75 04 00 00 // ProcessType[*runtime.m]
	Return 
// 0x759: ProcessType[string]
	ProcessString 7f 00 00 00 
	Return 
// 0x75f: ProcessType[table<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call 8f 05 00 00 // ProcessType[groupReference<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x76a: ProcessType[table<string,int>]
	IncrementOutputOffset 10 00 00 00 
	Call 9b 05 00 00 // ProcessType[groupReference<string,int>]
	Return 
// 0x775: ProcessType[table<string,main.bigStruct>]
	IncrementOutputOffset 10 00 00 00 
	Call a7 05 00 00 // ProcessType[groupReference<string,main.bigStruct>]
	Return 
// 0x780: ProcessType[table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call b3 05 00 00 // ProcessType[groupReference<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 1225
ID: 6 Len: 2 Enqueue: 0
ID: 7 Len: 8 Enqueue: 0
ID: 8 Len: 8 Enqueue: 0
ID: 9 Len: 16 Enqueue: 1881
ID: 10 Len: 8 Enqueue: 0
ID: 11 Len: 8 Enqueue: 1063
ID: 12 Len: 4 Enqueue: 0
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 16 Enqueue: 1421
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 1 Enqueue: 0
ID: 17 Len: 4 Enqueue: 0
ID: 18 Len: 8 Enqueue: 0
ID: 19 Len: 8 Enqueue: 1231
ID: 20 Len: 8 Enqueue: 1093
ID: 21 Len: 8 Enqueue: 1213
ID: 22 Len: 440 Enqueue: 1657
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 1117
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 1111
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 1141
ID: 29 Len: 1808 Enqueue: 1758
ID: 30 Len: 56 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 1401
ID: 39 Len: 8 Enqueue: 1057
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 1147
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1411
ID: 44 Len: 8 Enqueue: 1159
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 1129
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 8 Enqueue: 1153
ID: 50 Len: 8 Enqueue: 0
ID: 51 Len: 32 Enqueue: 0
ID: 52 Len: 32 Enqueue: 0
ID: 53 Len: 12 Enqueue: 0
ID: 54 Len: 16 Enqueue: 0
ID: 55 Len: 8 Enqueue: 1135
ID: 56 Len: 40 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 48 Enqueue: 0
ID: 59 Len: 8 Enqueue: 0
ID: 60 Len: 8 Enqueue: 0
ID: 61 Len: 4 Enqueue: 0
ID: 62 Len: 8 Enqueue: 1123
ID: 63 Len: 8 Enqueue: 0
ID: 64 Len: 8 Enqueue: 0
ID: 65 Len: 256 Enqueue: 0
ID: 66 Len: 8 Enqueue: 0
ID: 67 Len: 64 Enqueue: 1854
ID: 68 Len: 8 Enqueue: 0
ID: 69 Len: 0 Enqueue: 0
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 1 Enqueue: 0
ID: 72 Len: 56 Enqueue: 1865
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 32 Enqueue: 1253
ID: 75 Len: 16 Enqueue: 1237
ID: 76 Len: 8 Enqueue: 1165
ID: 77 Len: 8 Enqueue: 0
ID: 78 Len: 48 Enqueue: 0
ID: 79 Len: 0 Enqueue: 0
ID: 80 Len: 392 Enqueue: 0
ID: 81 Len: 384 Enqueue: 0
ID: 82 Len: 192 Enqueue: 0
ID: 83 Len: 24 Enqueue: 0
ID: 84 Len: 0 Enqueue: 0
ID: 85 Len: 24 Enqueue: 0
ID: 86 Len: 304 Enqueue: 0
ID: 87 Len: 256 Enqueue: 0
ID: 88 Len: 32 Enqueue: 0
ID: 89 Len: 160 Enqueue: 0
ID: 90 Len: 16 Enqueue: 0
ID: 91 Len: 8 Enqueue: 0
ID: 92 Len: 0 Enqueue: 0
ID: 93 Len: 8 Enqueue: 1171
ID: 94 Len: 2 Enqueue: 0
ID: 95 Len: 8 Enqueue: 0
ID: 96 Len: 16 Enqueue: 0
ID: 97 Len: 8 Enqueue: 1081
ID: 98 Len: 8 Enqueue: 1099
ID: 99 Len: 8 Enqueue: 1087
ID: 100 Len: 8 Enqueue: 1219
ID: 101 Len: 8 Enqueue: 1069
ID: 102 Len: 8 Enqueue: 1075
ID: 103 Len: 8 Enqueue: 1201
ID: 104 Len: 8 Enqueue: 1207
ID: 105 Len: 24 Enqueue: 1333
ID: 106 Len: 24 Enqueue: 0
ID: 107 Len: 24 Enqueue: 1379
ID: 108 Len: 48 Enqueue: 1269
ID: 109 Len: 8 Enqueue: 1525
ID: 110 Len: 8 Enqueue: 0
ID: 111 Len: 48 Enqueue: 1483
ID: 112 Len: 8 Enqueue: 0
ID: 113 Len: 8 Enqueue: 1183
ID: 114 Len: 8 Enqueue: 1531
ID: 115 Len: 8 Enqueue: 0
ID: 116 Len: 48 Enqueue: 1495
ID: 117 Len: 8 Enqueue: 0
ID: 118 Len: 8 Enqueue: 1189
ID: 119 Len: 8 Enqueue: 1537
ID: 120 Len: 8 Enqueue: 0
ID: 121 Len: 48 Enqueue: 1507
ID: 122 Len: 8 Enqueue: 0
ID: 123 Len: 8 Enqueue: 1195
ID: 124 Len: 8 Enqueue: 1033
ID: 125 Len: 8 Enqueue: 1039
ID: 126 Len: 8 Enqueue: 1051
ID: 127 Len: 1 Enqueue: 0
ID: 128 Len: 8 Enqueue: 0
ID: 129 Len: 1 Enqueue: 0
ID: 130 Len: 8 Enqueue: 0
ID: 131 Len: 8 Enqueue: 0
ID: 132 Len: 8 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 16 Enqueue: 1389
ID: 136 Len: 8 Enqueue: 0
ID: 137 Len: 32 Enqueue: 1898
ID: 138 Len: 16 Enqueue: 1435
ID: 139 Len: 8 Enqueue: 0
ID: 140 Len: 200 Enqueue: 1591
ID: 141 Len: 192 Enqueue: 1559
ID: 142 Len: 24 Enqueue: 1640
ID: 143 Len: 8 Enqueue: 1297
ID: 144 Len: 200 Enqueue: 1343
ID: 145 Len: 32 Enqueue: 1909
ID: 146 Len: 16 Enqueue: 1447
ID: 147 Len: 8 Enqueue: 0
ID: 148 Len: 200 Enqueue: 1602
ID: 149 Len: 192 Enqueue: 1543
ID: 150 Len: 24 Enqueue: 1624
ID: 151 Len: 8 Enqueue: 1105
ID: 152 Len: 184 Enqueue: 0
ID: 153 Len: 8 Enqueue: 1309
ID: 154 Len: 200 Enqueue: 1355
ID: 155 Len: 32 Enqueue: 1920
ID: 156 Len: 16 Enqueue: 1459
ID: 157 Len: 8 Enqueue: 0
ID: 158 Len: 136 Enqueue: 1613
ID: 159 Len: 128 Enqueue: 1575
ID: 160 Len: 16 Enqueue: 1646
ID: 161 Len: 8 Enqueue: 1519
ID: 162 Len: 8 Enqueue: 0
ID: 163 Len: 48 Enqueue: 1471
ID: 164 Len: 8 Enqueue: 0
ID: 165 Len: 8 Enqueue: 1177
ID: 166 Len: 8 Enqueue: 1321
ID: 167 Len: 136 Enqueue: 1367
ID: 168 Len: 32 Enqueue: 1887
ID: 169 Len: 16 Enqueue: 1423
ID: 170 Len: 8 Enqueue: 0
ID: 171 Len: 136 Enqueue: 0
ID: 172 Len: 128 Enqueue: 0
ID: 173 Len: 16 Enqueue: 0
ID: 174 Len: 8 Enqueue: 0
ID: 175 Len: 8 Enqueue: 1285
ID: 176 Len: 136 Enqueue: 0
ID: 177 Len: 8 Enqueue: 1045
ID: 178 Len: 128 Enqueue: 0
ID: 179 Len: 9 Enqueue: 0
ID: 180 Len: 0 Enqueue: 0
ID: 181 Len: 17 Enqueue: 0
ID: 182 Len: 0 Enqueue: 0
ID: 183 Len: 17 Enqueue: 0
ID: 184 Len: 0 Enqueue: 0
ID: 185 Len: 17 Enqueue: 0
ID: 186 Len: 0 Enqueue: 0
ID: 187 Len: 17 Enqueue: 0
ID: 188 Len: 0 Enqueue: 0
ID: 189 Len: 17 Enqueue: 0
ID: 190 Len: 0 Enqueue: 0
ID: 191 Len: 17 Enqueue: 0
ID: 192 Len: 0 Enqueue: 0
ID: 193 Len: 25 Enqueue: 0
ID: 194 Len: 0 Enqueue: 0
ID: 195 Len: 25 Enqueue: 0
ID: 196 Len: 0 Enqueue: 0
ID: 197 Len: 25 Enqueue: 0
ID: 198 Len: 0 Enqueue: 0
ID: 199 Len: 49 Enqueue: 0
ID: 200 Len: 0 Enqueue: 0
ID: 201 Len: 49 Enqueue: 0
ID: 202 Len: 9 Enqueue: 0
ID: 203 Len: 0 Enqueue: 0
ID: 204 Len: 9 Enqueue: 0
ID: 205 Len: 0 Enqueue: 0
ID: 206 Len: 0 Enqueue: 0
ID: 207 Len: 0 Enqueue: 0
ID: 208 Len: 0 Enqueue: 0
ID: 209 Len: 9 Enqueue: 0
ID: 210 Len: 9 Enqueue: 0
ID: 211 Len: 0 Enqueue: 0
ID: 212 Len: 9 Enqueue: 0
ID: 213 Len: 9 Enqueue: 0
