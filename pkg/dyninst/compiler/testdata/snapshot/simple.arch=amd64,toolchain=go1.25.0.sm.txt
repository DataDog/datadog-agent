// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0x4ae646.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 54 02 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@4ae646]
	PrepareEventRoot c3 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4ae646.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0x4ae690.expr[0]]
	ExprPrepare 
	ExprReadRegister 01 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 66 02 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@4ae690]
	PrepareEventRoot c4 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0x4ae690.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0x4aeb53.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 62 04 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@4aeb53]
	PrepareEventRoot bf 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4aeb53.expr[0]]
	Return 
// 0x81: ProcessExpression[Probe[main.inlined]@0x4aea2a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x97: ProcessEvent[Probe[main.inlined]@4aea2a]
	PrepareEventRoot c2 00 00 00 09 00 00 00 
	Call 81 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4aea2a.expr[0]]
	Return 
// 0xa6: ProcessExpression[Probe[main.inlined]@0x4ae40e.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xb6: ProcessEvent[Probe[main.inlined]@4ae40e]
	PrepareEventRoot c2 00 00 00 09 00 00 00 
	Call a6 00 00 00 // ProcessExpression[Probe[main.inlined]@0x4ae40e.expr[0]]
	Return 
// 0xc5: ProcessExpression[Probe[main.intArg]@0x4ae70a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xdb: ProcessEvent[Probe[main.intArg]@4ae70a]
	PrepareEventRoot b7 00 00 00 09 00 00 00 
	Call c5 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4ae70a.expr[0]]
	Return 
// 0xea: ProcessExpression[Probe[main.intArrayArg]@0x4ae88a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x106: ProcessEvent[Probe[main.intArrayArg]@4ae88a]
	PrepareEventRoot ba 00 00 00 19 00 00 00 
	Call ea 00 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4ae88a.expr[0]]
	Return 
// 0x115: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4aea00.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 46 03 00 00 // ProcessType[[3]string]
	Return 
// 0x136: ProcessEvent[Probe[main.stringArrayArgFrameless]@4aea00]
	PrepareEventRoot bd 00 00 00 31 00 00 00 
	Call 15 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4aea00.expr[0]]
	Return 
// 0x145: ProcessExpression[Probe[main.intSliceArg]@0x4ae80a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 9c 03 00 00 // ProcessType[[]int]
	Return 
// 0x16e: ProcessEvent[Probe[main.intSliceArg]@4ae80a]
	PrepareEventRoot b9 00 00 00 19 00 00 00 
	Call 45 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4ae80a.expr[0]]
	Return 
// 0x17d: ProcessExpression[Probe[main.mapArg]@0x4aeaea.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 5c 04 00 00 // ProcessType[map[string]int]
	Return 
// 0x198: ProcessEvent[Probe[main.mapArg]@4aeaea]
	PrepareEventRoot be 00 00 00 09 00 00 00 
	Call 7d 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4aeaea.expr[0]]
	Return 
// 0x1a7: ProcessEvent[Probe[main.noArgs]@4aec0a]
	PrepareEventRoot c0 00 00 00 00 00 00 00 
	Return 
// 0x1b1: ProcessExpression[Probe[main.stringArg]@0x4ae78a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call ca 05 00 00 // ProcessType[string]
	Return 
// 0x1d3: ProcessEvent[Probe[main.stringArg]@4ae78a]
	PrepareEventRoot b8 00 00 00 11 00 00 00 
	Call b1 01 00 00 // ProcessExpression[Probe[main.stringArg]@0x4ae78a.expr[0]]
	Return 
// 0x1e2: ProcessExpression[Probe[main.stringArrayArg]@0x4ae98a.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 46 03 00 00 // ProcessType[[3]string]
	Return 
// 0x203: ProcessEvent[Probe[main.stringArrayArg]@4ae98a]
	PrepareEventRoot bc 00 00 00 31 00 00 00 
	Call e2 01 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4ae98a.expr[0]]
	Return 
// 0x212: ProcessExpression[Probe[main.stringSliceArg]@0x4ae90a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call ca 03 00 00 // ProcessType[[]string]
	Return 
// 0x23b: ProcessEvent[Probe[main.stringSliceArg]@4ae90a]
	PrepareEventRoot bb 00 00 00 19 00 00 00 
	Call 12 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4ae90a.expr[0]]
	Return 
// 0x24a: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@4aec76]
	PrepareEventRoot c1 00 00 00 00 00 00 00 
	Return 
// 0x254: ProcessType[*****int]
	ProcessPointer 7e 00 00 00 
	Return 
// 0x25a: ProcessType[****int]
	ProcessPointer b5 00 00 00 
	Return 
// 0x260: ProcessType[***int]
	ProcessPointer 7f 00 00 00 
	Return 
// 0x266: ProcessType[**int]
	ProcessPointer 63 00 00 00 
	Return 
// 0x26c: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x272: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x278: ProcessType[*error]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x27e: ProcessType[*float32]
	ProcessPointer 12 00 00 00 
	Return 
// 0x284: ProcessType[*float64]
	ProcessPointer 0f 00 00 00 
	Return 
// 0x28a: ProcessType[*int]
	ProcessPointer 07 00 00 00 
	Return 
// 0x290: ProcessType[*int32]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x296: ProcessType[*int64]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x29c: ProcessType[*main.bigStruct]
	ProcessPointer 9c 00 00 00 
	Return 
// 0x2a2: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x2a8: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x2ae: ProcessType[*runtime.cgoCallers]
	ProcessPointer 42 00 00 00 
	Return 
// 0x2b4: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x2ba: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x2c0: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x2c6: ProcessType[*runtime.p]
	ProcessPointer 86 00 00 00 
	Return 
// 0x2cc: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x2d2: ProcessType[*runtime.synctestBubble]
	ProcessPointer 32 00 00 00 
	Return 
// 0x2d8: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x2de: ProcessType[*runtime.traceBuf]
	ProcessPointer 50 00 00 00 
	Return 
// 0x2e4: ProcessType[*string]
	ProcessPointer 09 00 00 00 
	Return 
// 0x2ea: ProcessType[*table<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer ac 00 00 00 
	Return 
// 0x2f0: ProcessType[*table<string,int>]
	ProcessPointer 8d 00 00 00 
	Return 
// 0x2f6: ProcessType[*table<string,main.bigStruct>]
	ProcessPointer 95 00 00 00 
	Return 
// 0x2fc: ProcessType[*table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 9f 00 00 00 
	Return 
// 0x302: ProcessType[*uint]
	ProcessPointer 11 00 00 00 
	Return 
// 0x308: ProcessType[*uint16]
	ProcessPointer 06 00 00 00 
	Return 
// 0x30e: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x314: ProcessType[*uint64]
	ProcessPointer 08 00 00 00 
	Return 
// 0x31a: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x320: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x326: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call de 02 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x336: ProcessType[[2][2]*runtime.traceBuf]
	ProcessArrayDataPrep 20 00 00 00 
	Call 26 03 00 00 // ProcessType[[2]*runtime.traceBuf]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x346: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call ca 05 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x356: ProcessType[[]*runtime.p]
	ProcessSlice 87 00 00 00 08 00 00 00 
	Return 
// 0x360: ProcessType[[]*runtime.p.array]
	ProcessSliceDataPrep 
	Call c6 02 00 00 // ProcessType[*runtime.p]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x36c: ProcessType[[]*table<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call ea 02 00 00 // ProcessType[*table<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x378: ProcessType[[]*table<string,int>.array]
	ProcessSliceDataPrep 
	Call f0 02 00 00 // ProcessType[*table<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x384: ProcessType[[]*table<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call f6 02 00 00 // ProcessType[*table<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x390: ProcessType[[]*table<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call fc 02 00 00 // ProcessType[*table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x39c: ProcessType[[]int]
	ProcessSlice 89 00 00 00 08 00 00 00 
	Return 
// 0x3a6: ProcessType[[]noalg.map.group[string]int.array]
	ProcessSliceDataPrep 
	Call 9e 04 00 00 // ProcessType[noalg.map.group[string]int]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x3b2: ProcessType[[]noalg.map.group[string]main.bigStruct.array]
	ProcessSliceDataPrep 
	Call a9 04 00 00 // ProcessType[noalg.map.group[string]main.bigStruct]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x3be: ProcessType[[]noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument.array]
	ProcessSliceDataPrep 
	Call b4 04 00 00 // ProcessType[noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 00 00 00 00 
	Return 
// 0x3ca: ProcessType[[]string]
	ProcessSlice 8b 00 00 00 10 00 00 00 
	Return 
// 0x3d4: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call ca 05 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x3e0: ProcessType[[]uint8]
	ProcessSlice 82 00 00 00 01 00 00 00 
	Return 
// 0x3ea: ProcessType[[]uintptr]
	ProcessSlice 84 00 00 00 08 00 00 00 
	Return 
// 0x3f4: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x3f6: ProcessType[groupReference<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMapGroups b4 00 00 00 88 00 00 00 00 08 
	Return 
// 0x402: ProcessType[groupReference<string,int>]
	ProcessGoSwissMapGroups 94 00 00 00 c8 00 00 00 00 08 
	Return 
// 0x40e: ProcessType[groupReference<string,main.bigStruct>]
	ProcessGoSwissMapGroups 9e 00 00 00 c8 00 00 00 00 08 
	Return 
// 0x41a: ProcessType[groupReference<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMapGroups ab 00 00 00 88 00 00 00 00 08 
	Return 
// 0x426: ProcessType[map<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMap b3 00 00 00 af 00 00 00 10 18 
	Return 
// 0x432: ProcessType[map<string,int>]
	ProcessGoSwissMap 93 00 00 00 90 00 00 00 10 18 
	Return 
// 0x43e: ProcessType[map<string,main.bigStruct>]
	ProcessGoSwissMap 9d 00 00 00 98 00 00 00 10 18 
	Return 
// 0x44a: ProcessType[map<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoSwissMap aa 00 00 00 a2 00 00 00 10 18 
	Return 
// 0x456: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer a7 00 00 00 
	Return 
// 0x45c: ProcessType[map[string]int]
	ProcessPointer 70 00 00 00 
	Return 
// 0x462: ProcessType[map[string]main.bigStruct]
	ProcessPointer 75 00 00 00 
	Return 
// 0x468: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 7a 00 00 00 
	Return 
// 0x46e: ProcessType[noalg.[8]struct { key string; elem *main.bigStruct }]
	ProcessArrayDataPrep c0 00 00 00 
	Call bf 04 00 00 // ProcessType[noalg.struct { key string; elem *main.bigStruct }]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x47e: ProcessType[noalg.[8]struct { key string; elem int }]
	ProcessArrayDataPrep c0 00 00 00 
	Call cf 04 00 00 // ProcessType[noalg.struct { key string; elem int }]
	ProcessSliceDataRepeat 18 00 00 00 
	Return 
// 0x48e: ProcessType[noalg.[8]struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	ProcessArrayDataPrep 80 00 00 00 
	Call d5 04 00 00 // ProcessType[noalg.struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x49e: ProcessType[noalg.map.group[string]int]
	IncrementOutputOffset 08 00 00 00 
	Call 7e 04 00 00 // ProcessType[noalg.[8]struct { key string; elem int }]
	Return 
// 0x4a9: ProcessType[noalg.map.group[string]main.bigStruct]
	IncrementOutputOffset 08 00 00 00 
	Call 6e 04 00 00 // ProcessType[noalg.[8]struct { key string; elem *main.bigStruct }]
	Return 
// 0x4b4: ProcessType[noalg.map.group[uint8]map[int]main.aStructNotUsedAsAnArgument]
	IncrementOutputOffset 08 00 00 00 
	Call 8e 04 00 00 // ProcessType[noalg.[8]struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	Return 
// 0x4bf: ProcessType[noalg.struct { key string; elem *main.bigStruct }]
	Call ca 05 00 00 // ProcessType[string]
	IncrementOutputOffset 10 00 00 00 
	Call 9c 02 00 00 // ProcessType[*main.bigStruct]
	Return 
// 0x4cf: ProcessType[noalg.struct { key string; elem int }]
	Call ca 05 00 00 // ProcessType[string]
	Return 
// 0x4d5: ProcessType[noalg.struct { key uint8; elem map[int]main.aStructNotUsedAsAnArgument }]
	IncrementOutputOffset 08 00 00 00 
	Call 56 04 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x4e0: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call a8 02 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call a2 02 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call c0 02 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b0 00 00 00 
	Call e0 03 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call 6c 02 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call cc 02 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call ea 03 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call d8 02 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call b4 02 00 00 // ProcessType[*runtime.coro]
	IncrementOutputOffset 08 00 00 00 
	Call d2 02 00 00 // ProcessType[*runtime.synctestBubble]
	Return 
// 0x545: ProcessType[runtime.m]
	Call ba 02 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 48 00 00 00 
	Call ba 02 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call ba 02 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call ca 05 00 00 // ProcessType[string]
	IncrementOutputOffset 30 00 00 00 
	Call 56 03 00 00 // ProcessType[[]*runtime.p]
	IncrementOutputOffset 28 00 00 00 
	Call ae 02 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call c0 02 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 30 01 00 00 
	Call af 05 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 30 00 00 00 
	Call ea 03 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call c0 02 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call ba 05 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x5af: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call ea 03 00 00 // ProcessType[[]uintptr]
	Return 
// 0x5ba: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call 36 03 00 00 // ProcessType[[2][2]*runtime.traceBuf]
	Call c0 02 00 00 // ProcessType[*runtime.m]
	Return 
// 0x5ca: ProcessType[string]
	ProcessString 80 00 00 00 
	Return 
// 0x5d0: ProcessType[table<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call f6 03 00 00 // ProcessType[groupReference<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x5db: ProcessType[table<string,int>]
	IncrementOutputOffset 10 00 00 00 
	Call 02 04 00 00 // ProcessType[groupReference<string,int>]
	Return 
// 0x5e6: ProcessType[table<string,main.bigStruct>]
	IncrementOutputOffset 10 00 00 00 
	Call 0e 04 00 00 // ProcessType[groupReference<string,main.bigStruct>]
	Return 
// 0x5f1: ProcessType[table<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call 1a 04 00 00 // ProcessType[groupReference<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 794
ID: 6 Len: 2 Enqueue: 0
ID: 7 Len: 8 Enqueue: 0
ID: 8 Len: 8 Enqueue: 0
ID: 9 Len: 16 Enqueue: 1482
ID: 10 Len: 4 Enqueue: 0
ID: 11 Len: 8 Enqueue: 626
ID: 12 Len: 8 Enqueue: 0
ID: 13 Len: 16 Enqueue: 1012
ID: 14 Len: 8 Enqueue: 0
ID: 15 Len: 8 Enqueue: 0
ID: 16 Len: 1 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 4 Enqueue: 0
ID: 19 Len: 8 Enqueue: 800
ID: 20 Len: 8 Enqueue: 656
ID: 21 Len: 8 Enqueue: 782
ID: 22 Len: 440 Enqueue: 1248
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 680
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 674
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 704
ID: 29 Len: 1816 Enqueue: 1349
ID: 30 Len: 48 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 992
ID: 39 Len: 8 Enqueue: 620
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 716
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1002
ID: 44 Len: 8 Enqueue: 728
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 692
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 8 Enqueue: 722
ID: 50 Len: 8 Enqueue: 0
ID: 51 Len: 32 Enqueue: 0
ID: 52 Len: 32 Enqueue: 0
ID: 53 Len: 12 Enqueue: 0
ID: 54 Len: 16 Enqueue: 0
ID: 55 Len: 8 Enqueue: 698
ID: 56 Len: 40 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 48 Enqueue: 0
ID: 59 Len: 8 Enqueue: 0
ID: 60 Len: 8 Enqueue: 0
ID: 61 Len: 4 Enqueue: 0
ID: 62 Len: 24 Enqueue: 854
ID: 63 Len: 8 Enqueue: 0
ID: 64 Len: 8 Enqueue: 710
ID: 65 Len: 8 Enqueue: 686
ID: 66 Len: 8 Enqueue: 0
ID: 67 Len: 8 Enqueue: 0
ID: 68 Len: 256 Enqueue: 0
ID: 69 Len: 16 Enqueue: 0
ID: 70 Len: 56 Enqueue: 1455
ID: 71 Len: 8 Enqueue: 0
ID: 72 Len: 0 Enqueue: 0
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 1 Enqueue: 0
ID: 75 Len: 56 Enqueue: 1466
ID: 76 Len: 8 Enqueue: 0
ID: 77 Len: 32 Enqueue: 822
ID: 78 Len: 16 Enqueue: 806
ID: 79 Len: 8 Enqueue: 734
ID: 80 Len: 8 Enqueue: 0
ID: 81 Len: 48 Enqueue: 0
ID: 82 Len: 0 Enqueue: 0
ID: 83 Len: 392 Enqueue: 0
ID: 84 Len: 384 Enqueue: 0
ID: 85 Len: 192 Enqueue: 0
ID: 86 Len: 24 Enqueue: 0
ID: 87 Len: 0 Enqueue: 0
ID: 88 Len: 24 Enqueue: 0
ID: 89 Len: 304 Enqueue: 0
ID: 90 Len: 256 Enqueue: 0
ID: 91 Len: 32 Enqueue: 0
ID: 92 Len: 160 Enqueue: 0
ID: 93 Len: 16 Enqueue: 0
ID: 94 Len: 8 Enqueue: 0
ID: 95 Len: 8 Enqueue: 740
ID: 96 Len: 8 Enqueue: 0
ID: 97 Len: 16 Enqueue: 0
ID: 98 Len: 8 Enqueue: 644
ID: 99 Len: 8 Enqueue: 650
ID: 100 Len: 8 Enqueue: 662
ID: 101 Len: 8 Enqueue: 788
ID: 102 Len: 8 Enqueue: 632
ID: 103 Len: 8 Enqueue: 638
ID: 104 Len: 8 Enqueue: 770
ID: 105 Len: 8 Enqueue: 776
ID: 106 Len: 24 Enqueue: 924
ID: 107 Len: 24 Enqueue: 0
ID: 108 Len: 24 Enqueue: 970
ID: 109 Len: 48 Enqueue: 838
ID: 110 Len: 8 Enqueue: 1116
ID: 111 Len: 8 Enqueue: 0
ID: 112 Len: 48 Enqueue: 1074
ID: 113 Len: 8 Enqueue: 0
ID: 114 Len: 8 Enqueue: 752
ID: 115 Len: 8 Enqueue: 1122
ID: 116 Len: 8 Enqueue: 0
ID: 117 Len: 48 Enqueue: 1086
ID: 118 Len: 8 Enqueue: 0
ID: 119 Len: 8 Enqueue: 758
ID: 120 Len: 8 Enqueue: 1128
ID: 121 Len: 8 Enqueue: 0
ID: 122 Len: 48 Enqueue: 1098
ID: 123 Len: 8 Enqueue: 0
ID: 124 Len: 8 Enqueue: 764
ID: 125 Len: 8 Enqueue: 596
ID: 126 Len: 8 Enqueue: 602
ID: 127 Len: 8 Enqueue: 614
ID: 128 Len: 1 Enqueue: 0
ID: 129 Len: 8 Enqueue: 0
ID: 130 Len: 1 Enqueue: 0
ID: 131 Len: 8 Enqueue: 0
ID: 132 Len: 8 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 8 Enqueue: 864
ID: 136 Len: 8 Enqueue: 0
ID: 137 Len: 8 Enqueue: 0
ID: 138 Len: 8 Enqueue: 0
ID: 139 Len: 16 Enqueue: 980
ID: 140 Len: 8 Enqueue: 0
ID: 141 Len: 32 Enqueue: 1499
ID: 142 Len: 16 Enqueue: 1026
ID: 143 Len: 8 Enqueue: 0
ID: 144 Len: 200 Enqueue: 1182
ID: 145 Len: 192 Enqueue: 1150
ID: 146 Len: 24 Enqueue: 1231
ID: 147 Len: 8 Enqueue: 888
ID: 148 Len: 200 Enqueue: 934
ID: 149 Len: 32 Enqueue: 1510
ID: 150 Len: 16 Enqueue: 1038
ID: 151 Len: 8 Enqueue: 0
ID: 152 Len: 200 Enqueue: 1193
ID: 153 Len: 192 Enqueue: 1134
ID: 154 Len: 24 Enqueue: 1215
ID: 155 Len: 8 Enqueue: 668
ID: 156 Len: 184 Enqueue: 0
ID: 157 Len: 8 Enqueue: 900
ID: 158 Len: 200 Enqueue: 946
ID: 159 Len: 32 Enqueue: 1521
ID: 160 Len: 16 Enqueue: 1050
ID: 161 Len: 8 Enqueue: 0
ID: 162 Len: 136 Enqueue: 1204
ID: 163 Len: 128 Enqueue: 1166
ID: 164 Len: 16 Enqueue: 1237
ID: 165 Len: 8 Enqueue: 1110
ID: 166 Len: 8 Enqueue: 0
ID: 167 Len: 48 Enqueue: 1062
ID: 168 Len: 8 Enqueue: 0
ID: 169 Len: 8 Enqueue: 746
ID: 170 Len: 8 Enqueue: 912
ID: 171 Len: 136 Enqueue: 958
ID: 172 Len: 32 Enqueue: 1488
ID: 173 Len: 16 Enqueue: 1014
ID: 174 Len: 8 Enqueue: 0
ID: 175 Len: 136 Enqueue: 0
ID: 176 Len: 128 Enqueue: 0
ID: 177 Len: 16 Enqueue: 0
ID: 178 Len: 8 Enqueue: 0
ID: 179 Len: 8 Enqueue: 876
ID: 180 Len: 136 Enqueue: 0
ID: 181 Len: 8 Enqueue: 608
ID: 182 Len: 128 Enqueue: 0
ID: 183 Len: 9 Enqueue: 0
ID: 184 Len: 17 Enqueue: 0
ID: 185 Len: 25 Enqueue: 0
ID: 186 Len: 25 Enqueue: 0
ID: 187 Len: 25 Enqueue: 0
ID: 188 Len: 49 Enqueue: 0
ID: 189 Len: 49 Enqueue: 0
ID: 190 Len: 9 Enqueue: 0
ID: 191 Len: 9 Enqueue: 0
ID: 192 Len: 0 Enqueue: 0
ID: 193 Len: 0 Enqueue: 0
ID: 194 Len: 9 Enqueue: 0
ID: 195 Len: 9 Enqueue: 0
ID: 196 Len: 9 Enqueue: 0
