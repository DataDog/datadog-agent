// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.intArg]@0x4a806a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x19: ProcessEvent[Probe[main.intArg]@4a806a]
	PrepareEventRoot 35 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.intArg]@0x4a806a.expr[0]]
	Return 
// 0x28: ProcessType[string]
	ProcessString 2b 00 00 00 
	Return 
// 0x2e: ProcessExpression[Probe[main.stringArg]@0x4a80ea.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 28 00 00 00 // ProcessType[string]
	Return 
// 0x50: ProcessEvent[Probe[main.stringArg]@4a80ea]
	PrepareEventRoot 36 00 00 00 11 00 00 00 
	Call 2e 00 00 00 // ProcessExpression[Probe[main.stringArg]@0x4a80ea.expr[0]]
	Return 
// 0x5f: ProcessType[[]int]
	ProcessSlice 2d 00 00 00 08 00 00 00 
	Return 
// 0x69: ProcessExpression[Probe[main.intSliceArg]@0x4a816a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 5f 00 00 00 // ProcessType[[]int]
	Return 
// 0x92: ProcessEvent[Probe[main.intSliceArg]@4a816a]
	PrepareEventRoot 37 00 00 00 19 00 00 00 
	Call 69 00 00 00 // ProcessExpression[Probe[main.intSliceArg]@0x4a816a.expr[0]]
	Return 
// 0xa1: ProcessExpression[Probe[main.intArrayArg]@0x4a81ea.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0xbd: ProcessEvent[Probe[main.intArrayArg]@4a81ea]
	PrepareEventRoot 38 00 00 00 19 00 00 00 
	Call a1 00 00 00 // ProcessExpression[Probe[main.intArrayArg]@0x4a81ea.expr[0]]
	Return 
// 0xcc: ProcessType[[]string]
	ProcessSlice 2f 00 00 00 10 00 00 00 
	Return 
// 0xd6: ProcessExpression[Probe[main.stringSliceArg]@0x4a826a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 03 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call cc 00 00 00 // ProcessType[[]string]
	Return 
// 0xff: ProcessEvent[Probe[main.stringSliceArg]@4a826a]
	PrepareEventRoot 39 00 00 00 19 00 00 00 
	Call d6 00 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0x4a826a.expr[0]]
	Return 
// 0x10e: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 28 00 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x11e: ProcessExpression[Probe[main.stringArrayArg]@0x4a82ea.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 0e 01 00 00 // ProcessType[[3]string]
	Return 
// 0x13f: ProcessEvent[Probe[main.stringArrayArg]@4a82ea]
	PrepareEventRoot 3a 00 00 00 31 00 00 00 
	Call 1e 01 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0x4a82ea.expr[0]]
	Return 
// 0x14e: ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a8360.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 00 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 0e 01 00 00 // ProcessType[[3]string]
	Return 
// 0x16f: ProcessEvent[Probe[main.stringArrayArgFrameless]@4a8360]
	PrepareEventRoot 3b 00 00 00 31 00 00 00 
	Call 4e 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0x4a8360.expr[0]]
	Return 
// 0x17e: ProcessExpression[Probe[main.mapArg]@0x4a844a.expr[0]]
	ExprPrepare 
	ExprSave 01 00 00 00 00 00 00 00 00 00 00 00 
	Return 
// 0x18d: ProcessEvent[Probe[main.mapArg]@4a844a]
	PrepareEventRoot 3c 00 00 00 01 00 00 00 
	Call 7e 01 00 00 // ProcessExpression[Probe[main.mapArg]@0x4a844a.expr[0]]
	Return 
// 0x19c: ProcessExpression[Probe[main.bigMapArg]@0x4a84b3.expr[0]]
	ExprPrepare 
	ExprSave 01 00 00 00 00 00 00 00 00 00 00 00 
	Return 
// 0x1ab: ProcessEvent[Probe[main.bigMapArg]@4a84b3]
	PrepareEventRoot 3d 00 00 00 01 00 00 00 
	Call 9c 01 00 00 // ProcessExpression[Probe[main.bigMapArg]@0x4a84b3.expr[0]]
	Return 
// 0x1ba: ProcessExpression[Probe[main.inlined]@0x4a838a.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x1d0: ProcessEvent[Probe[main.inlined]@4a838a]
	PrepareEventRoot 3e 00 00 00 09 00 00 00 
	Call ba 01 00 00 // ProcessExpression[Probe[main.inlined]@0x4a838a.expr[0]]
	Return 
// 0x1df: ProcessExpression[Probe[main.inlined]@0x4a7dce.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x1ef: ProcessEvent[Probe[main.inlined]@4a7dce]
	PrepareEventRoot 3e 00 00 00 09 00 00 00 
	Call df 01 00 00 // ProcessExpression[Probe[main.inlined]@0x4a7dce.expr[0]]
	Return 
// 0x1fe: ProcessType[*****int]
	ProcessPointer 03 00 00 00 
	Return 
// 0x204: ProcessExpression[Probe[main.PointerChainArg]@0x4a8006.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call fe 01 00 00 // ProcessType[*****int]
	Return 
// 0x21f: ProcessEvent[Probe[main.PointerChainArg]@4a8006]
	PrepareEventRoot 3f 00 00 00 09 00 00 00 
	Call 04 02 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0x4a8006.expr[0]]
	Return 
// 0x22e: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 28 00 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x23a: ProcessType[****int]
	ProcessPointer 04 00 00 00 
	Return 
// 0x240: ProcessType[***int]
	ProcessPointer 05 00 00 00 
	Return 
// 0x246: ProcessType[**int]
	ProcessPointer 06 00 00 00 
	Return 
// 0x24c: ProcessType[*int]
	ProcessPointer 01 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 8 Enqueue: 510
ID: 3 Len: 8 Enqueue: 570
ID: 4 Len: 8 Enqueue: 576
ID: 5 Len: 8 Enqueue: 582
ID: 6 Len: 8 Enqueue: 588
ID: 7 Len: 16 Enqueue: 40
ID: 8 Len: 8 Enqueue: 0
ID: 9 Len: 1 Enqueue: 0
ID: 10 Len: 24 Enqueue: 95
ID: 11 Len: 24 Enqueue: 0
ID: 12 Len: 24 Enqueue: 204
ID: 13 Len: 8 Enqueue: 0
ID: 14 Len: 48 Enqueue: 270
ID: 15 Len: 0 Enqueue: 0
ID: 16 Len: 8 Enqueue: 0
ID: 17 Len: 48 Enqueue: 0
ID: 18 Len: 8 Enqueue: 0
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 0
ID: 21 Len: 8 Enqueue: 0
ID: 22 Len: 32 Enqueue: 0
ID: 23 Len: 2 Enqueue: 0
ID: 24 Len: 16 Enqueue: 0
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 200 Enqueue: 0
ID: 27 Len: 192 Enqueue: 0
ID: 28 Len: 24 Enqueue: 0
ID: 29 Len: 0 Enqueue: 0
ID: 30 Len: 8 Enqueue: 0
ID: 31 Len: 48 Enqueue: 0
ID: 32 Len: 8 Enqueue: 0
ID: 33 Len: 8 Enqueue: 0
ID: 34 Len: 32 Enqueue: 0
ID: 35 Len: 16 Enqueue: 0
ID: 36 Len: 8 Enqueue: 0
ID: 37 Len: 200 Enqueue: 0
ID: 38 Len: 192 Enqueue: 0
ID: 39 Len: 24 Enqueue: 0
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 184 Enqueue: 0
ID: 42 Len: 128 Enqueue: 0
ID: 43 Len: 512 Enqueue: 0
ID: 44 Len: 8 Enqueue: 0
ID: 45 Len: 512 Enqueue: 0
ID: 46 Len: 8 Enqueue: 0
ID: 47 Len: 512 Enqueue: 558
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 2048 Enqueue: 0
ID: 50 Len: 512 Enqueue: 0
ID: 51 Len: 2048 Enqueue: 0
ID: 52 Len: 512 Enqueue: 0
ID: 53 Len: 9 Enqueue: 0
ID: 54 Len: 17 Enqueue: 0
ID: 55 Len: 25 Enqueue: 0
ID: 56 Len: 25 Enqueue: 0
ID: 57 Len: 25 Enqueue: 0
ID: 58 Len: 49 Enqueue: 0
ID: 59 Len: 49 Enqueue: 0
ID: 60 Len: 1 Enqueue: 0
ID: 61 Len: 1 Enqueue: 0
ID: 62 Len: 9 Enqueue: 0
ID: 63 Len: 9 Enqueue: 0
