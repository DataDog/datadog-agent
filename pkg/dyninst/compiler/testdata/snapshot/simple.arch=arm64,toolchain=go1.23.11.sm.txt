// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0xb5388.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 57 04 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@b5388]
	PrepareEventRoot c3 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0xb5388.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0xb53c0.expr[0]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 69 04 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@b53c0]
	PrepareEventRoot c4 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0xb53c0.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0xb5880.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 97 06 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@b5880]
	PrepareEventRoot bb 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0xb5880.expr[0]]
	Return 
// 0x81: ProcessEvent[Probe[main.bigMapArg]Return@b58f4]
	PrepareEventRoot bc 00 00 00 00 00 00 00 
	Return 
// 0x8b: ProcessExpression[Probe[main.inlined]@0xb519c.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x9b: ProcessEvent[Probe[main.inlined]@b519c]
	PrepareEventRoot c1 00 00 00 09 00 00 00 
	Call 8b 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb519c.expr[0]]
	Return 
// 0xaa: ProcessExpression[Probe[main.inlined]@0xb5748.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc0: ProcessEvent[Probe[main.inlined]@b5748]
	PrepareEventRoot c1 00 00 00 09 00 00 00 
	Call aa 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb5748.expr[0]]
	Return 
// 0xcf: ProcessEvent[Probe[main.inlined]Return@b5780]
	PrepareEventRoot c2 00 00 00 00 00 00 00 
	Return 
// 0xd9: ProcessExpression[Probe[main.intArg]@0xb5428.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xef: ProcessEvent[Probe[main.intArg]@b5428]
	PrepareEventRoot a2 00 00 00 09 00 00 00 
	Call d9 00 00 00 // ProcessExpression[Probe[main.intArg]@0xb5428.expr[0]]
	Return 
// 0xfe: ProcessEvent[Probe[main.intArg]Return@b5460]
	PrepareEventRoot a3 00 00 00 00 00 00 00 
	Return 
// 0x108: ProcessExpression[Probe[main.intArrayArg]@0xb55a8.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x124: ProcessEvent[Probe[main.intArrayArg]@b55a8]
	PrepareEventRoot b2 00 00 00 19 00 00 00 
	Call 08 01 00 00 // ProcessExpression[Probe[main.intArrayArg]@0xb55a8.expr[0]]
	Return 
// 0x133: ProcessEvent[Probe[main.intArrayArg]Return@b55ec]
	PrepareEventRoot b3 00 00 00 00 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5720.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 39 05 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@b5720]
	PrepareEventRoot b8 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5720.expr[0]]
	Return 
// 0x16d: ProcessExpression[Probe[main.intSliceArg]@0xb5518.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 85 05 00 00 // ProcessType[[]int]
	Return 
// 0x196: ProcessEvent[Probe[main.intSliceArg]@b5518]
	PrepareEventRoot b0 00 00 00 19 00 00 00 
	Call 6d 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0xb5518.expr[0]]
	Return 
// 0x1a5: ProcessEvent[Probe[main.intSliceArg]Return@b5554]
	PrepareEventRoot b1 00 00 00 00 00 00 00 
	Return 
// 0x1af: ProcessExpression[Probe[main.mapArg]@0xb5808.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 91 06 00 00 // ProcessType[map[string]int]
	Return 
// 0x1ca: ProcessEvent[Probe[main.mapArg]@b5808]
	PrepareEventRoot b9 00 00 00 09 00 00 00 
	Call af 01 00 00 // ProcessExpression[Probe[main.mapArg]@0xb5808.expr[0]]
	Return 
// 0x1d9: ProcessEvent[Probe[main.mapArg]Return@b5838]
	PrepareEventRoot ba 00 00 00 00 00 00 00 
	Return 
// 0x1e3: ProcessEvent[Probe[main.noArgs]@b5938]
	PrepareEventRoot bd 00 00 00 00 00 00 00 
	Return 
// 0x1ed: ProcessEvent[Probe[main.noArgs]Return@b5970]
	PrepareEventRoot be 00 00 00 00 00 00 00 
	Return 
// 0x1f7: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x219: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot a4 00 00 00 11 00 00 00 
	Call f7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x228: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot a5 00 00 00 00 00 00 00 
	Return 
// 0x232: ProcessExpression[Probe[main.stringArrayArg]@0xb56b8.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 39 05 00 00 // ProcessType[[3]string]
	Return 
// 0x253: ProcessEvent[Probe[main.stringArrayArg]@b56b8]
	PrepareEventRoot b6 00 00 00 31 00 00 00 
	Call 32 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0xb56b8.expr[0]]
	Return 
// 0x262: ProcessEvent[Probe[main.stringArrayArg]Return@b56fc]
	PrepareEventRoot b7 00 00 00 00 00 00 00 
	Return 
// 0x26c: ProcessExpression[Probe[main.stringSliceArg]@0xb5628.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 9f 05 00 00 // ProcessType[[]string]
	Return 
// 0x295: ProcessEvent[Probe[main.stringSliceArg]@b5628]
	PrepareEventRoot b4 00 00 00 19 00 00 00 
	Call 6c 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0xb5628.expr[0]]
	Return 
// 0x2a4: ProcessEvent[Probe[main.stringSliceArg]Return@b5664]
	PrepareEventRoot b5 00 00 00 00 00 00 00 
	Return 
// 0x2ae: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x2d0: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot a6 00 00 00 11 00 00 00 
	Call ae 02 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x2df: ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x2f4: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot a7 00 00 00 11 00 00 00 
	Call df 02 00 00 // ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	Return 
// 0x303: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x325: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot a8 00 00 00 11 00 00 00 
	Call 03 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x334: ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x349: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot a9 00 00 00 11 00 00 00 
	Call 34 03 00 00 // ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	Return 
// 0x358: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x37a: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot aa 00 00 00 11 00 00 00 
	Call 58 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x389: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot ab 00 00 00 00 00 00 00 
	Return 
// 0x393: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x3b5: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot ac 00 00 00 11 00 00 00 
	Call 93 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x3c4: ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x3d9: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot ad 00 00 00 11 00 00 00 
	Call c4 03 00 00 // ProcessExpression[Probe[main.stringArg]Return@0xb54d4.expr[0]]
	Return 
// 0x3e8: ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	Return 
// 0x40a: ProcessEvent[Probe[main.stringArg]@b5498]
	PrepareEventRoot ae 00 00 00 11 00 00 00 
	Call e8 03 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5498.expr[0]]
	Return 
// 0x419: ProcessEvent[Probe[main.stringArg]Return@b54d4]
	PrepareEventRoot af 00 00 00 00 00 00 00 
	Return 
// 0x423: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@b59b0]
	PrepareEventRoot bf 00 00 00 00 00 00 00 
	Return 
// 0x42d: ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb5b24.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call a3 06 00 00 // ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x448: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@b5b24]
	PrepareEventRoot c0 00 00 00 09 00 00 00 
	Call 2d 04 00 00 // ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb5b24.expr[0]]
	Return 
// 0x457: ProcessType[*****int]
	ProcessPointer 7f 00 00 00 
	Return 
// 0x45d: ProcessType[****int]
	ProcessPointer a0 00 00 00 
	Return 
// 0x463: ProcessType[***int]
	ProcessPointer 80 00 00 00 
	Return 
// 0x469: ProcessType[**int]
	ProcessPointer 5e 00 00 00 
	Return 
// 0x46f: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x475: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x47b: ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer 99 00 00 00 
	Return 
// 0x481: ProcessType[*bucket<string,int>]
	ProcessPointer 6c 00 00 00 
	Return 
// 0x487: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 73 00 00 00 
	Return 
// 0x48d: ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 7d 00 00 00 
	Return 
// 0x493: ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 78 00 00 00 
	Return 
// 0x499: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x49f: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x4a5: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x4ab: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x4b1: ProcessType[*int32]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x4b7: ProcessType[*int64]
	ProcessPointer 0e 00 00 00 
	Return 
// 0x4bd: ProcessType[*main.bigStruct]
	ProcessPointer 91 00 00 00 
	Return 
// 0x4c3: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x4c9: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x4cf: ProcessType[*runtime.cgoCallers]
	ProcessPointer 3d 00 00 00 
	Return 
// 0x4d5: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x4db: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x4e1: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x4e7: ProcessType[*runtime.mapextra]
	ProcessPointer 6e 00 00 00 
	Return 
// 0x4ed: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x4f3: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x4f9: ProcessType[*runtime.traceBuf]
	ProcessPointer 49 00 00 00 
	Return 
// 0x4ff: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x505: ProcessType[*uint]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x50b: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x511: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x517: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x51d: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x523: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x529: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call f9 04 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x539: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x549: ProcessType[[]bucket<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call e9 05 00 00 // ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x555: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call f4 05 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x561: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call 09 06 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x56d: ProcessType[[]bucket<string,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 1e 06 00 00 // ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x579: ProcessType[[]bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 33 06 00 00 // ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x585: ProcessType[[]int]
	ProcessSlice 87 00 00 00 08 00 00 00 
	Return 
// 0x58f: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x59f: ProcessType[[]string]
	ProcessSlice 89 00 00 00 10 00 00 00 
	Return 
// 0x5a9: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 7f 07 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x5b5: ProcessType[[]uint8]
	ProcessSlice 83 00 00 00 01 00 00 00 
	Return 
// 0x5bf: ProcessType[[]uintptr]
	ProcessSlice 85 00 00 00 08 00 00 00 
	Return 
// 0x5c9: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call bd 04 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x5d9: ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 8b 06 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x5e9: ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 88 00 00 00 
	Call 7b 04 00 00 // ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x5f4: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 8f 05 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 81 04 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x609: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 8f 05 00 00 // ProcessType[[]key<string>]
	Call c9 05 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 87 04 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x61e: ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 08 00 00 00 
	Call 8f 05 00 00 // ProcessType[[]key<string>]
	Call d9 05 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 8d 04 00 00 // ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x633: ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call d9 05 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 93 04 00 00 // ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x643: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x645: ProcessType[hash<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9f 00 00 00 90 00 00 00 08 09 10 18 
	Return 
// 0x653: ProcessType[hash<string,int>]
	ProcessGoHmap 8e 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x661: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 92 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x66f: ProcessType[hash<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9b 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x67d: ProcessType[hash<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9a 00 00 00 58 00 00 00 08 09 10 18 
	Return 
// 0x68b: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 97 00 00 00 
	Return 
// 0x691: ProcessType[map[string]int]
	ProcessPointer 6a 00 00 00 
	Return 
// 0x697: ProcessType[map[string]main.bigStruct]
	ProcessPointer 71 00 00 00 
	Return 
// 0x69d: ProcessType[map[string]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 7b 00 00 00 
	Return 
// 0x6a3: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 76 00 00 00 
	Return 
// 0x6a9: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call c9 04 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call c3 04 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call e1 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b8 00 00 00 
	Call b5 05 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call 6f 04 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call ed 04 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call bf 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call f3 04 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call d5 04 00 00 // ProcessType[*runtime.coro]
	Return 
// 0x704: ProcessType[runtime.m]
	Call db 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 50 00 00 00 
	Call db 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call db 04 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call 7f 07 00 00 // ProcessType[string]
	IncrementOutputOffset 40 00 00 00 
	Call cf 04 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call e1 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 28 01 00 00 
	Call 64 07 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 38 00 00 00 
	Call bf 05 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call e1 04 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call 6f 07 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x764: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call bf 05 00 00 // ProcessType[[]uintptr]
	Return 
// 0x76f: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call 29 05 00 00 // ProcessType[[2]*runtime.traceBuf]
	Call e1 04 00 00 // ProcessType[*runtime.m]
	Return 
// 0x77f: ProcessType[string]
	ProcessString 81 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 1141
ID: 6 Len: 8 Enqueue: 1309
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 1315
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 1919
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 8 Enqueue: 0
ID: 13 Len: 4 Enqueue: 0
ID: 14 Len: 8 Enqueue: 0
ID: 15 Len: 1 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 1603
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 1201
ID: 21 Len: 8 Enqueue: 1297
ID: 22 Len: 432 Enqueue: 1705
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 1225
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 1219
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 1249
ID: 29 Len: 1760 Enqueue: 1796
ID: 30 Len: 56 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 1461
ID: 39 Len: 8 Enqueue: 1135
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 1261
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1471
ID: 44 Len: 8 Enqueue: 1267
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 1237
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 32 Enqueue: 0
ID: 50 Len: 32 Enqueue: 0
ID: 51 Len: 12 Enqueue: 0
ID: 52 Len: 16 Enqueue: 0
ID: 53 Len: 8 Enqueue: 1243
ID: 54 Len: 40 Enqueue: 0
ID: 55 Len: 8 Enqueue: 0
ID: 56 Len: 48 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 4 Enqueue: 0
ID: 60 Len: 8 Enqueue: 1231
ID: 61 Len: 8 Enqueue: 0
ID: 62 Len: 8 Enqueue: 0
ID: 63 Len: 256 Enqueue: 0
ID: 64 Len: 64 Enqueue: 1892
ID: 65 Len: 8 Enqueue: 0
ID: 66 Len: 0 Enqueue: 0
ID: 67 Len: 8 Enqueue: 0
ID: 68 Len: 1 Enqueue: 0
ID: 69 Len: 32 Enqueue: 1903
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 16 Enqueue: 1321
ID: 72 Len: 8 Enqueue: 1273
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 48 Enqueue: 0
ID: 75 Len: 0 Enqueue: 0
ID: 76 Len: 392 Enqueue: 0
ID: 77 Len: 384 Enqueue: 0
ID: 78 Len: 192 Enqueue: 0
ID: 79 Len: 24 Enqueue: 0
ID: 80 Len: 0 Enqueue: 0
ID: 81 Len: 8 Enqueue: 0
ID: 82 Len: 304 Enqueue: 0
ID: 83 Len: 256 Enqueue: 0
ID: 84 Len: 32 Enqueue: 0
ID: 85 Len: 160 Enqueue: 0
ID: 86 Len: 16 Enqueue: 0
ID: 87 Len: 8 Enqueue: 0
ID: 88 Len: 8 Enqueue: 1279
ID: 89 Len: 2 Enqueue: 0
ID: 90 Len: 8 Enqueue: 0
ID: 91 Len: 16 Enqueue: 0
ID: 92 Len: 8 Enqueue: 1189
ID: 93 Len: 8 Enqueue: 1207
ID: 94 Len: 8 Enqueue: 1195
ID: 95 Len: 8 Enqueue: 1303
ID: 96 Len: 8 Enqueue: 1177
ID: 97 Len: 8 Enqueue: 1183
ID: 98 Len: 8 Enqueue: 1285
ID: 99 Len: 8 Enqueue: 1291
ID: 100 Len: 24 Enqueue: 1413
ID: 101 Len: 24 Enqueue: 0
ID: 102 Len: 24 Enqueue: 1439
ID: 103 Len: 48 Enqueue: 1337
ID: 104 Len: 8 Enqueue: 1681
ID: 105 Len: 8 Enqueue: 0
ID: 106 Len: 48 Enqueue: 1619
ID: 107 Len: 8 Enqueue: 1153
ID: 108 Len: 208 Enqueue: 1524
ID: 109 Len: 8 Enqueue: 1255
ID: 110 Len: 8 Enqueue: 0
ID: 111 Len: 8 Enqueue: 1687
ID: 112 Len: 8 Enqueue: 0
ID: 113 Len: 48 Enqueue: 1633
ID: 114 Len: 8 Enqueue: 1159
ID: 115 Len: 208 Enqueue: 1545
ID: 116 Len: 8 Enqueue: 1699
ID: 117 Len: 8 Enqueue: 0
ID: 118 Len: 48 Enqueue: 1661
ID: 119 Len: 8 Enqueue: 1171
ID: 120 Len: 88 Enqueue: 1587
ID: 121 Len: 8 Enqueue: 1693
ID: 122 Len: 8 Enqueue: 0
ID: 123 Len: 48 Enqueue: 1647
ID: 124 Len: 8 Enqueue: 1165
ID: 125 Len: 208 Enqueue: 1566
ID: 126 Len: 8 Enqueue: 1111
ID: 127 Len: 8 Enqueue: 1117
ID: 128 Len: 8 Enqueue: 1129
ID: 129 Len: 1 Enqueue: 0
ID: 130 Len: 8 Enqueue: 0
ID: 131 Len: 1 Enqueue: 0
ID: 132 Len: 8 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 8 Enqueue: 0
ID: 136 Len: 8 Enqueue: 0
ID: 137 Len: 16 Enqueue: 1449
ID: 138 Len: 8 Enqueue: 0
ID: 139 Len: 8 Enqueue: 0
ID: 140 Len: 128 Enqueue: 1423
ID: 141 Len: 64 Enqueue: 0
ID: 142 Len: 208 Enqueue: 1365
ID: 143 Len: 64 Enqueue: 1481
ID: 144 Len: 8 Enqueue: 1213
ID: 145 Len: 184 Enqueue: 0
ID: 146 Len: 208 Enqueue: 1377
ID: 147 Len: 8 Enqueue: 0
ID: 148 Len: 64 Enqueue: 1497
ID: 149 Len: 8 Enqueue: 1675
ID: 150 Len: 8 Enqueue: 0
ID: 151 Len: 48 Enqueue: 1605
ID: 152 Len: 8 Enqueue: 1147
ID: 153 Len: 144 Enqueue: 1513
ID: 154 Len: 88 Enqueue: 1401
ID: 155 Len: 208 Enqueue: 1389
ID: 156 Len: 64 Enqueue: 0
ID: 157 Len: 64 Enqueue: 0
ID: 158 Len: 8 Enqueue: 0
ID: 159 Len: 144 Enqueue: 1353
ID: 160 Len: 8 Enqueue: 1123
ID: 161 Len: 128 Enqueue: 0
ID: 162 Len: 9 Enqueue: 0
ID: 163 Len: 0 Enqueue: 0
ID: 164 Len: 17 Enqueue: 0
ID: 165 Len: 0 Enqueue: 0
ID: 166 Len: 17 Enqueue: 0
ID: 167 Len: 17 Enqueue: 0
ID: 168 Len: 17 Enqueue: 0
ID: 169 Len: 17 Enqueue: 0
ID: 170 Len: 17 Enqueue: 0
ID: 171 Len: 0 Enqueue: 0
ID: 172 Len: 17 Enqueue: 0
ID: 173 Len: 17 Enqueue: 0
ID: 174 Len: 17 Enqueue: 0
ID: 175 Len: 0 Enqueue: 0
ID: 176 Len: 25 Enqueue: 0
ID: 177 Len: 0 Enqueue: 0
ID: 178 Len: 25 Enqueue: 0
ID: 179 Len: 0 Enqueue: 0
ID: 180 Len: 25 Enqueue: 0
ID: 181 Len: 0 Enqueue: 0
ID: 182 Len: 49 Enqueue: 0
ID: 183 Len: 0 Enqueue: 0
ID: 184 Len: 49 Enqueue: 0
ID: 185 Len: 9 Enqueue: 0
ID: 186 Len: 0 Enqueue: 0
ID: 187 Len: 9 Enqueue: 0
ID: 188 Len: 0 Enqueue: 0
ID: 189 Len: 0 Enqueue: 0
ID: 190 Len: 0 Enqueue: 0
ID: 191 Len: 0 Enqueue: 0
ID: 192 Len: 9 Enqueue: 0
ID: 193 Len: 9 Enqueue: 0
ID: 194 Len: 0 Enqueue: 0
ID: 195 Len: 9 Enqueue: 0
ID: 196 Len: 9 Enqueue: 0
