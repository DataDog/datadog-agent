// Stack machine code
	Illegal 
// 0x1: ChasePointers
	ChasePointers 
	Return 
// 0x3: ProcessExpression[Probe[main.PointerChainArg]@0xb5508.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 40 05 00 00 // ProcessType[*****int]
	Return 
// 0x1e: ProcessEvent[Probe[main.PointerChainArg]@b5508]
	PrepareEventRoot c0 00 00 00 09 00 00 00 
	Call 03 00 00 00 // ProcessExpression[Probe[main.PointerChainArg]@0xb5508.expr[0]]
	Return 
// 0x2d: ProcessExpression[Probe[main.PointerSmallChainArg]@0xb5540.expr[0]]
	ExprPrepare 
	ExprReadRegister 05 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 52 05 00 00 // ProcessType[**int]
	Return 
// 0x48: ProcessEvent[Probe[main.PointerSmallChainArg]@b5540]
	PrepareEventRoot c1 00 00 00 09 00 00 00 
	Call 2d 00 00 00 // ProcessExpression[Probe[main.PointerSmallChainArg]@0xb5540.expr[0]]
	Return 
// 0x57: ProcessExpression[Probe[main.bigMapArg]@0xb5a70.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 8b 07 00 00 // ProcessType[map[string]main.bigStruct]
	Return 
// 0x72: ProcessEvent[Probe[main.bigMapArg]@b5a70]
	PrepareEventRoot b2 00 00 00 09 00 00 00 
	Call 57 00 00 00 // ProcessExpression[Probe[main.bigMapArg]@0xb5a70.expr[0]]
	Return 
// 0x81: ProcessEvent[Probe[main.bigMapArg]Return@b5ae4]
	PrepareEventRoot b3 00 00 00 00 00 00 00 
	Return 
// 0x8b: ProcessExpression[Probe[main.inlined]@0xb531c.expr[0]]
	ExprPrepare 
	Return 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0x9b: ProcessEvent[Probe[main.inlined]@b531c]
	PrepareEventRoot be 00 00 00 09 00 00 00 
	Call 8b 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb531c.expr[0]]
	Return 
// 0xaa: ProcessExpression[Probe[main.inlined]@0xb5938.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xc0: ProcessEvent[Probe[main.inlined]@b5938]
	PrepareEventRoot be 00 00 00 09 00 00 00 
	Call aa 00 00 00 // ProcessExpression[Probe[main.inlined]@0xb5938.expr[0]]
	Return 
// 0xcf: ProcessEvent[Probe[main.inlined]Return@b5970]
	PrepareEventRoot bf 00 00 00 00 00 00 00 
	Return 
// 0xd9: ProcessExpression[Probe[main.intArg]@0xb5618.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Return 
// 0xef: ProcessEvent[Probe[main.intArg]@b5618]
	PrepareEventRoot a3 00 00 00 09 00 00 00 
	Call d9 00 00 00 // ProcessExpression[Probe[main.intArg]@0xb5618.expr[0]]
	Return 
// 0xfe: ProcessEvent[Probe[main.intArg]Return@b5650]
	PrepareEventRoot a4 00 00 00 00 00 00 00 
	Return 
// 0x108: ProcessExpression[Probe[main.intArrayArg]@0xb5798.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 18 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Return 
// 0x124: ProcessEvent[Probe[main.intArrayArg]@b5798]
	PrepareEventRoot a9 00 00 00 19 00 00 00 
	Call 08 01 00 00 // ProcessExpression[Probe[main.intArrayArg]@0xb5798.expr[0]]
	Return 
// 0x133: ProcessEvent[Probe[main.intArrayArg]Return@b57dc]
	PrepareEventRoot aa 00 00 00 00 00 00 00 
	Return 
// 0x13d: ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5910.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 22 06 00 00 // ProcessType[[3]string]
	Return 
// 0x15e: ProcessEvent[Probe[main.stringArrayArgFrameless]@b5910]
	PrepareEventRoot af 00 00 00 31 00 00 00 
	Call 3d 01 00 00 // ProcessExpression[Probe[main.stringArrayArgFrameless]@0xb5910.expr[0]]
	Return 
// 0x16d: ProcessExpression[Probe[main.intSliceArg]@0xb5708.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 6e 06 00 00 // ProcessType[[]int]
	Return 
// 0x196: ProcessEvent[Probe[main.intSliceArg]@b5708]
	PrepareEventRoot a7 00 00 00 19 00 00 00 
	Call 6d 01 00 00 // ProcessExpression[Probe[main.intSliceArg]@0xb5708.expr[0]]
	Return 
// 0x1a5: ProcessEvent[Probe[main.intSliceArg]Return@b5744]
	PrepareEventRoot a8 00 00 00 00 00 00 00 
	Return 
// 0x1af: ProcessExpression[Probe[main.mapArg]@0xb59f8.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 85 07 00 00 // ProcessType[map[string]int]
	Return 
// 0x1ca: ProcessEvent[Probe[main.mapArg]@b59f8]
	PrepareEventRoot b0 00 00 00 09 00 00 00 
	Call af 01 00 00 // ProcessExpression[Probe[main.mapArg]@0xb59f8.expr[0]]
	Return 
// 0x1d9: ProcessEvent[Probe[main.mapArg]Return@b5a28]
	PrepareEventRoot b1 00 00 00 00 00 00 00 
	Return 
// 0x1e3: ProcessEvent[Probe[main.noArgs]@b5b28]
	PrepareEventRoot b4 00 00 00 00 00 00 00 
	Return 
// 0x1ed: ProcessEvent[Probe[main.noArgs]Return@b5b60]
	PrepareEventRoot b5 00 00 00 00 00 00 00 
	Return 
// 0x1f7: ProcessExpression[Probe[main.stringArg]@0xb5688.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprSave 01 00 00 00 10 00 00 00 00 00 00 00 
	Call 73 08 00 00 // ProcessType[string]
	Return 
// 0x219: ProcessEvent[Probe[main.stringArg]@b5688]
	PrepareEventRoot a5 00 00 00 11 00 00 00 
	Call f7 01 00 00 // ProcessExpression[Probe[main.stringArg]@0xb5688.expr[0]]
	Return 
// 0x228: ProcessEvent[Probe[main.stringArg]Return@b56c4]
	PrepareEventRoot a6 00 00 00 00 00 00 00 
	Return 
// 0x232: ProcessExpression[Probe[main.stringArrayArg]@0xb58a8.expr[0]]
	ExprPrepare 
	ExprDereferenceCfa 08 00 00 00 30 00 00 00 00 00 00 00 
	ExprSave 01 00 00 00 30 00 00 00 00 00 00 00 
	Call 22 06 00 00 // ProcessType[[3]string]
	Return 
// 0x253: ProcessEvent[Probe[main.stringArrayArg]@b58a8]
	PrepareEventRoot ad 00 00 00 31 00 00 00 
	Call 32 02 00 00 // ProcessExpression[Probe[main.stringArrayArg]@0xb58a8.expr[0]]
	Return 
// 0x262: ProcessEvent[Probe[main.stringArrayArg]Return@b58ec]
	PrepareEventRoot ae 00 00 00 00 00 00 00 
	Return 
// 0x26c: ProcessExpression[Probe[main.stringSliceArg]@0xb5818.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 88 06 00 00 // ProcessType[[]string]
	Return 
// 0x295: ProcessEvent[Probe[main.stringSliceArg]@b5818]
	PrepareEventRoot ab 00 00 00 19 00 00 00 
	Call 6c 02 00 00 // ProcessExpression[Probe[main.stringSliceArg]@0xb5818.expr[0]]
	Return 
// 0x2a4: ProcessEvent[Probe[main.stringSliceArg]Return@b5854]
	PrepareEventRoot ac 00 00 00 00 00 00 00 
	Return 
// 0x2ae: ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x2d7: ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[1]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 19 00 00 00 18 00 00 00 01 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x300: ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[2]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 31 00 00 00 08 00 00 00 02 00 00 00 
	Return 
// 0x316: ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[3]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 39 00 00 00 08 00 00 00 03 00 00 00 
	Return 
// 0x32c: ProcessEvent[Probe[main.templateTest]@b5d48]
	PrepareEventRoot b8 00 00 00 41 00 00 00 
	Call ae 02 00 00 // ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[0]]
	Call d7 02 00 00 // ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[1]]
	Call 00 03 00 00 // ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[2]]
	Call 16 03 00 00 // ProcessExpression[Probe[main.templateTest]@0xb5d48.expr[3]]
	Return 
// 0x34a: ProcessEvent[Probe[main.templateTest]Return@b5dc4]
	PrepareEventRoot b9 00 00 00 00 00 00 00 
	Return 
// 0x354: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x37d: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[1]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 19 00 00 00 18 00 00 00 01 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x3a6: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[2]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 31 00 00 00 08 00 00 00 02 00 00 00 
	Return 
// 0x3bc: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[3]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 39 00 00 00 08 00 00 00 03 00 00 00 
	Return 
// 0x3d2: ProcessEvent[Probe[main.templateTest2]@b5e00]
	PrepareEventRoot ba 00 00 00 41 00 00 00 
	Call 54 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[0]]
	Call 7d 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[1]]
	Call a6 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[2]]
	Call bc 03 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[3]]
	Return 
// 0x3f0: ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 01 00 00 00 02 00 00 00 00 00 00 00 
	Return 
// 0x406: ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[1]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 03 00 00 00 02 00 00 00 01 00 00 00 
	Return 
// 0x41c: ProcessEvent[Probe[main.templateTest2]Return@b5e04]
	PrepareEventRoot bb 00 00 00 05 00 00 00 
	Call f0 03 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[0]]
	Call 06 04 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[1]]
	Return 
// 0x430: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 01 00 00 00 18 00 00 00 00 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x459: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[1]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprReadRegister 01 08 08 00 00 00 
	ExprReadRegister 02 08 10 00 00 00 
	ExprSave 19 00 00 00 18 00 00 00 01 00 00 00 
	Call 74 07 00 00 // ProcessType[main.User]
	Return 
// 0x482: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[2]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 31 00 00 00 08 00 00 00 02 00 00 00 
	Return 
// 0x498: ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[3]]
	ExprPrepare 
	ExprReadRegister 03 08 00 00 00 00 
	ExprSave 39 00 00 00 08 00 00 00 03 00 00 00 
	Return 
// 0x4ae: ProcessEvent[Probe[main.templateTest2]@b5e00]
	PrepareEventRoot bc 00 00 00 41 00 00 00 
	Call 30 04 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[0]]
	Call 59 04 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[1]]
	Call 82 04 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[2]]
	Call 98 04 00 00 // ProcessExpression[Probe[main.templateTest2]@0xb5e00.expr[3]]
	Return 
// 0x4cc: ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 01 00 00 00 02 00 00 00 00 00 00 00 
	Return 
// 0x4e2: ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[1]]
	ExprPrepare 
	ExprReadRegister 00 02 00 00 00 00 
	ExprSave 03 00 00 00 02 00 00 00 01 00 00 00 
	Return 
// 0x4f8: ProcessEvent[Probe[main.templateTest2]Return@b5e04]
	PrepareEventRoot bd 00 00 00 05 00 00 00 
	Call cc 04 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[0]]
	Call e2 04 00 00 // ProcessExpression[Probe[main.templateTest2]Return@0xb5e04.expr[1]]
	Return 
// 0x50c: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]@b5ba0]
	PrepareEventRoot b6 00 00 00 00 00 00 00 
	Return 
// 0x516: ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb5d14.expr[0]]
	ExprPrepare 
	ExprReadRegister 00 08 00 00 00 00 
	ExprSave 01 00 00 00 08 00 00 00 00 00 00 00 
	Call 97 07 00 00 // ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	Return 
// 0x531: ProcessEvent[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@b5d14]
	PrepareEventRoot b7 00 00 00 09 00 00 00 
	Call 16 05 00 00 // ProcessExpression[Probe[main.usesMapsOfMapsThatDoNotAppearAsArguments]Return@0xb5d14.expr[0]]
	Return 
// 0x540: ProcessType[*****int]
	ProcessPointer 80 00 00 00 
	Return 
// 0x546: ProcessType[****int]
	ProcessPointer a1 00 00 00 
	Return 
// 0x54c: ProcessType[***int]
	ProcessPointer 81 00 00 00 
	Return 
// 0x552: ProcessType[**int]
	ProcessPointer 5e 00 00 00 
	Return 
// 0x558: ProcessType[*[]runtime.ancestorInfo]
	ProcessPointer 28 00 00 00 
	Return 
// 0x55e: ProcessType[*bool]
	ProcessPointer 04 00 00 00 
	Return 
// 0x564: ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessPointer 9a 00 00 00 
	Return 
// 0x56a: ProcessType[*bucket<string,int>]
	ProcessPointer 6c 00 00 00 
	Return 
// 0x570: ProcessType[*bucket<string,main.bigStruct>]
	ProcessPointer 73 00 00 00 
	Return 
// 0x576: ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 7d 00 00 00 
	Return 
// 0x57c: ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessPointer 78 00 00 00 
	Return 
// 0x582: ProcessType[*error]
	ProcessPointer 12 00 00 00 
	Return 
// 0x588: ProcessType[*float32]
	ProcessPointer 10 00 00 00 
	Return 
// 0x58e: ProcessType[*float64]
	ProcessPointer 11 00 00 00 
	Return 
// 0x594: ProcessType[*int]
	ProcessPointer 09 00 00 00 
	Return 
// 0x59a: ProcessType[*int32]
	ProcessPointer 0d 00 00 00 
	Return 
// 0x5a0: ProcessType[*int64]
	ProcessPointer 0e 00 00 00 
	Return 
// 0x5a6: ProcessType[*main.bigStruct]
	ProcessPointer 92 00 00 00 
	Return 
// 0x5ac: ProcessType[*runtime._defer]
	ProcessPointer 1b 00 00 00 
	Return 
// 0x5b2: ProcessType[*runtime._panic]
	ProcessPointer 19 00 00 00 
	Return 
// 0x5b8: ProcessType[*runtime.cgoCallers]
	ProcessPointer 3d 00 00 00 
	Return 
// 0x5be: ProcessType[*runtime.coro]
	ProcessPointer 30 00 00 00 
	Return 
// 0x5c4: ProcessType[*runtime.g]
	ProcessPointer 16 00 00 00 
	Return 
// 0x5ca: ProcessType[*runtime.m]
	ProcessPointer 1d 00 00 00 
	Return 
// 0x5d0: ProcessType[*runtime.mapextra]
	ProcessPointer 6e 00 00 00 
	Return 
// 0x5d6: ProcessType[*runtime.sudog]
	ProcessPointer 2a 00 00 00 
	Return 
// 0x5dc: ProcessType[*runtime.timer]
	ProcessPointer 2d 00 00 00 
	Return 
// 0x5e2: ProcessType[*runtime.traceBuf]
	ProcessPointer 49 00 00 00 
	Return 
// 0x5e8: ProcessType[*string]
	ProcessPointer 0a 00 00 00 
	Return 
// 0x5ee: ProcessType[*uint]
	ProcessPointer 0c 00 00 00 
	Return 
// 0x5f4: ProcessType[*uint16]
	ProcessPointer 07 00 00 00 
	Return 
// 0x5fa: ProcessType[*uint32]
	ProcessPointer 02 00 00 00 
	Return 
// 0x600: ProcessType[*uint64]
	ProcessPointer 0b 00 00 00 
	Return 
// 0x606: ProcessType[*uint8]
	ProcessPointer 03 00 00 00 
	Return 
// 0x60c: ProcessType[*uintptr]
	ProcessPointer 01 00 00 00 
	Return 
// 0x612: ProcessType[[2]*runtime.traceBuf]
	ProcessArrayDataPrep 10 00 00 00 
	Call e2 05 00 00 // ProcessType[*runtime.traceBuf]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x622: ProcessType[[3]string]
	ProcessArrayDataPrep 30 00 00 00 
	Call 73 08 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x632: ProcessType[[]bucket<int,main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call d2 06 00 00 // ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x63e: ProcessType[[]bucket<string,int>.array]
	ProcessSliceDataPrep 
	Call dd 06 00 00 // ProcessType[bucket<string,int>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x64a: ProcessType[[]bucket<string,main.bigStruct>.array]
	ProcessSliceDataPrep 
	Call f2 06 00 00 // ProcessType[bucket<string,main.bigStruct>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x656: ProcessType[[]bucket<string,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 07 07 00 00 // ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x662: ProcessType[[]bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>.array]
	ProcessSliceDataPrep 
	Call 1c 07 00 00 // ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x66e: ProcessType[[]int]
	ProcessSlice 88 00 00 00 08 00 00 00 
	Return 
// 0x678: ProcessType[[]key<string>]
	ProcessArrayDataPrep 80 00 00 00 
	Call 73 08 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x688: ProcessType[[]string]
	ProcessSlice 8a 00 00 00 10 00 00 00 
	Return 
// 0x692: ProcessType[[]string.array]
	ProcessSliceDataPrep 
	Call 73 08 00 00 // ProcessType[string]
	ProcessSliceDataRepeat 10 00 00 00 
	Return 
// 0x69e: ProcessType[[]uint8]
	ProcessSlice 84 00 00 00 01 00 00 00 
	Return 
// 0x6a8: ProcessType[[]uintptr]
	ProcessSlice 86 00 00 00 08 00 00 00 
	Return 
// 0x6b2: ProcessType[[]val<main.bigStruct>]
	ProcessArrayDataPrep 40 00 00 00 
	Call a6 05 00 00 // ProcessType[*main.bigStruct]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x6c2: ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	ProcessArrayDataPrep 40 00 00 00 
	Call 7f 07 00 00 // ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessSliceDataRepeat 08 00 00 00 
	Return 
// 0x6d2: ProcessType[bucket<int,main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 88 00 00 00 
	Call 64 05 00 00 // ProcessType[*bucket<int,main.aStructNotUsedAsAnArgument>]
	Return 
// 0x6dd: ProcessType[bucket<string,int>]
	IncrementOutputOffset 08 00 00 00 
	Call 78 06 00 00 // ProcessType[[]key<string>]
	IncrementOutputOffset 40 00 00 00 
	Call 6a 05 00 00 // ProcessType[*bucket<string,int>]
	Return 
// 0x6f2: ProcessType[bucket<string,main.bigStruct>]
	IncrementOutputOffset 08 00 00 00 
	Call 78 06 00 00 // ProcessType[[]key<string>]
	Call b2 06 00 00 // ProcessType[[]val<main.bigStruct>]
	Call 70 05 00 00 // ProcessType[*bucket<string,main.bigStruct>]
	Return 
// 0x707: ProcessType[bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 08 00 00 00 
	Call 78 06 00 00 // ProcessType[[]key<string>]
	Call c2 06 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 76 05 00 00 // ProcessType[*bucket<string,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x71c: ProcessType[bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	IncrementOutputOffset 10 00 00 00 
	Call c2 06 00 00 // ProcessType[[]val<map[int]main.aStructNotUsedAsAnArgument>]
	Call 7c 05 00 00 // ProcessType[*bucket<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	Return 
// 0x72c: ProcessType[error]
	ProcessGoInterface 
	Return 
// 0x72e: ProcessType[hash<int,main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap a0 00 00 00 90 00 00 00 08 09 10 18 
	Return 
// 0x73c: ProcessType[hash<string,int>]
	ProcessGoHmap 8f 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x74a: ProcessType[hash<string,main.bigStruct>]
	ProcessGoHmap 93 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x758: ProcessType[hash<string,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9c 00 00 00 d0 00 00 00 08 09 10 18 
	Return 
// 0x766: ProcessType[hash<uint8,map[int]main.aStructNotUsedAsAnArgument>]
	ProcessGoHmap 9b 00 00 00 58 00 00 00 08 09 10 18 
	Return 
// 0x774: ProcessType[main.User]
	IncrementOutputOffset 08 00 00 00 
	Call 73 08 00 00 // ProcessType[string]
	Return 
// 0x77f: ProcessType[map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 98 00 00 00 
	Return 
// 0x785: ProcessType[map[string]int]
	ProcessPointer 6a 00 00 00 
	Return 
// 0x78b: ProcessType[map[string]main.bigStruct]
	ProcessPointer 71 00 00 00 
	Return 
// 0x791: ProcessType[map[string]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 7b 00 00 00 
	Return 
// 0x797: ProcessType[map[uint8]map[int]main.aStructNotUsedAsAnArgument]
	ProcessPointer 76 00 00 00 
	Return 
// 0x79d: ProcessType[runtime.g]
	IncrementOutputOffset 20 00 00 00 
	Call b2 05 00 00 // ProcessType[*runtime._panic]
	IncrementOutputOffset 08 00 00 00 
	Call ac 05 00 00 // ProcessType[*runtime._defer]
	IncrementOutputOffset 08 00 00 00 
	Call ca 05 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset b8 00 00 00 
	Call 9e 06 00 00 // ProcessType[[]uint8]
	IncrementOutputOffset 40 00 00 00 
	Call 58 05 00 00 // ProcessType[*[]runtime.ancestorInfo]
	IncrementOutputOffset 18 00 00 00 
	Call d6 05 00 00 // ProcessType[*runtime.sudog]
	IncrementOutputOffset 08 00 00 00 
	Call a8 06 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 20 00 00 00 
	Call dc 05 00 00 // ProcessType[*runtime.timer]
	IncrementOutputOffset 18 00 00 00 
	Call be 05 00 00 // ProcessType[*runtime.coro]
	Return 
// 0x7f8: ProcessType[runtime.m]
	Call c4 05 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 50 00 00 00 
	Call c4 05 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 70 00 00 00 
	Call c4 05 00 00 // ProcessType[*runtime.g]
	IncrementOutputOffset 38 00 00 00 
	Call 73 08 00 00 // ProcessType[string]
	IncrementOutputOffset 40 00 00 00 
	Call b8 05 00 00 // ProcessType[*runtime.cgoCallers]
	IncrementOutputOffset 10 00 00 00 
	Call ca 05 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 28 01 00 00 
	Call 58 08 00 00 // ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 38 00 00 00 
	Call a8 06 00 00 // ProcessType[[]uintptr]
	IncrementOutputOffset 38 00 00 00 
	Call ca 05 00 00 // ProcessType[*runtime.m]
	IncrementOutputOffset 08 00 00 00 
	Call 63 08 00 00 // ProcessType[runtime.mTraceState]
	Return 
// 0x858: ProcessType[runtime.mLockProfile]
	IncrementOutputOffset 08 00 00 00 
	Call a8 06 00 00 // ProcessType[[]uintptr]
	Return 
// 0x863: ProcessType[runtime.mTraceState]
	IncrementOutputOffset 08 00 00 00 
	Call 12 06 00 00 // ProcessType[[2]*runtime.traceBuf]
	Call ca 05 00 00 // ProcessType[*runtime.m]
	Return 
// 0x873: ProcessType[string]
	ProcessString 82 00 00 00 
	Return 
// Extra illegal ops to simplify code bound checks
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
	Illegal 
// Types
ID: 1 Len: 8 Enqueue: 0
ID: 2 Len: 4 Enqueue: 0
ID: 3 Len: 1 Enqueue: 0
ID: 4 Len: 1 Enqueue: 0
ID: 5 Len: 8 Enqueue: 1374
ID: 6 Len: 8 Enqueue: 1542
ID: 7 Len: 2 Enqueue: 0
ID: 8 Len: 8 Enqueue: 1548
ID: 9 Len: 8 Enqueue: 0
ID: 10 Len: 16 Enqueue: 2163
ID: 11 Len: 8 Enqueue: 0
ID: 12 Len: 8 Enqueue: 0
ID: 13 Len: 4 Enqueue: 0
ID: 14 Len: 8 Enqueue: 0
ID: 15 Len: 1 Enqueue: 0
ID: 16 Len: 4 Enqueue: 0
ID: 17 Len: 8 Enqueue: 0
ID: 18 Len: 16 Enqueue: 1836
ID: 19 Len: 8 Enqueue: 0
ID: 20 Len: 8 Enqueue: 1434
ID: 21 Len: 8 Enqueue: 1530
ID: 22 Len: 432 Enqueue: 1949
ID: 23 Len: 16 Enqueue: 0
ID: 24 Len: 8 Enqueue: 1458
ID: 25 Len: 8 Enqueue: 0
ID: 26 Len: 8 Enqueue: 1452
ID: 27 Len: 8 Enqueue: 0
ID: 28 Len: 8 Enqueue: 1482
ID: 29 Len: 1760 Enqueue: 2040
ID: 30 Len: 56 Enqueue: 0
ID: 31 Len: 8 Enqueue: 0
ID: 32 Len: 4 Enqueue: 0
ID: 33 Len: 0 Enqueue: 0
ID: 34 Len: 1 Enqueue: 0
ID: 35 Len: 1 Enqueue: 0
ID: 36 Len: 1 Enqueue: 0
ID: 37 Len: 8 Enqueue: 0
ID: 38 Len: 24 Enqueue: 1694
ID: 39 Len: 8 Enqueue: 1368
ID: 40 Len: 8 Enqueue: 0
ID: 41 Len: 8 Enqueue: 1494
ID: 42 Len: 8 Enqueue: 0
ID: 43 Len: 24 Enqueue: 1704
ID: 44 Len: 8 Enqueue: 1500
ID: 45 Len: 8 Enqueue: 0
ID: 46 Len: 4 Enqueue: 0
ID: 47 Len: 8 Enqueue: 1470
ID: 48 Len: 8 Enqueue: 0
ID: 49 Len: 32 Enqueue: 0
ID: 50 Len: 32 Enqueue: 0
ID: 51 Len: 12 Enqueue: 0
ID: 52 Len: 16 Enqueue: 0
ID: 53 Len: 8 Enqueue: 1476
ID: 54 Len: 40 Enqueue: 0
ID: 55 Len: 8 Enqueue: 0
ID: 56 Len: 48 Enqueue: 0
ID: 57 Len: 8 Enqueue: 0
ID: 58 Len: 8 Enqueue: 0
ID: 59 Len: 4 Enqueue: 0
ID: 60 Len: 8 Enqueue: 1464
ID: 61 Len: 8 Enqueue: 0
ID: 62 Len: 8 Enqueue: 0
ID: 63 Len: 256 Enqueue: 0
ID: 64 Len: 64 Enqueue: 2136
ID: 65 Len: 8 Enqueue: 0
ID: 66 Len: 0 Enqueue: 0
ID: 67 Len: 8 Enqueue: 0
ID: 68 Len: 1 Enqueue: 0
ID: 69 Len: 32 Enqueue: 2147
ID: 70 Len: 8 Enqueue: 0
ID: 71 Len: 16 Enqueue: 1554
ID: 72 Len: 8 Enqueue: 1506
ID: 73 Len: 8 Enqueue: 0
ID: 74 Len: 48 Enqueue: 0
ID: 75 Len: 0 Enqueue: 0
ID: 76 Len: 392 Enqueue: 0
ID: 77 Len: 384 Enqueue: 0
ID: 78 Len: 192 Enqueue: 0
ID: 79 Len: 24 Enqueue: 0
ID: 80 Len: 0 Enqueue: 0
ID: 81 Len: 8 Enqueue: 0
ID: 82 Len: 304 Enqueue: 0
ID: 83 Len: 256 Enqueue: 0
ID: 84 Len: 32 Enqueue: 0
ID: 85 Len: 160 Enqueue: 0
ID: 86 Len: 16 Enqueue: 0
ID: 87 Len: 8 Enqueue: 0
ID: 88 Len: 8 Enqueue: 1512
ID: 89 Len: 2 Enqueue: 0
ID: 90 Len: 8 Enqueue: 0
ID: 91 Len: 16 Enqueue: 0
ID: 92 Len: 8 Enqueue: 1422
ID: 93 Len: 8 Enqueue: 1440
ID: 94 Len: 8 Enqueue: 1428
ID: 95 Len: 8 Enqueue: 1536
ID: 96 Len: 8 Enqueue: 1410
ID: 97 Len: 8 Enqueue: 1416
ID: 98 Len: 8 Enqueue: 1518
ID: 99 Len: 8 Enqueue: 1524
ID: 100 Len: 24 Enqueue: 1646
ID: 101 Len: 24 Enqueue: 0
ID: 102 Len: 24 Enqueue: 1672
ID: 103 Len: 48 Enqueue: 1570
ID: 104 Len: 8 Enqueue: 1925
ID: 105 Len: 8 Enqueue: 0
ID: 106 Len: 48 Enqueue: 1852
ID: 107 Len: 8 Enqueue: 1386
ID: 108 Len: 208 Enqueue: 1757
ID: 109 Len: 8 Enqueue: 1488
ID: 110 Len: 8 Enqueue: 0
ID: 111 Len: 8 Enqueue: 1931
ID: 112 Len: 8 Enqueue: 0
ID: 113 Len: 48 Enqueue: 1866
ID: 114 Len: 8 Enqueue: 1392
ID: 115 Len: 208 Enqueue: 1778
ID: 116 Len: 8 Enqueue: 1943
ID: 117 Len: 8 Enqueue: 0
ID: 118 Len: 48 Enqueue: 1894
ID: 119 Len: 8 Enqueue: 1404
ID: 120 Len: 88 Enqueue: 1820
ID: 121 Len: 8 Enqueue: 1937
ID: 122 Len: 8 Enqueue: 0
ID: 123 Len: 48 Enqueue: 1880
ID: 124 Len: 8 Enqueue: 1398
ID: 125 Len: 208 Enqueue: 1799
ID: 126 Len: 24 Enqueue: 1908
ID: 127 Len: 8 Enqueue: 1344
ID: 128 Len: 8 Enqueue: 1350
ID: 129 Len: 8 Enqueue: 1362
ID: 130 Len: 1 Enqueue: 0
ID: 131 Len: 8 Enqueue: 0
ID: 132 Len: 1 Enqueue: 0
ID: 133 Len: 8 Enqueue: 0
ID: 134 Len: 8 Enqueue: 0
ID: 135 Len: 8 Enqueue: 0
ID: 136 Len: 8 Enqueue: 0
ID: 137 Len: 8 Enqueue: 0
ID: 138 Len: 16 Enqueue: 1682
ID: 139 Len: 8 Enqueue: 0
ID: 140 Len: 8 Enqueue: 0
ID: 141 Len: 128 Enqueue: 1656
ID: 142 Len: 64 Enqueue: 0
ID: 143 Len: 208 Enqueue: 1598
ID: 144 Len: 64 Enqueue: 1714
ID: 145 Len: 8 Enqueue: 1446
ID: 146 Len: 184 Enqueue: 0
ID: 147 Len: 208 Enqueue: 1610
ID: 148 Len: 8 Enqueue: 0
ID: 149 Len: 64 Enqueue: 1730
ID: 150 Len: 8 Enqueue: 1919
ID: 151 Len: 8 Enqueue: 0
ID: 152 Len: 48 Enqueue: 1838
ID: 153 Len: 8 Enqueue: 1380
ID: 154 Len: 144 Enqueue: 1746
ID: 155 Len: 88 Enqueue: 1634
ID: 156 Len: 208 Enqueue: 1622
ID: 157 Len: 64 Enqueue: 0
ID: 158 Len: 64 Enqueue: 0
ID: 159 Len: 8 Enqueue: 0
ID: 160 Len: 144 Enqueue: 1586
ID: 161 Len: 8 Enqueue: 1356
ID: 162 Len: 128 Enqueue: 0
ID: 163 Len: 9 Enqueue: 0
ID: 164 Len: 0 Enqueue: 0
ID: 165 Len: 17 Enqueue: 0
ID: 166 Len: 0 Enqueue: 0
ID: 167 Len: 25 Enqueue: 0
ID: 168 Len: 0 Enqueue: 0
ID: 169 Len: 25 Enqueue: 0
ID: 170 Len: 0 Enqueue: 0
ID: 171 Len: 25 Enqueue: 0
ID: 172 Len: 0 Enqueue: 0
ID: 173 Len: 49 Enqueue: 0
ID: 174 Len: 0 Enqueue: 0
ID: 175 Len: 49 Enqueue: 0
ID: 176 Len: 9 Enqueue: 0
ID: 177 Len: 0 Enqueue: 0
ID: 178 Len: 9 Enqueue: 0
ID: 179 Len: 0 Enqueue: 0
ID: 180 Len: 0 Enqueue: 0
ID: 181 Len: 0 Enqueue: 0
ID: 182 Len: 0 Enqueue: 0
ID: 183 Len: 9 Enqueue: 0
ID: 184 Len: 65 Enqueue: 0
ID: 185 Len: 0 Enqueue: 0
ID: 186 Len: 65 Enqueue: 0
ID: 187 Len: 5 Enqueue: 0
ID: 188 Len: 65 Enqueue: 0
ID: 189 Len: 5 Enqueue: 0
ID: 190 Len: 9 Enqueue: 0
ID: 191 Len: 0 Enqueue: 0
ID: 192 Len: 9 Enqueue: 0
ID: 193 Len: 9 Enqueue: 0
