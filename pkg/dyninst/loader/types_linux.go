// Code generated by cmd/cgo -godefs; DO NOT EDIT.
// cgo -godefs -- -I ../../network/ebpf/c -I ../../ebpf/c -fsigned-char types.go

package loader

import (
	"fmt"

	"github.com/DataDog/datadog-agent/pkg/dyninst/compiler"
)

type typeInfo struct {
	Byte_len   uint32
	Enqueue_pc uint32
}
type probeParams struct {
	Throttler_idx         uint32
	Stack_machine_pc      uint32
	Pointer_chasing_limit uint32
	Frameless             bool
	Pad_cgo_0             [3]byte
}
type throttlerParams struct {
	Ns     uint64
	Budget int64
}

func opcodeByte(opcode compiler.Opcode) uint8 {
	switch opcode {
	case compiler.OpcodeInvalid:
		return 0x0
	case compiler.OpcodeCall:
		return 0x1
	case compiler.OpcodeReturn:
		return 0x2
	case compiler.OpcodeIllegal:
		return 0x3
	case compiler.OpcodeIncrementOutputOffset:
		return 0x4
	case compiler.OpcodeExprPrepare:
		return 0x5
	case compiler.OpcodeExprSave:
		return 0x6
	case compiler.OpcodeExprDereferenceCfa:
		return 0x7
	case compiler.OpcodeExprReadRegister:
		return 0x8
	case compiler.OpcodeExprDereferencePtr:
		return 0x9
	case compiler.OpcodeProcessPointer:
		return 0xa
	case compiler.OpcodeProcessSlice:
		return 0xb
	case compiler.OpcodeProcessArrayDataPrep:
		return 0xc
	case compiler.OpcodeProcessSliceDataPrep:
		return 0xd
	case compiler.OpcodeProcessSliceDataRepeat:
		return 0xe
	case compiler.OpcodeProcessString:
		return 0xf
	case compiler.OpcodeProcessGoEmptyInterface:
		return 0x10
	case compiler.OpcodeProcessGoInterface:
		return 0x11
	case compiler.OpcodeProcessGoHmap:
		return 0x12
	case compiler.OpcodeProcessGoSwissMap:
		return 0x13
	case compiler.OpcodeProcessGoSwissMapGroups:
		return 0x14
	case compiler.OpcodeChasePointers:
		return 0x15
	case compiler.OpcodePrepareEventRoot:
		return 0x16
	default:
		panic(fmt.Sprintf("unknown opcode: %s", opcode))
	}
}
