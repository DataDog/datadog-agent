load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "cpu",
    srcs = [
        "cpu.go",
        "cpu_darwin.go",
        "cpu_linux_arm64.go",
        "cpu_linux_default.go",
        "cpu_windows.go",
        "cpu_windows_386.go",
        "cpu_windows_amd64.go",
        "lscpu_linux_arm64.go",
        "util_linux.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/gohai/cpu",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/gohai/utils",
    ] + select({
        "@rules_go//go/platform:android": [
            "@com_github_cihub_seelog//:seelog",
        ],
        "@rules_go//go/platform:darwin": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_cihub_seelog//:seelog",
        ],
        "@rules_go//go/platform:windows": [
            "@org_golang_x_sys//windows/registry",
        ],
        "//conditions:default": [],
    }) + select({
        "@rules_go//go/platform:windows_386": [
            "@org_golang_x_sys//windows",
        ],
        "@rules_go//go/platform:windows_amd64": [
            "@org_golang_x_sys//windows",
        ],
        "@rules_go//go/platform:windows_arm": [
            "@org_golang_x_sys//windows",
        ],
        "@rules_go//go/platform:windows_arm64": [
            "@org_golang_x_sys//windows",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "cpu_test",
    srcs = [
        "cpu_linux_default_test.go",
        "cpu_test.go",
        "util_linux_test.go",
    ],
    embed = [":cpu"],
    deps = [
        "//pkg/gohai/utils",
        "@com_github_stretchr_testify//assert",
    ] + select({
        "@rules_go//go/platform:android_386": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android_amd64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android_arm": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:android_arm64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_386": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_amd64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_arm": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_arm64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_mips": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_mips64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_mips64le": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_mipsle": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_ppc64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_ppc64le": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_riscv64": [
            "@com_github_stretchr_testify//require",
        ],
        "@rules_go//go/platform:linux_s390x": [
            "@com_github_stretchr_testify//require",
        ],
        "//conditions:default": [],
    }),
)
