load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "metrics",
    srcs = [
        "config.go",
        "consumer.go",
        "dimensions.go",
        "exponential_histograms_translator.go",
        "kafka_mapping.go",
        "metrics_remapping.go",
        "metrics_translator.go",
        "origin.go",
        "runtime_metric_mappings.go",
        "statspayload.go",
        "ttlcache.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/opentelemetry-mapping-go/otlp/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/opentelemetry-mapping-go/otlp/attributes",
        "//pkg/opentelemetry-mapping-go/otlp/attributes/source",
        "//pkg/opentelemetry-mapping-go/otlp/metrics/internal/instrumentationlibrary",
        "//pkg/opentelemetry-mapping-go/otlp/metrics/internal/instrumentationscope",
        "//pkg/opentelemetry-mapping-go/otlp/metrics/internal/utils",
        "//pkg/proto/pbgo/trace",
        "//pkg/util/quantile",
        "@com_github_datadog_sketches_go//ddsketch",
        "@com_github_datadog_sketches_go//ddsketch/mapping",
        "@com_github_datadog_sketches_go//ddsketch/store",
        "@com_github_golang_protobuf//proto",
        "@com_github_patrickmn_go_cache//:go-cache",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@io_opentelemetry_go_otel//attribute",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "metrics_test",
    srcs = [
        "dimensions_test.go",
        "histograms_test.go",
        "metrics_remapping_test.go",
        "metrics_translator_benchmark_test.go",
        "metrics_translator_test.go",
        "mixed_metrics_test.go",
        "nan_metrics_test.go",
        "origin_test.go",
        "sketches_test.go",
        "statspayload_test.go",
        "summary_test.go",
        "testhelper_test.go",
        "ttlcache_test.go",
    ],
    embed = [":metrics"],
    deps = [
        "//pkg/opentelemetry-mapping-go/otlp/attributes",
        "//pkg/opentelemetry-mapping-go/otlp/attributes/source",
        "//pkg/proto/pbgo/trace",
        "//pkg/util/quantile",
        "//pkg/util/quantile/sketchtest",
        "//pkg/util/quantile/summary",
        "@com_github_datadog_sketches_go//ddsketch",
        "@com_github_golang_protobuf//proto",
        "@com_github_lightstep_go_expohisto//structure",
        "@com_github_open_telemetry_opentelemetry_collector_contrib_pkg_pdatatest//pmetrictest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_collector_component_componenttest//:componenttest",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//pmetric",
        "@org_golang_google_protobuf//proto",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zaptest/observer",
    ],
)
