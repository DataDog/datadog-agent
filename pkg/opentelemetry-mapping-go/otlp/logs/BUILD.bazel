load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "logs",
    srcs = [
        "doc.go",
        "transform.go",
        "translator.go",
    ],
    importpath = "github.com/DataDog/datadog-agent/pkg/opentelemetry-mapping-go/otlp/logs",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/opentelemetry-mapping-go/otlp/attributes",
        "//pkg/opentelemetry-mapping-go/otlp/attributes/source",
        "@com_github_datadog_datadog_api_client_go_v2//api/datadog",
        "@com_github_datadog_datadog_api_client_go_v2//api/datadogV2",
        "@io_opentelemetry_go_collector_component//:component",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_semconv//v1.6.1:v1_6_1",
        "@io_opentelemetry_go_otel//attribute",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "logs_test",
    srcs = ["transform_test.go"],
    embed = [":logs"],
    deps = [
        "//pkg/opentelemetry-mapping-go/otlp/attributes",
        "@com_github_datadog_datadog_api_client_go_v2//api/datadog",
        "@com_github_datadog_datadog_api_client_go_v2//api/datadogV2",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_collector_component_componenttest//:componenttest",
        "@io_opentelemetry_go_collector_pdata//pcommon",
        "@io_opentelemetry_go_collector_pdata//plog",
        "@io_opentelemetry_go_collector_semconv//v1.6.1:v1_6_1",
        "@org_uber_go_zap//zaptest",
    ],
)
