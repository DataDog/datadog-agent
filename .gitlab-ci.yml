stages:
- tests
- build
- publish

unit_tests:
 stage: tests
 image: stackstate/stackstate-agent-runner-circle:latest
 before_script:
 - mkdir -p /go/src/github.com/StackVista
 - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
 script:
 - cd /go/src/github.com/StackVista/stackstate-agent
 - pip install -r requirements.txt
 - inv deps
 - inv -e agent.build --race --precompile-only
 - inv -e test --coverage --race --profile --fail-on-fmt --cpus 4 --build-exclude clusterchecks,kubeapiserver,kubelet

integration_tests:
 stage: tests
 image: stackstate/stackstate-agent-runner-circle:latest
 before_script:
 - mkdir -p /go/src/github.com/StackVista
 - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
 script:
 - cd /go/src/github.com/StackVista/stackstate-agent
 - pip install -r requirements.txt
 - inv deps
 - inv  -e integration-tests --race --remote-docker
 tags:
 - sts-aws

filename_linting:
  stage: tests
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - pip install -r requirements.txt
  - inv deps
  - inv -e lint-filenames

docker_integration_tests:
  stage: tests
  image: stackstate/stackstate-agent-runner-circle:latest
  variables:
      DOCKER_DRIVER: overlay
  services:
    - docker:dind
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - pip install -r requirements.txt
  - inv deps
  - inv -e docker.integration-tests
  tags:
  - sts-aws

build_binaries:
  stage: build
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - pip install -r requirements.txt
  - inv deps
  - inv -e dogstatsd.build --static
  - inv -e agent.build


build_puppy:
  stage: build
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - pip install -r requirements.txt
  - inv deps
  - inv -e agent.build --puppy
  - ./bin/agent/agent -c ./bin/agent/dist check cpu


build_deb_clear_cache:
  stage: publish
  cache:
    policy: push
    key: "agent-build_publish_deb"
    paths:
      - .omnibus
      - vendor
  when: manual
  script:
    - mkdir -p .omnibus
    - rm -rf .omnibus/*
    - rm -rf vendor

build_deb:
  stage: build
  cache:
    key: "agent-build_publish_deb"
    paths:
      - .omnibus
      - vendor
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - printenv
  - echo "======================================================"
  - export CODE_ROOT=/go/src/github.com/StackVista/stackstate-agent
    # We move .omnibus out of the CI root because this seems to cause issues with git
    # cloning in omnibus and operations on datadog-agent
  - mv $CI_PROJECT_DIR/.omnibus /omnibus || mkdir -p /omnibus
  - cd $CODE_ROOT
  - pip install -r requirements.txt
  - git config --global user.email "circleci@stackstate"
  - git config --global user.name "CircleCI Stackstate"
  - apt-get install -y apt-utils libtool && apt-get install -y --only-upgrade libtool
    # Drop symlink because it will fail the build when coming from a cache
  - rm /omnibus/src/datadog-agent/src/github.com/StackVista/stackstate-agent/vendor/github.com/coreos/etcd/cmd/etcd || echo "Not found"
  - rm -rf /omnibus/pkg
  - printenv
  - inv -e agent.omnibus-build --base-dir /omnibus --skip-sign --release-version=6.5.2
  - mkdir -p $CI_PROJECT_DIR/outcomes/pkg && mkdir -p $CI_PROJECT_DIR/outcomes/dockerfiles
  - cp -r  /omnibus/pkg $CI_PROJECT_DIR/outcomes
  - cp -r  /go/src/github.com/StackVista/stackstate-agent/Dockerfiles $CI_PROJECT_DIR/outcomes
  - rm -rf /omnibus/pkg
  - mv /omnibus $CI_PROJECT_DIR/.omnibus
  artifacts:
    paths:
        - $CI_PROJECT_DIR/outcomes/pkg/*.deb
        - $CI_PROJECT_DIR/outcomes/pkg/*.json
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/agent
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/cluster-agent
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/dogstatsd
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/manifests
    expire_in: 1 week

publish_deb:
  stage: publish
  dependencies:
    - build_deb
  script:
    - deb-s3 upload --codename ${CI_COMMIT_REF_NAME:-unrecognized} --bucket ${STS_AWS_BUCKET:-stackstate-agent-test} $OMNIBUS_ROOT/pkg/*.deb

publish_image:
  stage: publish
  image: docker:18.06.0
  dependencies:
    - build_deb
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - cp $CI_PROJECT_DIR/outcomes/pkg/*.deb Dockerfiles/agent
    - TAG=${CI_COMMIT_SHA:0:7}
    - docker build -t stackstate/stackstate-agent:$TAG -t stackstate/stackstate-agent:latest Dockerfiles/agent
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push stackstate/stackstate-agent:$TAG
    - docker push stackstate/stackstate-agent:latest

#docker_test:
#  stage: docker_test
#  image: docker:latest
#  variables:
#    DOCKER_DRIVER: overlay
#  services:
#  - docker:dind
#  before_script:
#  - printenv
#  - docker info
#  script:
#    - docker ps
