stages:
- tests
- build
- publish

unit_tests:
  stage: tests
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - invoke deps
  - inv -e agent.build --race --precompile-only
  - inv -e test --coverage --race --profile --fail-on-fmt

# TODO: replicate remote docker tests
#integration_tests:
#  stage: tests
#  image: stackstate/stackstate-agent-runner-circle:latest
#  before_script:
#  - mkdir -p /go/src/github.com/StackVista
#  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
#  script:
#  - cd /go/src/github.com/StackVista/stackstate-agent
#  - invoke deps
#  - inv  -e integration-tests --race --remote-docker

filename_linting:
  stage: tests
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - invoke deps
  - inv -e lint-filenames

#docker_integration_tests:
#  stage: tests
#  image: stackstate/stackstate-agent-runner-circle:latest
#  variables:
#      DOCKER_DRIVER: overlay
#  services:
#    - docker:dind
#  before_script:
#  - mkdir -p /go/src/github.com/StackVista
#  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
#  script:
#  - cd /go/src/github.com/StackVista/stackstate-agent
#  - invoke deps
#  - inv -e docker.integration-tests


build_binaries:
  stage: build
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - invoke deps
  - inv -e dogstatsd.build --static
  - inv -e agent.build


build_puppy:
  stage: build
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - cd /go/src/github.com/StackVista/stackstate-agent
  - invoke deps
  - inv -e agent.build --puppy
  - ./bin/agent/agent -c ./bin/agent/dist check cpu


build_publish_deb:
  stage: build
  image: stackstate/stackstate-agent-runner-circle:latest
  before_script:
  - mkdir -p /go/src/github.com/StackVista
  - ln -s $CI_PROJECT_DIR  /go/src/github.com/StackVista/stackstate-agent
  script:
  - printenv
  - echo "======================================================"
  - cd /go/src/github.com/StackVista/stackstate-agent
  - invoke deps
  - git config --global user.email "circleci@stackstate"
  - git config --global user.name "CircleCI Stackstate"
  - apt-get install -y apt-utils libtool && apt-get install -y --only-upgrade libtool
  - inv -e agent.omnibus-build --base-dir ./omnibus --omnibus-s3-cache --skip-sign
  - mkdir -p $CI_PROJECT_DIR/outcomes/pkg && mkdir -p $CI_PROJECT_DIR/outcomes/dockerfiles
  - cp -r  /go/src/github.com/StackVista/stackstate-agent/omnibus/pkg $CI_PROJECT_DIR/outcomes
  - cp -r  /go/src/github.com/StackVista/stackstate-agent/Dockerfiles $CI_PROJECT_DIR/outcomes
  - deb-s3 upload --codename ${CI_COMMIT_REF_NAME:-unrecognized} --bucket ${STS_AWS_BUCKET:-stackstate-agent-test} omnibus/pkg/*.deb
  artifacts:
    paths:
        - $CI_PROJECT_DIR/outcomes/pkg/*.deb
        - $CI_PROJECT_DIR/outcomes/pkg/*.json
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/agent
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/cluster-agent
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/dogstatsd
        - $CI_PROJECT_DIR/outcomes/Dockerfiles/manifests
    expire_in: 1 week

build_publish_image:
  stage: publish
  image: docker:18.06.0
  variables:
    DOCKER_DRIVER: overlay
  services:
  - docker:dind
  script:
  - cp $CI_PROJECT_DIR/outcomes/pkg/*.deb Dockerfiles/agent
  - TAG=${CI_COMMIT_SHA:0:7}
  - docker build -t stackstate/stackstate-agent:$TAG Dockerfiles/agent
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  - docker push stackstate/stackstate-agent:$TAG

#docker_test:
#  stage: docker_test
#  image: docker:latest
#  variables:
#    DOCKER_DRIVER: overlay
#  services:
#  - docker:dind
#  before_script:
#  - printenv
#  - docker info
#  script:
#    - docker ps
