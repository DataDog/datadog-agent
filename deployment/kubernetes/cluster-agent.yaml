apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: stackstate-cluster-agent
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: stackstate-cluster-agent
      name: stackstate-agent
      annotations:
        ad.stackstatehq.com/stackstate-cluster-agent.check_names: '["prometheus"]'
        ad.stackstatehq.com/stackstate-cluster-agent.init_configs: '[{}]'
        ad.stackstatehq.com/stackstate-cluster-agent.instances: '[{"prometheus_url": "http://%%host%%:5000/metrics","namespace": "stackstate.cluster_agent","metrics": ["go_goroutines","go_memstats_*","process_*","api_requests","stackstate_requests","external_metrics", "cluster_checks_*"]}]'
    spec:
      serviceAccountName: stackstate-cluster-agent
      containers:
      - image: stackstate/stackstate-cluster-agent-test:master
        imagePullPolicy: Always
        name: stackstate-cluster-agent
        env:
          - name: STS_API_KEY
            value: "API_KEY"
          - name: STS_STS_URL
            value: "<STACKSTATE_BACKEND_URL>/stsAgent"
          - name: STS_CLUSTER_NAME
            value: "<CLUSTER_NAME>"
          - name: STS_COLLECT_KUBERNETES_EVENTS
            value: "false"
          - name: STS_COLLECT_KUBERNETES_METRICS
            value: "false"
          - name: STS_COLLECT_KUBERNETES_TOPOLOGY
            value: "true"
          - name: STS_LEADER_ELECTION
            value: "true"
          - name: STS_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: stackstate-auth-token
                key: token
          - name: STS_LOG_LEVEL
            value: "DEBUG"
          - name: LOG_LEVEL
            value: "DEBUG"
---
apiVersion: v1
kind: Service
metadata:
  name: stackstate-cluster-agent
  labels:
    app: stackstate-cluster-agent
spec:
  ports:
    - port: 5005
      protocol: TCP
  selector:
    app: stackstate-cluster-agent
