"""Agent specific BUILD file for bzip2."""

load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_cc//cc:cc_shared_library.bzl", "cc_shared_library")
load("@rules_license//rules:license.bzl", "license")
load("@rules_pkg//pkg:install.bzl", "pkg_install")
load("@rules_pkg//pkg:mappings.bzl", "pkg_files", "pkg_mklink")

package(
    default_applicable_licenses = [":license"],
    default_visibility = ["//visibility:private"],
)

license(
    name = "license",
    # This is the current SPDX known version of the bzip2 license
    license_kinds = ["@rules_license//licenses/spdx:bzip2-1.0.6"],
    license_text = "LICENSE",
    visibility = ["//visibility:public"],
)

exports_files([
    "LICENSE",
])

# only for test cases in //deps/bzip
exports_files([
    "sample1.ref",
    "sample2.ref",
    "sample3.ref",
    "sample1.bz2",
    "sample2.bz2",
    "sample3.bz2",
])

_PUBLIC_HEADERS = [
    "bzlib.h",
]

cc_binary(
    name = "bzip2",
    srcs = ["bzip2.c"],
    deps = [
        ":bz2",
    ],
    copts = [
        "-Wall",
        # -Winline is probably obsolete with modern compilers, but that is what
        # the upstream project uses.
        "-Winline",
        "-D_FILE_OFFSET_BITS=64",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "bz2",
    srcs = [
        "blocksort.c",
        "bzlib.c",
        "bzlib_private.h",
        "compress.c",
        "crctable.c",
        "decompress.c",
        "huffman.c",
        "randtable.c",
    ],
    hdrs = _PUBLIC_HEADERS,
    copts = [
        "-Wall",
        "-D_FILE_OFFSET_BITS=64",
    ] + select({
        #"@platforms//os:aix": [
        #    "-qpic=small",
        #    "-O3",
        #    "-D_ALL_SOURCE",
        #    "-D_LARGE_FILES",
        #],
        "@platforms//os:macos": [
            "-fPIC",
            "-O3",
        ],
        "@platforms//os:windows": [
            "/O2",
        ],
        "//conditions:default": [
            "-fPIC",
            "-O3",
            #"-Wno-deprecated-non-prototype",
            #"-Wno-unused-variable",
            #"-Wno-implicit-function-declaration",
        ],
    }),
    local_defines = select({
        "@platforms//os:windows": ["_CRT_NONSTDC_NO_WARNINGS"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)

cc_shared_library(
    name = "libbz2_so",
    shared_lib_name = "libbz2.so.1.0.8",
    win_def_file = "libbz2.def",
    deps = [":bz2"],
    user_link_flags = select({
        #"//bazel/platforms:os_aix": [
        #    "-qmkshrobj",
        #    "-Wl,-soname",
        #],
        "@platforms//os:windows": [],
        "//conditions:default": [
            "-Wl,-install_name",
            "-Wl,'@rpath/libbz2.so.1.0'",
        ],
    }),
    visibility = ["//visibility:public"],
)

pkg_mklink(
    name = "so_major_minor",
    link_name = "libbz2.so.1.0",
    target = ":libbz2_so",
)

pkg_mklink(
    name = "so_major",
    link_name = "libbz2.so.1",
    target = ":libbz2_so",
)

pkg_mklink(
    name = "so",
    link_name = "libbz2.so",
    target = ":libbz2_so",
)

pkg_files(
    name = "lib_files",
    srcs = [
        ":libbz2_so",
        # TODO(agent-build): These are silently ingored by rules_pkg.  We have to
        # fix that upstream, or find another method.
        ":so_major_minor",
        ":so_major",
        ":so",
    ],
    prefix = "lib",
)

pkg_files(
    name = "hdr_files",
    srcs = _PUBLIC_HEADERS,
    prefix = "include",
)

pkg_install(
    name = "install",
    srcs = [
        ":hdr_files",
        ":lib_files",
    ],
)
