load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

cmake(
    name = "openscap",
    cache_entries = {
        "ENABLE_PERL": "OFF",
        "ENABLE_PYTHON3": "OFF",
        "WITH_PCRE2": "ON",
        "ENABLE_TESTS": "OFF",
        "ENABLE_OSCAP_UTIL_DOCKER": "FALSE",
        "BLKID_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/util-linux/include",
        "BLKID_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/util-linux/lib/libblkid.so",
        "BZIP2_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/include",
        "BZIP2_LIBRARY_RELEASE:FILEPATH": "$$EXT_BUILD_DEPS/lib/libbz2.so",
        "CURL_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/include",
        "CURL_LIBRARY_RELEASE:FILEPATH": "$$EXT_BUILD_DEPS/lib/libcurl.so",
        "DBUS_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/dbus/include/dbus-1.0",
        "DBUS_LIBRARIES:FILEPATH": "$$EXT_BUILD_DEPS/dbus/lib/libdbus-1.so",
        "GCRYPT_INCLUDE_DIR": "$$EXT_BUILD_DEPS/libgcrypt/include;$$EXT_BUILD_DEPS/libgpg-error/include",
        "GCRYPT_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/libgcrypt/lib/libgcrypt.so",
        "LIBXML2_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/libxml2/include/libxml2",
        "LIBXML2_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/libxml2/lib/libxml2.so",
        "LIBXSLT_EXSLT_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/libxslt/include",
        "LIBXSLT_EXSLT_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/libxslt/lib/libexslt.so",
        "LIBXSLT_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/libxslt/include",
        "LIBXSLT_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/libxslt/lib/libxslt.so",
        "LIBYAML_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/include",
        "LIBYAML_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/lib/liblibyaml.so",
        "OPENSSL_CRYPTO_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/openssl/lib/libcrypto.so",
        "OPENSSL_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/openssl/include",
        "OPENSSL_SSL_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/openssl/lib/libssl.so",
        "PCRE2_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/include",
        "PCRE2_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/lib/libpcre2.so",
        "POPT_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/popt/include",
        "POPT_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/popt/lib/libpopt.so",
        "PYTHON_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/python3/include/python",
        "PYTHON_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/python3/lib/libpython3.8.so",
        "SELINUX_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/libselinux/include",
        "SELINUX_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/libselinux/lib/libselinux.so",
        "XMLSEC_INCLUDE_DIR:PATH": "$$EXT_BUILD_DEPS/xmlsec/include/xmlsec1",
        "XMLSEC_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/xmlsec/lib/libxmlsec1.so",
        "XMLSEC_OPENSSL_LIBRARY:FILEPATH": "$$EXT_BUILD_DEPS/xmlsec/lib/libxmlsec1-openssl.so",
        # CMake's check_include_dir doesn't allow for a specific path to be searched (AFAICS)
        # but we can shortcut the check instead
        "HAVE_ACL_LIBACL_H": "YES",
        "HAVE_SYS_ACL_H": "YES",
    },
    env = {
        "PKG_CONFIG_PATH": "$$EXT_BUILD_DEPS/librpm/lib/pkgconfig",
    },
    lib_source = "@openscap//:all",
    out_shared_libs = select({
        "@platforms//os:linux": [
            "libopenscap.so",
            "libopenscap_sce.so",
        ],
    }),
    out_binaries = [
        "oscap",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//deps/dbus",
        "//deps/libacl",
        "//deps/libattr",
        "//deps/libgcrypt",
        "//deps/libgpg-error",
        "//deps/librpm",
        "//deps/libselinux",
        "//deps/libsepol",
        "//deps/libxslt",
        "//deps/popt",
        "//deps/util-linux",
        "//deps/xmlsec",
        "@bzip2//:bz2",
        "@curl",
        "@libyaml",
        "@pcre2",
    ],
)
