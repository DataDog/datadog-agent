From efa6a5f60fdff0102a2f71993358efd1993a1e9b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hugo=20Beauz=C3=A9e-Luyssen?= <hugo.beauzee@datadoghq.com>
Date: Wed, 15 Oct 2025 09:57:35 +0200
Subject: [PATCH] fix c++ x86_64 header locations with our ctng toolchain

We always prefix the headers with the triplet, not only for arm
---
 toolchain/defs.bzl | 36 +++++++++++-------------------------
 1 file changed, 11 insertions(+), 25 deletions(-)

diff --git a/toolchain/defs.bzl b/toolchain/defs.bzl
index 7c8787f..2560783 100644
--- a/toolchain/defs.bzl
+++ b/toolchain/defs.bzl
@@ -75,31 +75,17 @@ def _gcc_toolchain_impl(rctx):
         ]
     ]
 
-    cxx_builtin_includes = []
-    if target_arch == ARCHS.x86_64:
-        cxx_builtin_includes.extend([
-            include.format(
-                gcc_version = rctx.attr.gcc_version,
-                include_prefix = include_prefix,
-            )
-            for include in [
-                "%workspace%/include/c++/{gcc_version}",
-                "%workspace%/include/c++/{gcc_version}/{include_prefix}",
-                "%workspace%/include/c++/{gcc_version}/backward",
-            ]
-        ])
-    else:
-        cxx_builtin_includes.extend([
-            include.format(
-                gcc_version = rctx.attr.gcc_version,
-                include_prefix = include_prefix,
-            )
-            for include in [
-                "%workspace%/{include_prefix}include/c++/{gcc_version}",
-                "%workspace%/{include_prefix}include/c++/{gcc_version}/{include_prefix}",
-                "%workspace%/{include_prefix}include/c++/{gcc_version}/backward",
-            ]
-        ])
+    cxx_builtin_includes = [
+        include.format(
+            gcc_version = rctx.attr.gcc_version,
+            include_prefix = include_prefix,
+        )
+        for include in [
+            "%workspace%/{include_prefix}include/c++/{gcc_version}",
+            "%workspace%/{include_prefix}include/c++/{gcc_version}/{include_prefix}",
+            "%workspace%/{include_prefix}include/c++/{gcc_version}/backward",
+        ]
+    ]
 
     target_compatible_with = [
         v.format(target_arch = target_arch)
-- 
2.43.0

